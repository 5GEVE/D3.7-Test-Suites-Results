<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20200512 15:46:16.869" generator="Robot 3.2.1 (Python 2.7.17 on linux2)">
<suite source="/home/ubuntu/TestD3.7/NSD Management Tests/Test 4 - NSD Onboarding from single site - OSM/NSDOnboardingFromSingleSite.robot" id="s1" name="NSDOnboardingFromSingleSite">
<test id="s1-t1" name="NSD Onboarding from single site - OSM">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Onboarding NSD from single site - OSM</arg>
</arguments>
<msg timestamp="20200512 15:46:17.136" level="INFO">Onboarding NSD from single site - OSM</msg>
<status status="PASS" endtime="20200512 15:46:17.136" starttime="20200512 15:46:17.135"></status>
</kw>
<kw name="Create Osm Session" library="keywords">
<arguments>
<arg>${OSM1_URL}</arg>
</arguments>
<assign>
<var>${osm}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>osm</arg>
<arg>${url}</arg>
<arg>verify=False</arg>
<arg>disable_warnings=1</arg>
</arguments>
<msg timestamp="20200512 15:46:17.139" level="INFO">Creating Session using : alias=osm, url=https://10.30.8.83:9999/osm, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20200512 15:46:17.141" starttime="20200512 15:46:17.138"></status>
</kw>
<msg timestamp="20200512 15:46:17.141" level="INFO">${osm} = osm</msg>
<status status="PASS" endtime="20200512 15:46:17.141" starttime="20200512 15:46:17.137"></status>
</kw>
<kw name="Get Osm Token" library="keywords">
<arguments>
<arg>${osm}</arg>
<arg>${OSM1_USERNAME}</arg>
<arg>${OSM1_PASSWORD}</arg>
<arg>${OSM1_PROJECT}</arg>
</arguments>
<assign>
<var>${token_id}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type</arg>
<arg>application/json</arg>
<arg>Accept</arg>
<arg>application/json</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20200512 15:46:17.145" level="INFO">${headers} = {u'Content-Type': u'application/json', u'Accept': u'application/json'}</msg>
<status status="PASS" endtime="20200512 15:46:17.145" starttime="20200512 15:46:17.143"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>username</arg>
<arg>${username}</arg>
<arg>password</arg>
<arg>${password}</arg>
<arg>project_id</arg>
<arg>${project}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200512 15:46:17.147" level="INFO">${body} = {u'username': u'admin', u'password': u'admin', u'project_id': u'admin'}</msg>
<status status="PASS" endtime="20200512 15:46:17.147" starttime="20200512 15:46:17.145"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${osm}</arg>
<arg>/admin/v1/tokens</arg>
<arg>headers=${headers}</arg>
<arg>json=${body}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200512 15:46:17.219" level="INFO">POST Request : url=https://10.30.8.83:9999/osm/admin/v1/tokens 
 path_url=/osm/admin/v1/tokens 
 headers={'Content-Length': '65', 'Accept-Encoding': 'gzip, deflate', 'Accept': u'application/json', 'User-Agent': 'python-requests/2.23.0', 'Connection': 'keep-alive', 'Content-Type': u'application/json'} 
 body={"username": "admin", "password": "admin", "project_id": "admin"} 
 </msg>
<msg timestamp="20200512 15:46:17.220" level="INFO">POST Response : url=https://10.30.8.83:9999/osm/admin/v1/tokens 
 status=200, reason=OK 
 body={
    "expires": 1589301977.160267,
    "id": "k2FTYC4NhdUkNa4RhePo2H2OHchoi1p5",
    "project_name": "admin",
    "admin": true,
    "remote_port": 39810,
    "user_id": "040cf677-a10b-4e4f-8e3d-bdef8937c560",
    "remote_host": "10.0.0.2",
    "_id": "k2FTYC4NhdUkNa4RhePo2H2OHchoi1p5",
    "issued_at": 1589298377.160267,
    "username": "admin",
    "roles": [
        {
            "id": "bd284e86-922e-4d34-9246-025a529f9d01",
            "name": "system_admin"
        }
    ],
    "project_id": "ef4ccc39-2ba3-4421-9796-697b6b62b5dc"
}
 
 </msg>
<msg timestamp="20200512 15:46:17.220" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20200512 15:46:17.220" starttime="20200512 15:46:17.148"></status>
</kw>
<kw name="Check HTTP Response Status Code Is" library="keywords">
<arguments>
<arg>${response}</arg>
<arg>200</arg>
</arguments>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${expected_status}</arg>
</arguments>
<msg timestamp="20200512 15:46:17.223" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200512 15:46:17.223" starttime="20200512 15:46:17.222"></status>
</kw>
<status status="PASS" endtime="20200512 15:46:17.224" starttime="20200512 15:46:17.220"></status>
</kw>
<msg timestamp="20200512 15:46:17.224" level="INFO">${token_id} = k2FTYC4NhdUkNa4RhePo2H2OHchoi1p5</msg>
<status status="PASS" endtime="20200512 15:46:17.225" starttime="20200512 15:46:17.142"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Accept</arg>
<arg>application/json</arg>
<arg>Authorization</arg>
<arg>Bearer ${token_id}</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20200512 15:46:17.226" level="INFO">${headers} = {u'Accept': u'application/json', u'Authorization': u'Bearer k2FTYC4NhdUkNa4RhePo2H2OHchoi1p5'}</msg>
<status status="PASS" endtime="20200512 15:46:17.226" starttime="20200512 15:46:17.225"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${osm}</arg>
<arg>/nsd/v1/ns_descriptors</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200512 15:46:17.544" level="INFO">POST Request : url=https://10.30.8.83:9999/osm/nsd/v1/ns_descriptors 
 path_url=/osm/nsd/v1/ns_descriptors 
 headers={'Content-Length': '0', 'Accept-Encoding': 'gzip, deflate', 'Accept': u'application/json', 'User-Agent': 'python-requests/2.23.0', 'Connection': 'keep-alive', 'Cookie': 'session_id=13d4b112f7bc56a5b5eaafc20e6c0b399ec0e920', 'Authorization': u'Bearer k2FTYC4NhdUkNa4RhePo2H2OHchoi1p5'} 
 body=None 
 </msg>
<msg timestamp="20200512 15:46:17.544" level="INFO">POST Response : url=https://10.30.8.83:9999/osm/nsd/v1/ns_descriptors 
 status=201, reason=Created 
 body={
    "id": "785b339e-f028-479d-a980-e6161e379e72"
}
 
 </msg>
<msg timestamp="20200512 15:46:17.544" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" endtime="20200512 15:46:17.544" starttime="20200512 15:46:17.227"></status>
</kw>
<kw name="Check HTTP Response Status Code Is" library="keywords">
<arguments>
<arg>${response}</arg>
<arg>201</arg>
</arguments>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${expected_status}</arg>
</arguments>
<msg timestamp="20200512 15:46:17.547" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200512 15:46:17.548" starttime="20200512 15:46:17.546"></status>
</kw>
<status status="PASS" endtime="20200512 15:46:17.548" starttime="20200512 15:46:17.545"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Accept</arg>
<arg>application/json</arg>
<arg>Content-Type</arg>
<arg>application/zip</arg>
<arg>Authorization</arg>
<arg>Bearer ${token_id}</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20200512 15:46:17.550" level="INFO">${headers} = {u'Accept': u'application/json', u'Content-Type': u'application/zip', u'Authorization': u'Bearer k2FTYC4NhdUkNa4RhePo2H2OHchoi1p5'}</msg>
<status status="PASS" endtime="20200512 15:46:17.550" starttime="20200512 15:46:17.548"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>${NS_PACKAGE_OSM}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200512 15:46:17.551" html="yes" level="INFO">Getting file '&lt;a href="file:///home/ubuntu/TestD3.7/packages/ns_osm.tar.gz"&gt;/home/ubuntu/TestD3.7/packages/ns_osm.tar.gz&lt;/a&gt;'.</msg>
<msg timestamp="20200512 15:46:17.566" level="INFO">${body} = \x8b\x9c\xb4\xba^\xed\xbbT\x9c_\x96/ZX	\xee^\xa7p'\xb8\xbb\x9c\x82\xe0\xee\xee\xeeA\xee\xc1]\xdc\xee\xeepI\xf7\xcc\xbc\xb9s\xdf\xdc\xf7\xef\xee\xb5zV\xbf\xf5\xdf\xac\xaaS\xdf&gt;\xb2\xb...</msg>
<status status="PASS" endtime="20200512 15:46:17.567" starttime="20200512 15:46:17.550"></status>
</kw>
<kw name="Put Request" library="RequestsLibrary">
<doc>Send a PUT request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${osm}</arg>
<arg>/nsd/v1/ns_descriptors/${response.json()["id"]}/nsd_content</arg>
<arg>headers=${headers}</arg>
<arg>data=${body}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200512 15:46:17.747" level="INFO">PUT Request : url=https://10.30.8.83:9999/osm/nsd/v1/ns_descriptors/785b339e-f028-479d-a980-e6161e379e72/nsd_content 
 path_url=/osm/nsd/v1/ns_descriptors/785b339e-f028-479d-a980-e6161e379e72/nsd_content 
 headers={'Content-Length': '15566', 'Accept-Encoding': 'gzip, deflate', 'Accept': u'application/json', 'User-Agent': 'python-requests/2.23.0', 'Connection': 'keep-alive', 'Cookie': 'session_id=13d4b112f7bc56a5b5eaafc20e6c0b399ec0e920', 'Content-Type': u'application/zip', 'Authorization': u'Bearer k2FTYC4NhdUkNa4RhePo2H2OHchoi1p5'} 
 body=\x8b\x9c\xb4\xba^\xed\xbbT\x9c_\x96/ZX	\xee^\xa7p'\xb8\xbb\x9c\x82\xe0\xee\xee\xeeA\xee\xc1]\xdc\xee\xeepI\xf7\xcc\xbc\xb9s\xdf\xdc\xf7\xef\xee\xb5zV\xbf\xf5\xdf\xac\xaaS\xdf&gt;\xb2\xbf\xb3\xfbl\xf9\x8a\xe22\xe4\xe1\xe1\xe0\xe1\x82\x80x8\x8d\xd9@\xecF&amp;&amp; #\x8817\xc8\x84\x9d\xc5\xc2b\xc8b\xc2
af\xfcc\xc4\xcc\xcc\xcc\xc5\xc1A\xf6\xbb}\xa6\xff\xda\xfe\xf5\x82\x85\x8d\x93\x83\x93\x83\x8d\x85\x8b\x8d\x8b\x8c\x99\x85\x9d\x8d\x8d@\xc6\xf1\xca\xfdC\xe4\xec\xe8d\xe8\xf0|+\xff\xe8:\xffus\xff"\xc4\xf5G\xf0\xb7\xb6\xb51w\xb2u0\xb71\xfb\xbbL\xe1o\xc7\x9f\x93\x83\x95\xfdO\xfc\xff\xf4\x87\xf0\xff#\x83\xf4mM\xdd\xad\xad\xfeO\xcf\xfa\xe0dg\xff\xad.\xe6\xff\xdc\xfe\x85XX\xd9Y\xfeVV6V2fVNv\xd9?\x8c\xc9\xa1\xc7\xdf
bkc\xe8`b\xfb\xdf\x8d\xfb\xff\xea\xff\xc5!&gt;#26t2\xb4\xb25\xe3E$#{\xbe\xfc\xdd\x80\xc8\xccMx\xc9\x80{\xe0\xf3p2\xb2\xe7\xe9\xb6\xcfl\xdc\\xf5d\xb4\xb31\xfbk\x87\x8d\xa15\xe4\xb9\xc3	\xe2\xe8\xb2q\xfc+\xcfbcb\xeb\xf0\xccU\xd0\xd4\xf8w\x8e\x83\xa3\xb9\xad\xcd3\x8b\x85\xf1\xdfV4\x818;\x98\xdb9\xfd\x95\xad\xa0\xfa\x8c\xdf3/\xf7\x9fd\xa6\xcf/16F\xae\xbft\xfc\x9b\xc7\xb6\xcf2\xff_\xe4\xdb\xda8:\x99;9Cl\x9c@.6\xa6\xd9\xf1\xef=[C\xac\x8d \xbfY s\x88/\xcb_z\x9e\xef\xefy\xc8\xdc\xe41}^\xcc\x90\xd3\x94\x9b\x83\x9d\x8b\xc4el\xcabg1\xe1\xf1\x98r\x83\x99y\xb89y\x8c\x8d\xd9\x8c!\xc0\x9b\xf9\xdb\xc2\x9c@F\xee \x88\xa9\xa1\xb3\x95/\x99\xa9\xa1\x95#\xe4\xaf\xbb\xb6\xfa\xd1Q\xb7\xb5\x99\xb5\x93\xbe\xc4\xe9\xdf\xe7\xfe\xdb\xbd\xffW\xb6\x93\xbb\xddo\xb6\xb8\x9c\xb0\xc2H\xf9\xcf{\xfd\xaf\xe3_\x83\x9e\xaf]m,\x9fU\xe7\xe0\xf9\xcf\xbbzV\x86\xc4\xf8\xb7\x9aAv\xb6\xe6\xcf\xf9\xbd\xc7\xf0\xaa\xe4\xaf\xf8w\xb5\xfc\xdf\x96 Bl\xd9\x80\xff\xfb\xc8\xbfQ\x85\xff\xd3\xe4\xff\xe7\xf4\x87\xfc\xff_\xcf\x98\xe3\xdf\x9b\xfe\xf1\xff9\xfc\xff\xff\xf4\x87\xf07\xff\xed-\xff\xfe*\xe0o\xc7\x9f\x83\x9d\x83\xf5O\xfc\xff\xf4\x87\xf0W\x93\xff\xbbe\xfc?\xf9\xdf\x83?\xdb\xc5\x9f\x95\x85\xed\x9f\x9c\xff\xfd\xa3\xeb\xfc\x8b\xe2/	\xb1\x818:AL\xc8\x8c\xdc\xc9\x9es12\xd1\xbf&amp;\x82\xcf	\xc2\xff\xf4\xad\xfdI\xff\xfaC\xe7\xff9o\xd3\xa6\xe6\xff\xb4\xfa\x9f\x9d\x83\xe3O\xff\xff\xcf\xa0?\x84\xbf\x8d\xe3?\xff\xdf\x83?\xf3\x9f\xcf\xfe)\xf47\xe4\xff\xb9\xb0\xff\x9bd0\xff_\x9f\xff\xb0q\xb03\xb3\xff\xc6\x9f\x85\x95\x8d\xed\xb9d'c~\xfe\xc0\xf2\xe7\xf3\x9f
\x85*)H\xa2 \xfc\xf6(\xd2Rb*\xcf\xed\xc0\xef\xd7+\xd8\xe7w /\xcf\xe0so&amp;,/TG#\xdd"&lt;_\x93K\xa9\xc8T\x80op\xfb\xcc\xf2\xdd~\xd6\xe43^\xbbo
\x80k\x97\xd1\xac\xfc\xee\xb9\xe3\x85\x91\xac\xa4\xe0\xe9\xf7_N[Q\xfc3\xe7\xa5\x93\xb4\xbc\xf8\xcb58XJ\xeeR\x96\xea\xf0\xe7	\xaf\xa4\xc5\x84\xd5\xdc\xf4\xda\S\x88\xa6\x9f\xf8\xb7V\xa0\xbbY\xf9r\xb0b]\xc0\xd4V9f\xaa4\x83cW\xeb\xa3\xc7\x95\xd9\xf9\xbe\xb7\xfeB)D\xf0\xfe\xbd\xdd/\xd3\x91\x80\xc6\x84\x84\xfe\xae\xd6_\xc5&gt;\xc5\xa0\xc5	\xd1\x90}R\xc2\x95s\xd5X\xf6\xbb\xeb\xcf\xc4\x95\xa1pv\x96\xed&gt;:\xff\xdc\x8fS^\xadh^\xe5\xddZq\xe7OV\xc3F!\x98" \xd9FB!P\xd5D\xd9\xf9|\xf3#\xdeFJ\xf7\xe4\x931!\xfa*\xdf\xae\xc0\xc2\x86\xc0\xd4\xe4j\xc1 \xeac*\xd3A\xce&gt;)/\x94h\x9fR\xa4Z\xc6K\xa0b7\xe3Yp\xe8\xe8\xb1\x9f\xda\xc1\x9433b\xa8\xa1\x9b\xbdV&gt;55\xa1\xc7\xec\xfa
P\x9c;K\x9f]v&lt;\xd2\x8f^\xc2*:|L\x81\xe2r\x98K_\x98\xdetV\x91\xac\x8e\xbd\xb2rb\xef\xa3u\x88^\x81\xb1\xd1\x8dG\x84\xf4G\xaf\xb2BR\xce	h\xde
k\xf0x;\\xe6M*\x91\x8d\xd1O\x93`\xa9%Tp\xe8]\x91\xf0{=\x84\xaf\xbc\xb6Z\xba\xab,#\xab\xc2po\xc4\xddl\xbd3\xf5$\x92a\xf7\xb7K:j\xa21
(Cz\xc7\xdeW\xed\x89\x93\xae\x84\xe2\xeeA\xdehn\xe5\x81\xc3T\xbb\xd8-\xadl\xbf\\xb0\xb4'\xdajx\xb5\x97\xa5\xcetR\x91\x95\x95\x95g0B	\x80\xb0ci\xffP\xd4^u~b\xa6NJ\xce\xd1l\xab\xf6\xe3\xb3n\xff\xc8\xd3\x83\xeb\x93\xc5}X\xdd\x8c\x88\x90X\xea\xab\x91}\xf0\xbc\xe0\xfd$Vl9.\xf9\xcdQ\xb8!\xab\xa6\x84\xf9\xa8\xa0\xf7AH%1\xab\x9cx\xaba\xd0\xcc(\x9dmD\xf4j\xc5\xf3(AUA\xab\xd1\xee\xa7\x90~e\x90q4\xffeY\xcd4\xaa\x84\xa9\xb1\xdd[\xa4^\xea\x92*\xe0&lt;\xacz\xb6\xf0\xb9\xe7R&amp;&lt;\xa6rX|\xc8\xaa`I\xf9\xf1N\xd4\xf5\xbe\x81\xe9`\xb5!\x9a
\xe9\xa1\xabJjw|\xd2?\xfc\xb8\xdb&amp;\x8fN\x8a$T\xfcC\x8b\xe6\x9f\xa3f\xa8*R\xab\xaa\xba\x8f\xa98W7\xaf\xaeF\xc1\x8cY\xd5{\xa7\xec\xd1\xbf\xd2\xf8x;\x99\xcd\xc9\xc5\xc5\xb7eQ0\xadP\xa3\xfb,\xfd\xf1f#Y2\x8a(\xb5\xd0\x9c\xa8\xd2	\xac
gX"\xd3\x98\xf0\xf9\xda\x8c\xa9\xe3
U\xd0\x9d\x93\x91\x9d\xaf\xd2\x80NYh\xa1o\x8f\x80\x9csl\x94uux7F\xad\xb8l)\xb6\x9b\xa9	\x961x\xa1&amp;Tv\xe4\x92}\xf3\x98\xbd\xa2I@\xd9[\x81\xa5.\xd6\xc7U\xa2\xa4\x92\x96FN\xcdcr\xfexQ)\xf1\xb0N\xca$K)1\xa2\xfe\xad\x93\xea3t\xc5\xd3\xf2`=Z\xf0\xe3wij|c\xca\x92\xe30\x8c\xd8\xabG\xdc\x8e\xeb^\xdc\xf6\xe3@\x86a\x91'\xfe\xa7W\x94\xfao\x85\xe0\xa9\x94\xb0DO\xae\xeel\xcf\x82#\xa4\xf9\x94\xd8i\xc35\x98\x96K\xd4O\x82\xb1\xf2S\x8bY\xc2\xe7C\xaf\xf8;Z\xb4\xc6d\xc5\xbe-\xc7%
\xe7\xda\x9b\xdc\xf1IE\xa76\xb8\xc9\xdf\xcd\xfa\x89\xf9J\xa5\xaa\xb5\xd3&gt;n\x99\xe1\xb2\x9f-\xc3\xf6\x8f\xf1)\xadh\xd8\xd7\xd8\x8diYj\x94k;?\xdel]=\xbc\xb7\xfc\xc4\xd2\xe7\xf9\xd44\xee}\x88\xa4\xed\x95P\xbb\xa6\xbd\xa2\xf2\x82Y\xbaM\xb5\xe7\xb3\xb1\xe4\xeb%\xe0\x8em!v\xaf\xba\xa3/\xb2[\xcdt9\x9d\x9f\xa50\xbcN\xb1Z\xc5\x94\xfc5&lt;\x96\xd9z\xe4\xa2/h\xc4\xb7Jn\x95\xe75\x8bB\x80\xd19Y\xa9\x97\xf7\xb2\xdb\x84\xbe\xc1%&lt;\xe1\xe0&gt;+\\xcbP4\xf4\xbd/m[\xd1\xc5\x95\xf1\xeaP\x9c\x96\xa8:G\xb4\x92\xac[\xeaU\xe5`\xd0\xd5\xe8-\xa8r	\xee\xc4\xfcM7S,R\x9dD\x84\xa3\xec\xab\x94\xad_X\x82\xd8\xcfv\xbf\xb1\xee\xbf\xf4\xc9x\xeaYJ$\xff\xd5z\xee\xdd*\xf2\xe2W\xcc\xca\xf5N\x9b\xcb\xf2\xb7\x99\xa1)\xeb1\xba_9\x9e0\xcf\xdc\x96\xd3X\x9eb\x9c\xcd\xb4\xc5D\xfd\x8a\xfcS\xa8&gt;\xd7\xa2\xa6o\xa0@\xa8\xf0\xcb\xc2d\xdb6\xe7\xa2L\x87\xb1T\x96\xf3\x82\xa4-X\x83H\xb5\x9e\x87\xe5N\xe3\xa7\xf1O\x9f\x87\xde\x8c\xc8}\x9f\xfc\xe6G\xaa\x87Z\xb0\xaf\x97\xe7\xb09~\xeb\xedH\x9b&amp;O\x8dT\xd1\xf5\xd4\xc6\xe6\xec\xe9\xd3\xd8?\xceu9-Y\xcf\xa5M9\x93\xe3$\xc2\xc7\xc4\x868m\xda\xefR:R\xef\xda!\xce\x9dq\xea\xae\x92\xe9Pm\xcb\xbe\xa7\xfb\xb3LG\xb1\xb7@a\xf0MdR\xdd\x8c\xe7S\x83\xcf]\x83\xfe\xed\xf7\xe4G\xd4\xe8iMMx4d\xdfRER.\xd3\xbb\xb9\x9b\x91\xb0\xedup\xb4\xd8\xd8n\x9a?\xc5\x84\xec\xcb\x98\xc6\xf5\x9d'\x8fp&gt;a\xcd\xba\x86a\x9a jJ\xc4U\xe1&gt;.}4\xf0\x99si\xa7\x97\xc1\xb4\x97\xb1OL\xd3\x87z\xd4\x95\x8d\xe9\xdfw\x94I\xb5Ao\xca?hYNF&gt;\xb3\x83\xda\x9bB\xe0\xef\x9c.f;\xeeO\x87\x95\xb1.&gt;2\xa7\xb5\x80_f0bY\xfax\xba\xdf\xf0-y\x9d\x8d\xfc,^\xf2z\x9cWW\xbe\x8c\xach\xb8\x90\xe85&gt;&amp;\x9c\xd0D\xc5\xc0\xc4\x87\xa8\xdfM\xb6i\x91SQ\xa6\xf4\xac\xdcL\xec=\xd5\xe4\xf3\xd7\xe3\x8c\xbd\xd7\x9b?GN\xe8\x82k\xdeHxp\x9d\x8b\xd2\xd2\xde\xe4\xecJ\xf3j(Q\xa2\xa8Z\x93U\xce=\xfe\xeb:\xb9^))'2f!\xa7f	\xb9X\xf2\xd1\xb4\xcc\xf6&lt;l\xfam\xbeW\xed\xbc,\xe5\xfePV\xc7*\xc5\x86%\x87\xe1cl}\xcd\xe0w\x8a^\xfeU\x88\x9f`6\x8fP\xe7m\xdf,\xc0X\xaa\xc7#L\xa18\xfd\xf0\xa5\xf9*\xdc\x98\xf9\xfd\xb6\xedN\x8f!\xf7,\x98U\xe8J\xd5\xc8\xd4&lt;9\xb1]\xdf\xdfYDT4\x93\xde\x8a\x9e2\xe5\x9b\xf1*\xd7\xf9zJ\x90\xf1\xa3\xe9c\xd8@C]&amp;.\xc2m1\xa2/4\xcbu\xc5\x9d\xe3\\x95\xfc\xcb\xd7\xf3\xb4\xc7\xd1\xd5\xfb\xd1\xdf\x87\x90 \xcb\x8b\xd8\xc4\x80\x80\x94c?4\xaa\xc4us\xae\xeb:\xdf\xd7\xccn&lt;&amp;\xc8!'\xc3xz,4\xf5++k\xd9}+\xde\xb6Ksh\xd1II\xb89\xaf	\x8e\xb8\xf9Nn\xbce\xce%\xab!\x88\x89\x83(\xcb\xebj\xfd\x8c\xbb\xd3g|]2*fq\xf0\xd7B\xdc\xdcM\xd2\xb1q\xdfL5\xf3\xc84\xf8(\xf66,\x8faX"\x9a\xc4{\xd4\x80\x9a\xda\xb4\xf9\xadGY\xd4d\x8e{#3\x98C\xdf~\xd7\xcd$k \xc6d:\x88\xbe\x85\(\xf4\x9d\x94nX\xfeM\x92~\xc7\xc3\xed\xda4'c\x88,\xcc\xe4\x9d\xd3+1\xd8,\xaf\xcd\x80j
y\xaa4\xa9\xd4\x80\xf2\xae.42\xf8@\xdf\xb8\x95\xd0\xc8\x8b\x9dzU\xaeq2i\xfe\x80J\xa5#e$[\xec\xae\6\xb3\xb1\xd6\xcd4\xcb\x89ux\xcb\xbc\xf2\x95\x9f\xbf~\xc6\xf7G\xe0cM\x8a\xc5\xb9\x9d\xbc\x9fU\x80\xf8\x88\xf8\x82y$\xb5\xff\xc9\xf3\xb8x\xfcP\x90$&gt;\xf3\x8b\xf8\xee\xc0\xf7\xd0\xd2i\xc3\xc2g\x90\xc2KJ\x88l\xf5\xc83\x80\xdd\x91\xafv\xbet,\xcb\xb7b,BG8H\xba\xba\xf9-\xef-T,'@?p%z\xdc\xc3]\xba%\xc5\xab\x8fN	[\xa9\x8e"\xa1\xee\xbc\x8f\x9a\xa9\xf5\xb8K\xa5D\xad\x9b\x9b\xcfw\xc2L\xf0\xa0v\xb2\xfd\xba\x97\xe9\xc5M\x9eT\xe4 p\xfa\xa5_P\xc5\xf4\xa8\xd9~\xbd&lt;a\x91\xf6@\xb6\xf5wG\xd8\xa0r\xf5\xce\xcfY\x81\xc6-\x9fC\xc2\xa2\xed\xd9\xe0\xb3\xb7}"\xba\xb3\x82DU\xebO&lt;n\x92%\xaf\xe1\xe3\xd0\xed\xf5\xacE\x89\xe7C\xbe$&amp;\xe6\xe2\xca\xa7'v\xe2\xa9$M\xc5\x84\x94kK\xa6\xf6\xa5\x94\xa8=nru\xbc\xfe9\xf1)jN-d\x80\x87\xcbi{b\xd1\xb6\x83Xe\xbcUx\x97\x86\x90\x94?\xb9\xb8,\x89c\xf3\xce\x98\x81\x97O\xe8&amp;R\x9di\xff'\xc0\xf1\xe0\xb3\xed\xf8M\x96\xe3w\xae\xcf~j\xaffX\x84\xe9g3.N\x96\x83\xca\xed\xa74?\x9b5\xd9h\xc1\xa8\xa8\xd2Jt\xa4?\xac,+\x8e\xbf\xec/\xc1\xe8\xd9\xc8\xdeA\x8f\xe5\x8e\xc2e\xd0\xb4{:\x9f\x8b\x90\xf4\xe9E\xee\xcfftl\x97\x9dguk\xc2\xf3&gt;\xe4P8\xc4\xee\xd1\xa2\xc2\xbf\xa6\x96g^&gt;\xf18mM\xbeY\xees\x85$\x81\xc8#\xf3\x866\x80\x92\xc3\xeaI\xd4\xef\x90\x8eb\xc4\xa1\xb0uUJn
CY\xae]\xb30\xed\x84&amp;\xb1\xbe*\x94\xa5\x9d'	\x92\xab^m\xd5\xf2\xad[|l\xad\xdfq\xf56d,\xad\xcb\xb0\xbb4V\xee&amp;\xf8\xe8\xf5od\xf0\xf0\x91\x9d\x94\xf4N\xb9\x8e\xfb\x98\xe1\x81\x9fM\xf0oj&lt;Q\xf0%R\xd9\x80So\xab\xa4B\x8b"\xb4\xc3P\xdf	&gt;\xe12\x81(\x8d\x92\x9bFJ\xcfH\xe4\x92\x94\xb8Vo\xf3\xf4\xb9\xf6qQI\x9a\xdf\x9a\x96t\xbcFt\xcb\xe3\xd6\xfa\xce\xa8\xc1\xff\xee\xa5oW7t\xf7W\xaemV!-\xfa\xc3\xfd\x96`6\xa7\xb5v
!\xc9v\xa3|\x97\xb6e\xb9\xf3
&gt;\xeb\xaf1\xbe#d\xd2\xcb\xcb_\xbb\x92\xde\x81\xd8\xcc\xf0\xd4_f'f\xd2\xb1\xb5x\xd6\xe1\xf7\xa2\xd0`\x8a5B\xb4M\x98A\x97\x8bZD\xc9j\xecA\xb0\x96:\xe2\xb4\xe0\xed\xd1"y\xbc6b\xe7\xd0\x87\xa7Vf\x88\xb9L!\xff\xd3c\xc7\xbb\x9a\xaf\xdanG\xd0\xc3\xd6`\x9e\xce\x8d\xe1d\x9f#\xcf\xd5\xbd\xbb\x9fo\xe6\xc5Z\xaf:O\xe5SY!\xc9\xba.%7?\x82\xab)+`\xbe\xb2\xf2\xd9\xeb\xda]M^\xa7%jHbM\xffH\x8d\xa5!&lt;bU\xb5J{"\xb1\xf1\xf8\xe1\x9c\x83\xf0\x82\xec\xb0T\xfbs\xe1/:\xbeZ1\xd7n\x92v\xb8\xba\x88\xc4R\xa0\x9f|\x85\x9b\xdb\xa5\x8e%\x9d4\xd1t%)\xa6\xf6G\xd3\xfbF;C\xdb\xec6*	J\xeeNUH8O\xe7W\xc0\xd7\xaf\xbb\xc4f\xd1\xab\xf5%Mks1\xbf\xd8\xb5\x93X\x8b^P\xcd\xd1YX\xdc\xd6 \x91\xba9KwQa\xfbU\xb41\x86\xa8\xd1\xee\x8bJ\xf8\x9c\xc4x\x99\x99\xceD)8\xeat\xf69cG0\xea\x89k(dT\x99\x9e\xe9\xe6^\xfe:\xe1\xbf?\xee|\xbaE\x84\xb3\xc8\x87\xc6\xe0\xb1=\xdb\xee\xb3A\xe7IP\xd9a\xce;t}\xc9\xd7\xd5s\xc1\xff\xc6{S\xbb\xfc\x93\x8e\xacZ\xdb\x94\xc6cevT\xbc\xc7O\A\xf6\xc01\x9e\xc4\xcd\xd1\\x83@K\xe5\x82D\xc0\xff+\\xc3"\xf7_\xcbl\xe2\xfa@Yy1\x9aP\xed\x91\xcf \xd8\x80\x9fr\xa9\xe1\x83L\x8f\xa7\x9dLz\x9a\x80\xefS\x9eR\x85\xcd'\xca"GbR\x95:m\xb8\xef\xbe\xa9\x9e\xd4\xe9\xa5\x9eb=#\xe4Y$S&lt;\xee\xa7\xbf2]h\xe5'A\xeb\xf0p:\x8722F!\xbdML$\xd5\x93;\x98\xd7\x8c\xd3\xc5\xe2`\x91s\xfb\x9c\xcf\\xbe]\xb0\xb04\xbd\xb2j9Z\xe1\xcd&gt;\xd7\xb0\xc2\xf0"\x80\xd7\xe6Wp\xa6\xdc\x95\x8b\xf5s\x83\xd9\xf3\xa4S\xb4a\x88iC\xd3\xba\xcd//\xb0\xdc\xb1\xa9P\xaby-\xedq\x8d\xe8\xcc,`$4\x98k.\xdf\xf3\xa5\xb7\xc6"\xd7\xe7\x9a\xee\xe3\xa1\xcb\xed\x8dS\xf1\x8a7{\xfaO\xb6c'8\xc6H\x88H\xbb\xd8\xd8\xe1C	\xe35\xa3y\xc3B\x86\xed\xf9C\xd9\xdf\x80TI2aI3&gt;\x83\xf1\xb6\x8c\xe4\x84\xa1\xea&amp;\xf9\xed\xfd'Z\xddt\xa7pO\xc1\xfe\xf5\xf6Z}\xb1\xc9\x8eI\xd20\xc0\xc8)p#^[-s\xcb\xe3\xa7\xd9\xaf\x9c\x9fC\xc0\xd7\xddp\xa6m\x88\x8e_\xce\xf9\xaf\x960aSH]6E\xc4\xcc\xd3\xa28v[\x8e^D\x94L&gt;\x9b\x9b\xb2n\xb8:\xbd\xa4\xc1\~\xdc\xe0!"WV-\xdbP\xe9[i\xbf\x93\xb1\xf58\xc0B\xded\x80\xafW\xces\xdd_\x8d\x9b
G\x8c.\xa2N@&lt;\xc6g\x99S5:C65\xea\xe8\x88\xd1!\xd2\x8b\xd0Aj\xeb\xb6\xc7\x8fNM%1\xe3]?RP\xf4\xac\xbc\xa8\x9fI\x92)x.\xbc\xb8\xee\xdbxW\xa6j\xd6\xce\xd3,+\xf0\xf9\\xac\x9a\xde\x8f\xc5\xf7\x82\x89u4\x954Ya\x91t\xd4\xec\xf5{\xa2\x8aH\xb9%\xe9c\xa0m\x86Leb\x90z\xa1J\xbb\xab{\xc3$V\xe5W%\xf2e\xccq\xc9,\xdd\xe1\xb3\x99U\xb8C\xa9F\xde2\x86\xaf\x9d\xc1\xe3\xad\x8bki!d8\x90\x9f]W\x85\xa3\xba\xaa\x87a\xc6{w\xe7\xc4\xb3\xe6\xdf\x8e\xb3\xc9\xa3\x8f\xfam\xbd65D\xbew\xbe`T\xc26T8\x9eRU|xv\xb1;m\x8aq\xf9:\xc8\x8e\xd3\xa8\xe7\x99\xc2\xaf\xe2'\x93\xc8\xa8x\xed\xe4\xf6|:\xaaZ\xf9\xfd7\xc26uxK!	\xaf\xc4,nR\x9b\x868&gt;^\x8fu\xeb\xa80\xe5\x92\xb6\\x96\xc2\xaf\xff\xf2\xd5j\xffbuS\xe6\xca\xbbf\xd4\xe9\xa9L\xc9Y\xcdyW\xfe\xee`9	\x8bS\xbc\xb8nk@L\xb1:\xf6\xdc{\xf9\xf6\xd9\x9f\xae_\x8f\xfb&lt;\x9e%w\xdco,,\xc41W\xb1\xf5\xd4\x9aO\xa1\xe2\xbc\x86\xdevLb_\xf6\xa2\xd1\xa5\xae\xab\x9d4\xb3]
\xe1[8D\x8e\xdd\xe6\x85\x85(A\xc5\xb6\xd3\xd7\xdb\xa2".\x91%L\x84\xccf\xda\xddV\xd7q\x91\xef\xa96,J\xe3\xfa";b\x97\xf9%z\\xbfG-#"\xdc1T\xa8R\xa3\xd3\xb5\xebD\xc8M\xeb\xc24\xee\xa6\xbb&lt;\xbbu\xd0;\x8c\xfd\xe1\x99&amp;\xba \xa4_\x9f\xcfkj\xfe%\xcaq\xc9`\xf6\xcd\x84\xbf\xc8z\xbcU\xb9\xf9bg^n\xe6"\x9b\xf0d\xadO\xff0\x83\xb9\xd5\xad\xff\xee\xb3q\xaa\x9fV\xcd\xfda
\x99/G\x81\xf9\xe5\xb2\xfe\xe8\xe1\xf9\x8c\xca\xe2\xa6\xf3/l\xa7\xa3\xb6+\x81\xbb\xfd\xe9\xb8)\x8b\xcb\xfc
\xc7lc\xd7\xbb\xbbm\x95\xaa.\xdb\x85U\xce\xcc=\xa1\xca\xb0#fQ\xa4\xf0c\xb4\xe8\xc6Sv3\xa1T\xcd\x87\xb1\x81L\xad-C\xa1\xfa\x96\xa8Xo3}\xb9\xca\xbd\xe4\x97\xca\xf5m\xcaz\xbc\x8a\xe12\xa2+\xb1?@V\xbe\x90\xde?\x82\xd02*tI\xbf\xc9V%I\xbd\xcf\x9f\xbd\xf5\xfb5\x88\x9a&amp;\xaf\xd3M\xea\x90,$k\xec\xfa\xb1\xc0\xd7d\x9b4~\x98\\xad;_&amp;/\xc5\x9a\xfc\xdd&gt;3[#V01\xe8\xe2*\x93\xe0\xab\xf1\x91V\xba\x9e\xcf@\xd8\xd8\xa9*k,qqt\x8d\xcc\xb6\xabti\xed\xea :\xf0E\xf5\xed\xe7X\xb6\xe35\xe5m\x87\\xb6\xb5\xdc\xad\xde\xa9(\xb6\x96\xa7\xa3\xa1\xad\x9ae\xda4\xefP\xe5x\xca4\xbaF\x8ab\xa3\xc5\xb2P\x89A+\x9a6\xd3\x96]Ans\xa0\xf9\xed`\xd0\x9c\xfb*=$'x\x9f{\xdfgU\x97\xcd\xf6\xe4\xcej\xa1U^\xda\xe3\xb1M[\xaa\xdc[\xdf\xca\xc3\xf1\xe4Kl\xf7Z\xb7+	y\xc9\xd9\x8c\xb6"\x99(&lt;lH1p\xc7E^\xbe\xd1m\xfb\x95\xc1\xa8\\x9c- ^\x93\xd3\xdcl6\x9d\xb4\xb1C\xd0\xc9\xa9?\xe1k\xe1\xd5~._6d\xfe\xf1\xeeH\xd0l,\x9f\xcd1\xb0j$\xb7Y-\x95\xac\x8ca8\x8a\xef\xb0\x91\xf4\xf18x}O\xa8:\xb6\xb5\x9e\x9cZ-~\xc9}7\xab;-\xe7-\xc6h	\x8dy]\x96\xe6M\xcb\xe1\xb7T[\xcb\xfb\xce\xc4\xdb\xca\xd2\xda\xcb\x8a\xbdR\x9f\xba\xb3\xcbyFy\xe2-\xc5\xe9\xbd\xce\xf0\xa8#{\xf9\xa6\xbbh\x85\x8as\xdec\x98\xc7\x83\xf0\xf19M\xc4\xe7\xb0Pkz_\x98E\xc9N\xf8\xeeg9p\xeb\xbd\x8e\xce"\xb1\xeb\x8c\x90X}\xb4
;p\x9a\xd0\xdbTD\xeb\xb8\x9aX\xbbR\xc0\x9d\xa9\xb6\xf2\x92\xc8U\x92\xeaM!\xcd\xa8{X\xa3OC\xe0\xf6\x85/0/\xe2\xb6\xe9-\x86=\x9c\xd7\xdd\x8a\xa5\xf1\x96P&gt;\xbf\xc68-\xabz2\xb0/1\xba\x9d\xcdXK\xc3H\xeb6\xea\xae\xb6e\\xa2\xb6`\xdfO\xdc=\xd4\xf9\xa5\xb4F\xd3\xd0o{\xc1\xb22\x93\xd9\xb0G6b\x9e[g;OQ3\xf0\x93\xdcFL5\x85\x9e{\x8b\xf7\xa5\xa7.=T[\xbe\xdc\xa5\xee\xa5$@\xaaU~\xff(\xa1/Z\x86*\xc2\xbc\xb4X\x93\xd57\xaf\xda\x8f\x89\xfdK`0W\xc3\xbb\xf3\xb5\xdf\x81|\x95v\x9a:\x92v \xae\xa7\xcf\xb5\xecDV\xc3\xf5\xe3c\xce\xb7\xb7o\x89d\xa0.|F\xe7s\xe5p\xa8\xef\x8e{q\xf53\xf8=/\xcd"\x83\xba\xfd\xb3D\xd4&lt;\xdf\x97\xf3\xee\x94Ai}sS\x97z\xad\xa6\xb7m\xd6\xcf\x9f\x83\xb0\x99\xfc\xc5\x84\xe9ii\x843\xcfF1%\x84E\xf6#\xbbsn\x98\xe4\xa3\xb1\xb4\xa7$\xe6bY\x8bY\xbei\xa8\xb2h|%I\xfd\x83\xe9*\xe3T\xb3{\x88%\xdfC\xf6\xa1\xcf\x9e*\xd5\x9ceR_\xfb\x92\xc9GO(\x88uvG\M\x94&amp;9\xa5\x89\xeb\xc4k(\x81\xd6\xda\xda\xfa\xb9B\xcd\xabV\x9eF\xeb}\xb5\xb0\xb1i\xdf\xabh c8\x96\xd3\x94\xb5\xd3\xa0K\xc6\xd4\x9e\xad/\xd6\xeby\x9ff\xa5\xa1\xaf\x91\xff"=+\xe3@RV\xa9\x9d\xbf\xdf NxGjpZqdI\xfc\xa8\x98\xd0u]\x80\xe9\x96HdM\xd6\xac\x90!1\x84\xf1\xbd\x82\x86\xe80\xfa\xd8=\xea\x94\xd2!\x8a\xa7\x9c\xd3Su=W$\x87M[Y\xb3z\x9e _y"\xbc R\xd2_?\x82m\xf0?z\xa5^\xe8\xabw\xac\xe45q(\xc1\x94\xea\xa7;\xfd\xae\xcb\x9b7\xae+&gt;\x8e\xdf\xe8\xa2RQ6u\xe3\x94\xb7\xb8E\xce\x87Z9H	\x97\xdfs2jW\xd3\xe5\x8fSmM\xb5\xe3%\xb3|\xa8CN\x91i\x8c\xa8\x87Z\xbb\x81\xe4rK\xda\xdaN\x85\xb7\xa0\x93W\x8b\xf8\x8cg=A\x8d\xb3/\xf5\xa1\xc1\xc4.s\xbf\xad\xfc\xe6l\xcb\xd6\x83L @\xb4[\x8aY\xcc\xc8\x9f\xfa\xe1\xa9\x8e~\xe9u5\xd9z\xbe\h`\xc7N\x99}\xb7\xce\x80,3\xe5\xb4G7	a\xe3)\xfa\xd7dAnKp\x89\x8a\xf9\xd3\xcf'n\xe0\xd6\xea\xca\xc6\x88hA5\xf4\xd7\xeb\x90`\x8aX\x9a\xb9\xf2\xa8\xb4s\\xf7#\x8dq&amp;v\xfb\xea\xef&gt;s\xb2b\xe4\xbe!6-\xf5h\xaesX\x90\x80XU\xd5I\xd4\x8f\xc7p\xbb%\xd6\xb5\xa1aK\xb0\xc8o\xc2{\xc9L\xe1\xc2R2\x82g
\xfd
\xfa\xf5\xf5\xa4\xc5\x85\x88hf\xef\xd9aU\xa4\xb0\xbe\xdd\xd1\xcb\x96\xe6{\xed^\xb0}B\xae\xb5e\xe6\xf4o0y\xb3T\xbd\xd1\x9e\xbc\xaa\xa7\x9b\x9b\xd2F\x87\xce\xf0\xa9\x94U\xd6_\xf9\xec6o:[\xf0CR\x9e\xd0-\xc2\xad\xa8\xcf\xb0\xa7\xa0\xc7\xf9\xe0\xed\xc3\x91\xe9\xbb\x85\xbe@\x8c\xfe\xea\xab\xc7\xcdt[\x81\xe7\xf2\xa4\xcb\xe8fbcK\xd9\xe6Ep\xe0\xbc\xb5^\x86\r\x9f\xf5\xdcgE\x8b\xdf6t\xce\xcf\xe2\xb1\x8bP\x82\xd2q&gt;\xf5\xbf$b\xf9(\xd6\xa9\xa1\x82\x99\xaa\x97.O\x97$\xc3\xf9\xa5\xbcdK\xf0v\x84\xd6'7\xf9!\xbf{\xe5E\xd3
b\xd2\x9d\x9cV\xd6:K=\xe1\xe3C.\xe77[E_\xfbL\xfa\xb8\xfd9\x9aQ\xbb\x96f{\xb3[\xf1\xcb\xf3\xb1\xb7\xbfZrT\xb4\x95|\xecno,\x9b\xd6T\xcb
o\xd6\xb8\xd8ZV4N\xcd0\xd8\x94\x88\xf4y{|\xf3f\xaaO\xfeBCr)\xfdI6./\xdc\xa8$\xad\xf4\x8c\x8e\x8b\xe2\xb02\x96U\xe0\xf2	\xf3I!&amp;\xa2\xec.|t\x9f7\xaeI\xc7jz\xaf\xdc\xd1\x84\xb6\x9e)XZk\x9a6vN\xb28\xbe
\xbe\x8c\x82\x99e~\x88P\xc5RO\x91\xd8Vo\xd9r;U]\xec\x94\xdbr\x8f\xbd\xf5F;.D6nL\xeb\xec\xfe\xa2#[Rl\xf76"\xf7\x95\xc2\xfb\x97\xe6\xa69\xf1\xe3f\xc1T\xd8T=2M\xc1\xda2t\x85\xd2\xbc?\x83\xf4\xae\x8fGK\xe4\xf6~\xf5`\xa2B\xa2\xb8\xd7B\x90\x85\xc0\x82\xb2\xfc\xbf]
E\xa7&lt;\x91\x94\x8d\xe1\x8bX\xfa\xfdO40D\xdf\xd0["\xee\xcfZ\xe875\xad\x91Fc+.2\\xc19~`\xef\xf7\xf7\xc3:\xc3\x82&lt;6s\xe8\xe5\xa9!\xd4@e\xc80\xd9\x97&gt;\xe8\xb6Ky \xf7f\xbf\x9e\xaet\xac\xa1\xbe\xfa\xd0\xbc\xbc2\xb9\xad\xdc\xfd\xca\x9d\xa5	u$\xe9O\xd25\xf1\x90\xdb\xce\xce"\x98\xc4c[\x95\xbf\xd6i\xe7\xfb\xc4\xfcnV\x9e\xc1\x9b\xdc\xca\x95X&lt;e#;d\xb8YC4m&lt;4\xfc7:\x85\xf5\xb6{Us7\xac\xe6\xc2\xb4W\xdap\x9c\xb4\xe2\xd5 \xbe\xfe\xc7Uz\xe27\xb1\xdc\xdf\xe5\xa6\xe8C\xbe\xbeF\x8f74[\x9a\x8d^9\xe8y\xaa`0q\x84"\xfa\xfa\x92_\xaaI8\x9eMQo	p\xd8BhK\xd6?NiC\xf2\xcdff.\x9f\x8dL\xf0\xdelB\xd5V\xb0\xccU\xa1JC\xce\xff-\xb0\xf9\x8d\xff	r&lt;\xe6\xbc\xd9ba\xa9\xc2\x8ay	\xa1\xccK\xde\xb5\xbb\xcd\xf7\x83X\xa4[\xae\x8f\xa0\xb99SJ\xa3\x90\x9dYU\xbb\x88\xfd\xa8\x9a\xab\xd6\xa1l\xfa\xc5\xac\x94\xed\x82\xf0`J$g,]\xf6\x87H\x85~+20\xf5\&gt;\xa6\xf7O\xc2\xd5k\x89$H\xee\xf6#\xeds$m\xde\x85\xbe\xc6\xa4\xba\xe6M\xd8\xac \xf7\x9f\xc0v1K\xe4\xe6\xf3\xf5\xd7\x9b\xadf\xdc=z\xce\xf4\xe45\xad\xc0\x8b_\x85`#/\xde_\xea\x95\x94\x9b\xb3\xd92\xad\xc4\x93\xb0`\xdfo\xd6\x9b[\xd2\xbe\xbd\xdfK\xc6I\xc9\x9f\x98\xfc\xe8\x9e;#\xbe\xa2\xd3\xcdB\xdc\xd2\xcfI2\xb4'n\xd4-tT\xd5\xfd&amp;\x9d\xd3z\xe1tcX\xf4\xa6n\x8e\xef\xf1z\xbdH!\xea}\xba\xfd2\x97\xb4'\xa7N\xb3\xcd6\xf7%\xf9\xae\xcc\x93jr"\x8c9\xc7\xb61\xb5\x80\xd9\xbc\xf5\xfc\x8eI37H\xae\xf3lr\x9c[$\x93C'\xb5I\xc7STE\xa9Uj.\xe2ES\x9d8[!\xad\xf0\xfevy+\xa9\xec\xcb\x8b\x8a\x8c\x8fW\xa8\xaf\x96/\xd9\xe5%\xa3\x88\xe6\xd3\xaf\xd1\xfc\xf6\xa5\xe3\xf6\x95vh\xaf\xb8G\xb1_U\xdd&lt;\xe1\xeeW=\xa5l\xca*\xe2\xfb\xab\x98\xe6\xc2\xe3Bs\xa1fP\xa1\xb9\xe9\x92+$7#\x89\xfe\xe8\xac\x8f\xf4,\xdaz\x92\x95}J`X\x8e\xe5\x8by~\xc9Z\xbb\xcdrC\xa3x\x9f\xe1w\xd8\xa1(\x90\x8d\xdd\xfb\xd5\x95-\xe9ia\xb6Q\xac\xe5\xf8\xc9\xedP\x9f\xc7\xfd\xa7\x8b\xdfOr\xab\xf2_~\xddH\xd6o?j\xbf\xbbd\x8c\xdd\xbe\xcbyA\xe8\xaf\xac\xe9\x8d\xaeb\xf4I\xad\xdd\xf9~E\xf2(!av\x87
&lt;\xc8\xf6i.2\xcc\x81\x8d\xf1\xe1\xa0\xcc\xfd()=\xf2d\x8fv\x9a\x99\xa7r\xbd\xde\xfcf\xa5\x84T\xb4	.i\xaa\x9fa:\x99\x91&amp;6\x84\xe1\xddC_\xdfS\xeb\xdeZ-3t\xea\xca\xfau^\xea;\xf7\xd3\xedo\x9fe\xbe\xc7J\x92\xf0\x98\xcf_\x89\xfdAf6\x81\x84\x945r\xcb9T\xe8\xf5x&lt;c4\xef\xfe	\x910\x9e\xed\xc6\xd7\xcc\xc8\xe1\x80&gt;\x8d\xc9k\xfbk\xca\x95\x8d\xc8\xdeJ\xa6\xe7\xd4\xb6\xa2\xb7W\xbe\xa5&gt;v\xf7\xeb~\xf7\xd2\x86j[\xd6e\xf6\xfb\xa0`\xd3\xe7\xc4;1\xd4\xe3\xd5mS}\xcc5\xb3\xc7\xf9v\xcc\xb5\xdd\xac\xae+B\xf0\xab\xa9\xc60~\xbc\x88\xcc\xab\xf6("\x9f\xf1\x97\xda/\x93\xc7\xa6"\xb3G\xa6\x91i\xe1+\xb4s\x9b\xb2^\x80:^wNr=)61\xbbGq\xc8e\x85\xcdA$	\xa4'\xe9^\xd8X\xfbq\xafl\xc9\xca\xb9O\xd5~\x9d\xe0\xf7\x8a1j\xce)\xd1\xfcz\xbaJ\xcc\xbd\xe0A\xe3\xda\xd2x\xdc6\xc8\xdaA\xc8u\xd8\xb8\xc5\xf7\\xf5\x8a\xe2
\x980\xa3jS\xe3\xe1\x9dw\xa9`C"B5\xed\x8fm(\xb2&gt;n\xf9\xdf\x84{\xb3\xe0\x80\x93\xd8a\xfem2\xe7\xc9\xa4\xce_\xba\xd3\xdfb\x8a\xda\xc9\xf4\xf4\xf0\xfb\xab:\x85F\xd8\x98\xdb\xd4\x9do\x8f\x88\xf71K\xbf\xd0D\xd4X\xbd\xc7\xa7\x86u\xd6\xc6O\xda\xce\x99\xf7\xc4D-%\xb8sx\x85\xe4\x8eW@\xed\x89\xa2\x89\xf9\xd4=\xbfT\xbe\x97;\x93\xc0\xdb\xaf@\xa03\xebq\xe4n\xd7\xb3])j\xe7\xbf\xc5\xb1p\x8cB\x83\xa1!\xaa\xcf(~9!\xeb.718\\x8f\xc3"\xe8\xfc:\xa8\xbd\xb21\xe9\xd9\xd04\x95\x9e/=c^w0\xac\xca,H\x95%q\xb7?\xbc\xd32\xca,\xdb2\xf1\xf2\x98\x95D\xfe(\x8d \xdb\xb5\xdb[\x95\xf0\xe5\xf4_\xad\x9e\xf7=\xe3\xb6\xca\x94i\x83,\xadr\xe9\xfdu%n\xf2C\xff\xb0\xac\xb1\xf1te6@\$O\xd6\x86\xcf\xf2\x89|T\x8a\x8dJV[&lt;+\xd85\\xf3\xd3\xaa&amp;J\xe6\xbf\xc4*\xf4nv\xc6\xcf\xf8yy{\xdbd\xf4\xffr-\xb5pQl?\xda&gt;\xf5\x8d\xed$A \xcd\xe8i\xb5\xb9\xc6\x88\xc5p#p\x89\x97'\xd1\xa3\xa9o\xf34W/Z\xc1!\x92\xa1\x97\xc6\xa5z"
\xcb\xaa.9\x9d!=\xado`\xffp\x9b\xb8\xe6
\x8d\x8e\xab
P3\xb4F;H\xa8Tg\xa8r4\xce\x9fX
/j\xb3\xa8\xe1@ZqI\xe6g\x85S\xc29\xbf\xc4\xf7*\xfcA\xa3&gt;8\xc6gq5\xbe\xcf\xdf\xe7\xca\x93\xf3\xdc\xfb\xfd\x96&lt;\x8aU	\xdb\x8do\xa7]#)\xb1\xb7\x8a[^\xfc\xd3=yM\xb9\xe4\xca\xe5\\xf3\WJ\xc0\xb0\xc2\x92I\x97\xd1\xd0!)\xe9D\xf6\xab{!(m\xd5\xd3c?%\xea\xa8\xa6D\xa1\xa22\xfdZ@^9+B\xc1\xab\xe3\xe7\xe3\xac\xcc\xe8lb\xf1#W
\xfd.!^\xe4vLF\xf0d%\x86I\xaa\xb6	\xe9\x87\x95\xf8\xa9`2(\x94;	+\xfe\xe5}\xea]4~b1_(\xca\xbb\xfe\xd2'&lt;\x92_\x91\xe8\xd9\xbb\xe1\xe1\x8b0V\xcc
}\xcf!\x82+z\xc1:\x80\xb72\xa3%\xbb_"\x92`\x88\x88\xa3\xf3\x8d\xfb\xcd2\xaa\xba%\x96l88\x9fj5\xb5\x81\x8ed\x88\xfe&gt;\xc6\xd6q\xda\xa7\xb5\xa3\xafI|\xa9&lt;Ap\x92\xe06\xb9\xdfLww\xc4{\xbe\xd8\x85\xe0\xe4\xee\x94\xf1\xa1\xe7\x9bhM2\xff\xfd\x9a\xa7Z\x88Qp\xcbfW\x89r4d\xca\xa8\xe5&gt;\x8c\xff\x95\xa4\xaaE^\xbd\x89Xh\xa5{\xca\x9f\x8a\x88s\xd3
\xdeU\xb6_\x91\xfax\x82\xd0\xe7.Cj\xdem""\xd6\xabDeR\xab6&gt;\xec\xdbS`\xaeC\xe0\xba=\x945\xb1uV\xe0\xf9\x96\xd0\xfc\xc7q\xa1sp\xd5\xa4b\xd0\xae\xcd\x9a\xcd&lt;\xc5\xaf\xae,Q\xc7d`\xf2\xf0[\x88\x80L\xd7i~	0\xcc\xfd'A\xd3\x9a[\xa7U~"\x8c\xf4\xfd \xe5\xf4@K\xe2\x86\x83\xf9we\x8a\xe8g\xb5\xe4J\xbcC6NUi\xe2VEq@\xfb\xd9\xd7\xd6\x86\xf3\xe84\xd6#\xf24W\xb5W\xa3\xc0u:\xddMcO\xe4\xb6\xed~\x98\x902$\x95&amp;E\xee\xc00G\x85\xf1Y\xabL%Y\xb3\xc3\xad%RRm\xbaQ&lt;:\xc2{\xf0U.\x99\xbc\xc2\xe7F6y\xd4\x95\xba\x9b\xb5\xf1}\xb8#\xe3\xb0\xbb77\x81s\xca,3=O\xbbyO\xd7\xab&lt;T\x9czl\xe0\xb1\xe5u\xaa=]\xbf\xbc\x97!\x9b\xeex?\xcc\xd9\xbf\xd7\x87\xd6\xf0:\xf9N\xc3J`+Ja\xab8\xf7\xcbo\xd3&amp;sB\xe02\xf8\xf6\xf4\xd5"(\xdc\x8cJ\x92\x86=\xb9\xdd\xe7R@\x94b\xa8G\xa7\xdf[Q:FmZ\xc2t\xc7\xc2u\xa7r\xf3+\x95\x89\x94\xf8\xbc\xdd\x85\xc6\xe1')o\x84U\x87"\xc5h\xd24v7\xa1^\xa3\xb0\x98\xbf\xcfZ)\xbea	\x903\xa5\xe5]\xcbZ\xec\xbcC\xebp\xba\x90%\x9d\x8aQ\xdb\xa0&gt;\xb8,\xc0\xe2\x92_Z\xa6\?v\xe9\xc9Ou\xe2+\xe7u]\xde\x90\8\xe3\x96\xec\\xd9\xb5a2\xf2\xa6\x82\xef\xf5\x8c\xd7\xe6?\xa5\xba?\xf4Ix\xcbrV\xbf\xa6\xbe\xa0\xf7l\x80\xf2
\xfd\xf5.\x91\x8e\xd1j}O\x91\xfe\xbah^J\x9a$\x84\xaca/\xb9\xf8\x87IE\xf3N&lt;\xd4/\x808\x8bF\x83)]\xf6t\x95\x8c\xfbx\xdfho\x95#\xd6G\xd7l\xf9\xc5)\xf6BYIN\xfb\xc5\xab\xa8\xb9\x81\x83\xec\xcc	\xed\xb7\xce\xe8\xb10Wg\xe5\xb9k\xeb\xe7;\x93\xe7L\xb9f\xcb\xd1:D\xfb]\xd8L\xec\xceA;E\xe3L\xadG\xe3HH\xe2Q\x894\x84~\x92P{\x96\xc1
A\xc7+
\xa8\xb7r\xaf\x98p+\xad@\x80\xaa\xc3$\xd2\xeb(\x97\xcbWM8+\xef\xf0\xeb\xcbE:\xe3uDfB\xaa\xd5\x8d\xb1\xe7\x9c8t]\xc2\x8dV\x8c\xca\xe4\xb6lQ\xbc\xb0&lt;=\xed|\xb3\x91\xfc\xb4\xe5\xf3\xb8\xf5\xfb\x91K\xcc\xe5
\x9a:\xca1\xf2eZ\x8a\xc9\xe3\xd0i"\xeaXa\xd9\xaf\xc5\xd2\xb79\xd5\xc2\xa1T\xc45\xfd\xd4}o*\xa5f\xb8\xec\xc4-\xe0_\xd3R\xaa\xc1\x88\xaf\xb6=] \xc8\xaa\xa8~\xd4\x94\x90f\x93\xce\xcde\xed;0e\xbc;o\xa4`\xedm\xe0+L$\xeb\xf1:n\xca\xd3\xb8\xed\xd7\xfc\x90\xf2hn\xa5\xce7^\xb6T!\xb7\x91?\x8c\xc5a\xc5\x9e@{\x92\xd8m\xfbSS\xbd\xcd\xee[t\xbd\xbac\xc2f\xa9\x8b\xbb\xee\x90\x95'\xc7\xb3\xf5O\xf5}\xdc\xa3u$\xc8d\x85\xe4Wzd\x92\xbc\xf9b\x96].\xd0\xe5\xed\xd3\xe5\x91}\xeeWW\x9cgu\xc5\xb0\xc4\xbf}/\x90\xed\xb8[&gt;\xca3+n\xfct\xf6\x86\xeaEK\x95\x8a-\xa2\xfa\x91\xbb\xe9\xcfZ\\x9c\xb4\xfe\x9c\xa0\xc5\xbczC
P\x9e	\x83\xba\x97ol\xa1\xcd\xc0;X[\x8f\xb8n\xab;\x8c\x9cN\x9d4#\xb30\xe2\xa6\xcf\x8c\xe5m" 4
\xa5S`\xba\x9e"\xa1&gt;\xaa\xb7\xdem\xd3\xb2u\xc2\xe7\xdd\xcf\xcc\xccl\xbb\xe3
\xf4\xfey\xd8\xf1\xf4\x98}\xff\x8b\x9a\xb0\x97U
/\xa2K\xe5\x9bR\x94A\x85\xf9\xe3\xa5g)?\xf7\xcb `h\x8e\x9c\xbcs{(\xcb$\x82`4$\xed\x9br\xf3\xfd\\xe6\x9bew\xcd\xcd\x92\x81\xb2LatZ\xb8\xc1\xe9I=\x9d\xe6.m\xfaV#NAc,@\x8eD\xa2\xa6\xae\x88\xd6.\xe4\xe9\x9b\xd7t\x91\xab\xd8q\xb3\x82\xae''Q
\xbb\xb9
\x8d\xdcn\xc6\xde\xc3qS\x97\xad\x9e\xe6o\x8aq\x91\xbf\x92&amp;\xf4\xad^h+\xfdu\x98\xa4Wgmj\xa9FeT\xdef\xc2d]\xa46x5\x93&lt;.l\xa1'y\x96\xa8\xb9\x9f7\x9b\xfb?\xcf\xb9\xefT\xa1fnM__\xf3Q|&lt;\xe4\x89@\xd0H\xcd\x85Q
\xd7!!\xb0\xbcY\xa8yC\xa4R%p&amp;\xfd\xc1\x88\xfe\x9a\xa2\x93:\xcb\x88\xb2\xf2r\xa7\xd8K\xdcr\xa6\xecf\xa6\xa1a\xca\x80i\xa6Ye\xda\xcaEC(q	\xf4\xb0\xe8\\xafY@\xbf\xa0\x9b\xd9\xb2\xf7`\xe1\xef\xd5T4nw&lt;5\x9d \x84\xc7\x982~\xaf\xd4\xae\xa71\xaa?\xaau\x95k\xf5y\x93w\xe0\xbd\xef\xa0\x87\x9b\x87f6\xe0\xcf\xb00\x9b\xe18\xa2\x97=o\xa0N\xd7\xa7\xa9kk\x80/\xae,)\xd9\xdf\xd0\xf1`\xf0\x96\xc2+\xa9\xbb\xe4\xea\xb8\x9d*Qm2\xbb\xda\xeel\xaa2BCW+\xe1z\xddv\xff\xf1\xe6\xb6\xdf\xe1s\xc0\xc2-\xddV\x98\xd4\xbc8X7w8zq#Dw\x815z\xc0\xceu\xf8\x82\x87M\xa6\xd9na\xffJC#M\xeb\xdd\xd6\xbe\xcc\xc8\x8e\xfe\xd8Y\xc5e\xa4\xf6\xb5\xd7!\x93\xe5\x946\xc2\xe8+R\xd8\xcc\x8e\.?\xfd\xb8\xf0\xf2K\x8eXoj!\x9aI\xea\xa4e`U"Ke\xb7\xee\x8b\xe3\xd0\xc2,\xc5T1\xc1\xfe&amp;@T\x81\xd5\xf4B?x\xdf\x9d\xe6\xb6\xdf\x88L\xab\x99\xcbM\x899
?\xe0\xf5Z\xec\xe9\xba\xe9\xc8\xe7NG(\xb49\xbc\xe1z\x97'`\x98l\xeeH\xae`{\xd3')\x8e\xc6Z\xca\xd13B... (set the log level to DEBUG or TRACE to see the full content) 
 </msg>
<msg timestamp="20200512 15:46:17.749" level="INFO">PUT Response : url=https://10.30.8.83:9999/osm/nsd/v1/ns_descriptors/785b339e-f028-479d-a980-e6161e379e72/nsd_content 
 status=204, reason=No Content 
 body=None 
 </msg>
<msg timestamp="20200512 15:46:17.750" level="INFO">${response} = &lt;Response [204]&gt;</msg>
<status status="PASS" endtime="20200512 15:46:17.750" starttime="20200512 15:46:17.567"></status>
</kw>
<kw name="Check HTTP Response Status Code Is" library="keywords">
<arguments>
<arg>${response}</arg>
<arg>204</arg>
</arguments>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${expected_status}</arg>
</arguments>
<msg timestamp="20200512 15:46:17.753" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200512 15:46:17.753" starttime="20200512 15:46:17.752"></status>
</kw>
<status status="PASS" endtime="20200512 15:46:17.753" starttime="20200512 15:46:17.751"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Accept</arg>
<arg>application/json</arg>
<arg>Authorization</arg>
<arg>Bearer ${token_id}</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20200512 15:46:17.755" level="INFO">${headers} = {u'Accept': u'application/json', u'Authorization': u'Bearer k2FTYC4NhdUkNa4RhePo2H2OHchoi1p5'}</msg>
<status status="PASS" endtime="20200512 15:46:17.755" starttime="20200512 15:46:17.754"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${osm}</arg>
<arg>/nsd/v1/ns_descriptors_content?id=${NSD_ID}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200512 15:46:17.764" level="INFO">GET Request : url=https://10.30.8.83:9999/osm/nsd/v1/ns_descriptors_content?id=7a99597e-96c3-4bdd-bec8-d41ce1a1d2e0 
 path_url=/osm/nsd/v1/ns_descriptors_content?id=7a99597e-96c3-4bdd-bec8-d41ce1a1d2e0 
 headers={'Accept-Encoding': 'gzip, deflate', 'Accept': u'application/json', 'User-Agent': 'python-requests/2.23.0', 'Connection': 'keep-alive', 'Cookie': 'session_id=13d4b112f7bc56a5b5eaafc20e6c0b399ec0e920', 'Authorization': u'Bearer k2FTYC4NhdUkNa4RhePo2H2OHchoi1p5'} 
 body=None 
 </msg>
<msg timestamp="20200512 15:46:17.764" level="INFO">GET Response : url=https://10.30.8.83:9999/osm/nsd/v1/ns_descriptors_content?id=7a99597e-96c3-4bdd-bec8-d41ce1a1d2e0 
 status=200, reason=OK 
 body=[
    {
        "_id": "785b339e-f028-479d-a980-e6161e379e72",
        "short-name": "test-ns",
        "version": "1.0",
        "id": "7a99597e-96c3-4bdd-bec8-d41ce1a1d2e0",
        "constituent-vnfd": [
            {
                "start-by-default": false,
                "vnfd-id-ref": "a6f85472-7cf4-41d9-9fa8-a097a69cc3ce",
                "member-vnf-index": "1"
            }
        ],
        "name": "test-ns",
        "vendor": "NXW",
        "_admin": {
            "storage": {
                "zipfile": "package.tar.gz",
                "folder": "785b339e-f028-479d-a980-e6161e379e72",
                "path": "/app/storage/",
                "fs": "local",
                "descriptor": "7a99597e-96c3-4bdd-bec8-d41ce1a1d2e0/7a99597e-96c3-4bdd-bec8-d41ce1a1d2e0_nsd.yaml",
                "pkg-dir": "7a99597e-96c3-4bdd-bec8-d41ce1a1d2e0"
            },
            "projects_write": [
                "ef4ccc39-2ba3-4421-9796-697b6b62b5dc"
            ],
            "modified": 1589298377.5359485,
            "onboardingState": "ONBOARDED",
            "userDefinedData": {},
            "operationalState": "ENABLED",
            "created": 1589298377.5359485,
            "projects_read": [
                "ef4ccc39-2ba3-4421-9796-697b6b62b5dc"
            ],
            "usageState": "NOT_IN_USE"
        },
        "vld": [
            {
                "type": "ELAN",
                "short-name": "mgmt_net",
                "id": "mgmt_net",
                "vnfd-connection-point-ref": [
                    {
                        "vnfd-connection-point-ref": "ens3",
                        "vnfd-id-ref": "a6f85472-7cf4-41d9-9fa8-a097a69cc3ce",
                        "member-vnf-index-ref": "1"
                    }
                ],
                "name": "mgmt_net",
                "mgmt-network": true
            }
        ],
        "logo": "nxw_logo.png",
        "description": "NS descriptor: test descriptor for D3.7 tests"
    }
]
 
 </msg>
<msg timestamp="20200512 15:46:17.765" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20200512 15:46:17.765" starttime="20200512 15:46:17.755"></status>
</kw>
<kw name="Check HTTP Response Status Code Is" library="keywords">
<arguments>
<arg>${response}</arg>
<arg>200</arg>
</arguments>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${expected_status}</arg>
</arguments>
<msg timestamp="20200512 15:46:17.767" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200512 15:46:17.767" starttime="20200512 15:46:17.766"></status>
</kw>
<status status="PASS" endtime="20200512 15:46:17.768" starttime="20200512 15:46:17.765"></status>
</kw>
<kw name="Length Should Be" library="BuiltIn">
<doc>Verifies that the length of the given item is correct.</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>1</arg>
</arguments>
<msg timestamp="20200512 15:46:17.769" level="INFO">Length is 1</msg>
<status status="PASS" endtime="20200512 15:46:17.769" starttime="20200512 15:46:17.768"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NSD onboarded to OSM</arg>
</arguments>
<msg timestamp="20200512 15:46:17.770" level="INFO">NSD onboarded to OSM</msg>
<status status="PASS" endtime="20200512 15:46:17.770" starttime="20200512 15:46:17.769"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>90s</arg>
</arguments>
<msg timestamp="20200512 15:47:47.773" level="INFO">Slept 1 minute 30 seconds</msg>
<status status="PASS" endtime="20200512 15:47:47.776" starttime="20200512 15:46:17.770"></status>
</kw>
<kw name="Create Catalogue Session" library="keywords">
<assign>
<var>${catalogue}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>catalogue</arg>
<arg>${CATALOGUE_URL}</arg>
</arguments>
<msg timestamp="20200512 15:47:47.783" level="INFO">Creating Session using : alias=catalogue, url=http://localhost:8083, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20200512 15:47:47.785" starttime="20200512 15:47:47.781"></status>
</kw>
<msg timestamp="20200512 15:47:47.785" level="INFO">${catalogue} = catalogue</msg>
<status status="PASS" endtime="20200512 15:47:47.786" starttime="20200512 15:47:47.779"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Accept</arg>
<arg>application/json</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20200512 15:47:47.787" level="INFO">${headers} = {u'Accept': u'application/json'}</msg>
<status status="PASS" endtime="20200512 15:47:47.787" starttime="20200512 15:47:47.786"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${catalogue}</arg>
<arg>/nsd/v1/ns_descriptors?nsdId=${NSD_ID}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200512 15:47:47.863" level="INFO">GET Request : url=http://localhost:8083/nsd/v1/ns_descriptors?nsdId=7a99597e-96c3-4bdd-bec8-d41ce1a1d2e0 
 path_url=/nsd/v1/ns_descriptors?nsdId=7a99597e-96c3-4bdd-bec8-d41ce1a1d2e0 
 headers={'Connection': 'keep-alive', 'Accept-Encoding': 'gzip, deflate', 'Accept': u'application/json', 'User-Agent': 'python-requests/2.23.0'} 
 body=None 
 </msg>
<msg timestamp="20200512 15:47:47.864" level="INFO">GET Response : url=http://localhost:8083/nsd/v1/ns_descriptors?nsdId=7a99597e-96c3-4bdd-bec8-d41ce1a1d2e0 
 status=200, reason= 
 body=[{"id":"30b6c888-f80c-4320-b7cf-66fed0c02abc","nsdId":"7a99597e-96c3-4bdd-bec8-d41ce1a1d2e0","nsdName":"test-ns","nsdVersion":"1.0","nsdDesigner":"NXW","nsdInvariantId":"7a99597e-96c3-4bdd-bec8-d41ce1a1d2e0","vnfPkgIds":["17dbf283-cbcd-48ec-bdfe-1393eb9c777d"],"pnfdInfoIds":[],"nestedNsdInfoIds":[],"nsdOnboardingState":"ONBOARDED","onboardingFailureDetails":null,"nsdOperationalState":"ENABLED","nsdUsageState":"NOT_IN_USE","userDefinedData":{"OSM1":"yes","isRetrievedFromMANO":"yes"},"_links":{"self":"/nsd/v1/ns_descriptors/30b6c888-f80c-4320-b7cf-66fed0c02abc","nsd_content":"/nsd/v1/ns_descriptors/30b6c888-f80c-4320-b7cf-66fed0c02abc/nsd_content"},"manosOnboardingStatus":{"OSM1":"ONBOARDED"},"c2cOnboardingState":"UNPUBLISHED","projectId":"admin"}] 
 </msg>
<msg timestamp="20200512 15:47:47.864" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20200512 15:47:47.864" starttime="20200512 15:47:47.788"></status>
</kw>
<kw name="Check HTTP Response Status Code Is" library="keywords">
<arguments>
<arg>${response}</arg>
<arg>200</arg>
</arguments>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${expected_status}</arg>
</arguments>
<msg timestamp="20200512 15:47:47.866" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200512 15:47:47.867" starttime="20200512 15:47:47.865"></status>
</kw>
<status status="PASS" endtime="20200512 15:47:47.867" starttime="20200512 15:47:47.864"></status>
</kw>
<kw name="Length Should Be" library="BuiltIn">
<doc>Verifies that the length of the given item is correct.</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>1</arg>
</arguments>
<msg timestamp="20200512 15:47:47.868" level="INFO">Length is 1</msg>
<status status="PASS" endtime="20200512 15:47:47.868" starttime="20200512 15:47:47.867"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NSD onboarded to Catalogue</arg>
</arguments>
<msg timestamp="20200512 15:47:47.869" level="INFO">NSD onboarded to Catalogue</msg>
<status status="PASS" endtime="20200512 15:47:47.869" starttime="20200512 15:47:47.868"></status>
</kw>
<doc>Test title: Test 4 - NSD Onboarding from single site - OSM
Test purpose: This test aims at verifying that an NSD modelling a single-site service can be successfully onboarded in the Multi-Site Catalogue through the SBI from a specific per-site OSM orchestrator.</doc>
<status status="PASS" endtime="20200512 15:47:47.869" critical="yes" starttime="20200512 15:46:17.131"></status>
</test>
<status status="PASS" endtime="20200512 15:47:47.870" starttime="20200512 15:46:16.871"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="1">Critical Tests</stat>
<stat fail="0" pass="1">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="NSDOnboardingFromSingleSite" pass="1">NSDOnboardingFromSingleSite</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
