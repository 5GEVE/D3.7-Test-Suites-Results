<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20200512 15:34:18.095" generator="Robot 3.2.1 (Python 2.7.17 on linux2)">
<suite source="/home/ubuntu/TestD3.7/VNF Management tests/Test 1 - VNF Onboarding from site - OSM/VNFOnboardingFromSingleSite.robot" id="s1" name="VNFOnboardingFromSingleSite">
<test id="s1-t1" name="VNF Onboarding from site - OSM">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Onboarding VNF from site - OSM</arg>
</arguments>
<msg timestamp="20200512 15:34:18.312" level="INFO">Onboarding VNF from site - OSM</msg>
<status status="PASS" endtime="20200512 15:34:18.312" starttime="20200512 15:34:18.311"></status>
</kw>
<kw name="Create Osm Session" library="keywords">
<arguments>
<arg>${OSM1_URL}</arg>
</arguments>
<assign>
<var>${osm}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>osm</arg>
<arg>${url}</arg>
<arg>verify=False</arg>
<arg>disable_warnings=1</arg>
</arguments>
<msg timestamp="20200512 15:34:18.314" level="INFO">Creating Session using : alias=osm, url=https://10.30.8.83:9999/osm, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20200512 15:34:18.314" starttime="20200512 15:34:18.313"></status>
</kw>
<msg timestamp="20200512 15:34:18.315" level="INFO">${osm} = osm</msg>
<status status="PASS" endtime="20200512 15:34:18.315" starttime="20200512 15:34:18.312"></status>
</kw>
<kw name="Get Osm Token" library="keywords">
<arguments>
<arg>${osm}</arg>
<arg>${OSM1_USERNAME}</arg>
<arg>${OSM1_PASSWORD}</arg>
<arg>${OSM1_PROJECT}</arg>
</arguments>
<assign>
<var>${token_id}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type</arg>
<arg>application/json</arg>
<arg>Accept</arg>
<arg>application/json</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20200512 15:34:18.318" level="INFO">${headers} = {u'Content-Type': u'application/json', u'Accept': u'application/json'}</msg>
<status status="PASS" endtime="20200512 15:34:18.318" starttime="20200512 15:34:18.316"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>username</arg>
<arg>${username}</arg>
<arg>password</arg>
<arg>${password}</arg>
<arg>project_id</arg>
<arg>${project}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200512 15:34:18.318" level="INFO">${body} = {u'username': u'admin', u'password': u'admin', u'project_id': u'admin'}</msg>
<status status="PASS" endtime="20200512 15:34:18.319" starttime="20200512 15:34:18.318"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${osm}</arg>
<arg>/admin/v1/tokens</arg>
<arg>headers=${headers}</arg>
<arg>json=${body}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200512 15:34:18.353" level="INFO">POST Request : url=https://10.30.8.83:9999/osm/admin/v1/tokens 
 path_url=/osm/admin/v1/tokens 
 headers={'Content-Length': '65', 'Accept-Encoding': 'gzip, deflate', 'Accept': u'application/json', 'User-Agent': 'python-requests/2.23.0', 'Connection': 'keep-alive', 'Content-Type': u'application/json'} 
 body={"username": "admin", "password": "admin", "project_id": "admin"} 
 </msg>
<msg timestamp="20200512 15:34:18.353" level="INFO">POST Response : url=https://10.30.8.83:9999/osm/admin/v1/tokens 
 status=200, reason=OK 
 body={
    "expires": 1589301258.3329568,
    "id": "SHpXNCuJbi3sqOWGF20cSitvcYDyiO2Q",
    "project_name": "admin",
    "admin": true,
    "remote_port": 39658,
    "user_id": "040cf677-a10b-4e4f-8e3d-bdef8937c560",
    "remote_host": "10.0.0.2",
    "_id": "SHpXNCuJbi3sqOWGF20cSitvcYDyiO2Q",
    "issued_at": 1589297658.3329568,
    "username": "admin",
    "roles": [
        {
            "id": "bd284e86-922e-4d34-9246-025a529f9d01",
            "name": "system_admin"
        }
    ],
    "project_id": "ef4ccc39-2ba3-4421-9796-697b6b62b5dc"
}
 
 </msg>
<msg timestamp="20200512 15:34:18.354" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20200512 15:34:18.354" starttime="20200512 15:34:18.319"></status>
</kw>
<kw name="Check HTTP Response Status Code Is" library="keywords">
<arguments>
<arg>${response}</arg>
<arg>200</arg>
</arguments>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${expected_status}</arg>
</arguments>
<msg timestamp="20200512 15:34:18.357" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200512 15:34:18.357" starttime="20200512 15:34:18.356"></status>
</kw>
<status status="PASS" endtime="20200512 15:34:18.357" starttime="20200512 15:34:18.354"></status>
</kw>
<msg timestamp="20200512 15:34:18.358" level="INFO">${token_id} = SHpXNCuJbi3sqOWGF20cSitvcYDyiO2Q</msg>
<status status="PASS" endtime="20200512 15:34:18.359" starttime="20200512 15:34:18.315"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Accept</arg>
<arg>application/json</arg>
<arg>Authorization</arg>
<arg>Bearer ${token_id}</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20200512 15:34:18.360" level="INFO">${headers} = {u'Accept': u'application/json', u'Authorization': u'Bearer SHpXNCuJbi3sqOWGF20cSitvcYDyiO2Q'}</msg>
<status status="PASS" endtime="20200512 15:34:18.361" starttime="20200512 15:34:18.359"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${osm}</arg>
<arg>/vnfpkgm/v1/vnf_packages</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200512 15:34:18.441" level="INFO">POST Request : url=https://10.30.8.83:9999/osm/vnfpkgm/v1/vnf_packages 
 path_url=/osm/vnfpkgm/v1/vnf_packages 
 headers={'Content-Length': '0', 'Accept-Encoding': 'gzip, deflate', 'Accept': u'application/json', 'User-Agent': 'python-requests/2.23.0', 'Connection': 'keep-alive', 'Cookie': 'session_id=437ba845b2056b2a6ecb13b58ea82c511a8a12ec', 'Authorization': u'Bearer SHpXNCuJbi3sqOWGF20cSitvcYDyiO2Q'} 
 body=None 
 </msg>
<msg timestamp="20200512 15:34:18.441" level="INFO">POST Response : url=https://10.30.8.83:9999/osm/vnfpkgm/v1/vnf_packages 
 status=201, reason=Created 
 body={
    "id": "75a0bc50-2721-4106-a89f-af86b6d22d19"
}
 
 </msg>
<msg timestamp="20200512 15:34:18.442" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" endtime="20200512 15:34:18.442" starttime="20200512 15:34:18.361"></status>
</kw>
<kw name="Check HTTP Response Status Code Is" library="keywords">
<arguments>
<arg>${response}</arg>
<arg>201</arg>
</arguments>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${expected_status}</arg>
</arguments>
<msg timestamp="20200512 15:34:18.444" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200512 15:34:18.445" starttime="20200512 15:34:18.444"></status>
</kw>
<status status="PASS" endtime="20200512 15:34:18.445" starttime="20200512 15:34:18.443"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Accept</arg>
<arg>application/json</arg>
<arg>Content-Type</arg>
<arg>application/zip</arg>
<arg>Authorization</arg>
<arg>Bearer ${token_id}</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20200512 15:34:18.446" level="INFO">${headers} = {u'Accept': u'application/json', u'Content-Type': u'application/zip', u'Authorization': u'Bearer SHpXNCuJbi3sqOWGF20cSitvcYDyiO2Q'}</msg>
<status status="PASS" endtime="20200512 15:34:18.446" starttime="20200512 15:34:18.445"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>${VNF_PACKAGE_OSM}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200512 15:34:18.447" html="yes" level="INFO">Getting file '&lt;a href="file:///home/ubuntu/TestD3.7/packages/vnf_osm.tar.gz"&gt;/home/ubuntu/TestD3.7/packages/vnf_osm.tar.gz&lt;/a&gt;'.</msg>
<msg timestamp="20200512 15:34:18.459" level="INFO">${body} = \x8b\xd6\xb1\xba^\xed\xbcX\x9c\xc1\xb2 :X	\xee&gt;gp'\xb8\xbb\x9c\x81\xe0\xee\xee\xeeAw\x87\xe0.	\xee	wwx\xe4\x9e{\xf6\xde=\xbb\xfb\xde\xb9{\xbf\xef\xec\xbb\xdf\x9e\x9ao\xfe\x9e\xbf\xba\xb...</msg>
<status status="PASS" endtime="20200512 15:34:18.459" starttime="20200512 15:34:18.447"></status>
</kw>
<kw name="Put Request" library="RequestsLibrary">
<doc>Send a PUT request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${osm}</arg>
<arg>/vnfpkgm/v1/vnf_packages/${response.json()["id"]}/package_content</arg>
<arg>headers=${headers}</arg>
<arg>data=${body}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200512 15:34:18.770" level="INFO">PUT Request : url=https://10.30.8.83:9999/osm/vnfpkgm/v1/vnf_packages/75a0bc50-2721-4106-a89f-af86b6d22d19/package_content 
 path_url=/osm/vnfpkgm/v1/vnf_packages/75a0bc50-2721-4106-a89f-af86b6d22d19/package_content 
 headers={'Content-Length': '15561', 'Accept-Encoding': 'gzip, deflate', 'Accept': u'application/json', 'User-Agent': 'python-requests/2.23.0', 'Connection': 'keep-alive', 'Cookie': 'session_id=437ba845b2056b2a6ecb13b58ea82c511a8a12ec', 'Content-Type': u'application/zip', 'Authorization': u'Bearer SHpXNCuJbi3sqOWGF20cSitvcYDyiO2Q'} 
 body=\x8b\xd6\xb1\xba^\xed\xbcX\x9c\xc1\xb2 :X	\xee&gt;gp'\xb8\xbb\x9c\x81\xe0\xee\xee\xeeAw\x87\xe0.	\xee	wwx\xe4\x9e{\xf6\xde=\xbb\xfb\xde\xb9{\xbf\xef\xec\xbb\xdf\x9e\x9ao\xfe\x9e\xbf\xba\xba\xab\xff\xaa\xea\xea\xaa\x99\xe96\xe44\xe5\xe6`\xe7bq\x9b\xb2\x83\xd8YLx@&lt;\xa6\x86\xdc Cf.CNcc6c\xe0?\xcc\xcc\xcc\d\xca\xf8\xdb\xf2/7,l\x9c,\xacll/#a'cfagef\x90q\xfc'\xf9\xfe]\xe0\xec\xe8d\xe8\xf02\x94\xffl?\xfbp\xffE\xc0\xf0\xef\xd1\xbf\xb5\xad\x8d\xb9\x93\xad\x83\xb9\x8d\xd9\xff\x96)\xfc\xc7\xf5\xcf\xc9\xc6\xc5\xfcO\xfd\xff#\xe0\xef\xd2\xbf\xb9\xb1\xad\x8d\xe3\xff\xbe\xf8\x8f\xeb\x9f\x83\x8d\x85\xf3\x9f\xfa\xffG\xc0@\xff6n\xae\xfaV\xb6f\xb6\x8cv6f\xff!/\xf2\xe0dg\xff_\xe9\x9f\x8d\x83\x9d\x99\xfdo\xf4\xcf\xc5\xc9\xf9\xa2\xff\xff\xb4N\xfe\xf8\xbf\\xff\xa1J
\x92(\x88\x88/Q\xa4\xa5\xc4T^\xca\xc1?\xef7\xb0/W /\xcf\xd0Ko&amp;,/TG#="\xbc\xdc\x93K\xa9\xc8T\x80op\xf7\x82\xf2\xddy\x91\xe4\x8b\xf7\xde\xd7.\xa3E\xf9\xc3K\xc5+#YI1\xc0\xf3\x9fWN{Q\xfc\xe6\xb5\x93\xb4\xbc\xf8\xebu8XJ\xeeR\x96\xea\xf0\x97o\xa4\xc5\x84\xd5\xdc\xf4\xdb]S\x88f\x9f\xf9\xb7W\xa1{Y\xf9r\xb0b\xdd\xc0\xd469f\xaa4\x83W\xeb\xe3\xa7\xd5\xb9\x85\xfe\xf7\xfeB)D\x83\xf0\xfe}=\xaf\x96\xd2\x91\x81\xc6\x84\x84\xfe\xae\xd6\xdf\xc4\xbe\xc4\xa0\xc5	\xd1\x90}Q\xc2\x93s\xd5X\xf1\xbf\xc8\xc4\x93\xa1pv\x96\xed9&gt;\x9c\xf8:\x80S^\xadhY\xe3\xdd^u\x9c\xe0OV\xc3F!\x98&amp; \xd9AB!P\xd5D\xd9\xf9/x\xf1#\xdeAJ\xf7\xe4\x931!\xfa*\x8d\xdc\xad\xc2\xc2\x86\xc0\xd4\xe6j\xc1 \xeac*\xd3A\xce&gt;)\xaf\x94h_R\xa4Z'J\xa0b\xb7Yp\xe8\xe8\xb1_:\xc0\x94\xb3\xb3b\xa8\xa1\xdb\xfd6&gt;55\xa1\xc7\xec\x86
P\x9c;K\xbf]v&lt;\xd2\xcf&gt;\xc2*:|L\x81\xe2r\x98+_\x98\x9f\xdetV\x91\xac\x8e}\xb2rb\xa3u\x88\xde\x80\xb1\xd1\x8dG\x85\xf4G\xaf\xb3BR\xce\x86h\xde
k\xf0x;\\xe5\xcd*\x91\x8d\xd3\xcf\x90`\xa9%Tp\xe8]\x93\xf0{=\x86\xaf\xbe\xb5Z\xbe\xaf,#\xab\xc2po\xc2\xddj\xbb7\xf5$\x92a\xf7\xb7K:n\xa61
(C\xfa\xc0\xde_\xed\x89\x93\xae\x84\xe2\xeeE\xdeli\xe3\x81\xc3T\xbb\xdc+\xad\xec\xb8Z\xb4\xb4'\xdan|\xb3\x9f\xa5\xcetR\x91\x95\x95\x95g0B	\x80\xb0c\xd7t|*\xea\xa8\xba85S'%\xe7h1\x83U\xfb\xf9Uw`\xf4\xf9\xd1\xf5\xd9b\x87&gt;\xac~VDH,\xf5\x93\xd5\xe8xA\xf0a
\x89+\xb6\x97\xfc\xf68\xdc\x90US\xc2|L\xd0\xfb0\xa4\x92\x98UN\xbc\xcd0hv\x8c\xce6"z\xbd\xeay\x9c\xa0\xaa\xa0\xd5d\xf7KH\xbf2\xc88\x9a\xff\xaa\xacv
U\xc2\xd4\xd8\xe9+Ro8sIpQ=_\xfc\xda{%S9"&gt;lU\xb0\xac\xfct/\xea\xfa\xd0\xc8t\xb8\xd6M\x8a\xf4\xd2U%u8&gt;\xeb}\xdek\x89G'E*~\x82\xa1Es\x8f\xcfQ3T\xa9SU\xdd\x8e\xc7T\x9c\xaf_PW\xa3`\xc6\xac\xea\xbb\xd7v\x8f\xea\xdfk|\xbe\x9b\xca\xe6\xe4\xe2\xe2\xdb\xb6(\x98V\xa8\xd1}\x95\x8c\xfe|\xbb\x99,E\x94ZhNT\xe9\x8cV\x853,\x81iJ\xf8zc\xc6\xd4y\x8d*\xe8\xce\xc9\xc8\xceWi@\xa7,\xb4\xd0\xb7G@\xce91J\x8f\x8b\xba&gt;\xba\xa7V\\xb1\xdbK\x8c\xd4K\x8e\xbcR*;vI\x8a\xbe}\xca^\xd5$\xa0\xec\xab\xc0R\xeb\xe3*QRIK#\xa7\xe619\xbe\xac\x94x\xdc	'e\x92\xa5\x94U\xff\xdeE\xf5\xba\xeaiy\xb8-\xf8\xf9\x8745\xbe\xb1e\xc9IF\xec\xf5n\xe7Mn\xc7I \xc3\x88\xc83\xff\xf3J\xfd\xf7B\xf0TJX\xa2\xa7\xd7\xf7\xb6\xe7\x8d\xc1\xd2|J\xec\xb4\xe1\xcc+%\xea\xa7\xc1X\xf9\xa9\xc5,a\x88\xa1\xd7\xfc\x9dm	Z\xe3\x83\xb2\xe2\xdfW\xe2\x81\x85\xf3\xcdnK\xf8\xa4\xa2\xd3\x9b\xdc\xe4\x89\xe6\xfd\xc4|\xa5R\xd5Z\x8bi\x9f\xb6\xcdp\xd9\xcfW`\xc6\xf9\x94V5\xeck\xed\xc6\xb5,5\xca\xb5\x9d\x9fn\xb7\xaf?Z~a\xe9\xf7|n\x9e\xf0&gt;B\xd2\xbf\xf1\x83J(\x8b\x89\xdd\x82\xd3\xde\xd0\xf9
\xc1,\xdf\xa5\xda\xf3\xd9X\xf2\xf5p\xc7\xb7{\x8a\xd7\xdc\xd1\x97\xd8\xadf\xbb\x9d\xce\x8c\xcfS\xde\xa6X\xadaJ\xfe\xcfl;v\xd14\xe2[#\xb7\xca\xf3\x9aC\xa1\xc0\xe8\x9c\xae6\xc8{\xd9mA\xdf\xe1\x9erp\x9f\xaeg\xa8\x82\xfa\xde\x97\x84\xb6m\xe8\xe2\xcax\xf5(N\xcbT]\xa3ZI\xd6\xad\x87\xaa\x85r0h\x8cj\xf4T\xb9wb~\x86\xe6\xdbi\xa9."\xc21\xf65\xca\xb6\x96 \xf6\xf3\xbd\xef\xac\xaf}2\x9e{\x97\x89\xc4\xb7]x\xb7\x89\xbc\xfa\xb3z\xb3\xdb\xee\xb2\xf2\xbdUfx\xdaz\xdc\x81.\xc2W\x8e'\x8c\xc53\xb7\xf5,\x96\xe7\xa7X\xe7am\xb1\xd1\x80"\xff\xe54\xaa\xcf\x8d\xa8\xe9;(*\xfc\xba0Y\xc7\xb6\xdd\xb9(\xd3\xc5a|\x95\xe5\xa2 i\xd6 R\xad\xf7q\xa5\xcb\xf8y\xe2\xcb\xd7\xe1\xc3w\xa3r?\xa6j\xc0\xfcHP\xf6\x8d\xb2\x916\xc7\xef}\x9di3\xe4\xa9\x91*\xba\x9e\xda\xd8\x9c\xbd\xfd'\xb9.g%\xb9\xb4	#gr\x9cD8\xe0\xb8\xd80\xa7M\xc7}*Bg\xea}\xc4\xb9+N\xddU2=\xaamY\xcb\xc0\xf7\xfcp\x9e\xe9(\xf6(\xbe\x8dL\xaa\x9f\xf5|n\xf4\xb9o\xd4\xbf\xfb\x91\x9c\xe1\xc8\x81=\xa3\xa9	\x8f\x86\xec[\xaaH\xcaez?;\xa3\xfd\xa9\x8e\xdbM\xf3\x97\x98\x90}\xd3\x84\xbe\xf3\xd41\xce\x8c\xe39\xb7\xc00LDM\x89\xb8*\xdc\xa7\xe5\xcf\xc6&gt;\xf3.\xf4\xb2!\x98\xf62\xf6\x89iz\xe1P\x8f\xfa\xb2q\xfd\xbb\x91\xce2\xa9v\xe8C\xf9'-\xcb\xa9\xc8tPGs\xfc\xbd\xd3\xe3\xe5\\xe7\xc3\xd9\x882\xd6\xe5gF\xe0\x8c\xb0f#\x96\xa5\x9f\xa7\xb1\xe7\xdf\xb2\xd7\xf9\xc0\xcf\xe25\xaf\xc7yqu\xa0ftU\xc3\x85D\xaf\xe9)\xe1t\x90&amp;2(&amp;&gt;D\xfd~\xaa\xf5X\x8b\x9c\x8a2\xa5w\xf5vr\xff\xb96\x9f\xbfg\xfc\xad\xb8\xde\xc2rB7\\xcbf\xc2\xa3\xeb|\xd4\xb0\x96\xf6gw\x9aWc\x89E\xd5\xba\xacr\xee\xc9X\xd7\xa9\x8dJI9\x91q95K\xc8\xe5\xb2_\x88\xa6e\xb6\xe7Q\xf3[\xf0\xbd\xee\xe0e)\xf7\x87\xb2:V)6.;\x8c\xa4\xb0[`\xebkP\xf4\xf2\xafB\xfc\xd3\xb8u\x8c\xba\xf0d\xfbn\xc6R=a\xc5\xe9\xa7/\xcd7\xe1\xa6\xccw\xed\xf7z\xb9\x9f\xf0`\xc1\xacB\xd7\xaaf@\xa6\x96\xa9\xc9\x9d\x8a\xf8\x81\xae"\xa2\xa2\xd9\xf46\x9c\xf0\x94i\xdf\x8c7\xb9\xce7\xd3\x82\x8c\x9fM\x9f\xc2\xfb\xea3q\xee\x8a}\xa1Y\xae\xab\xee\xaa\xe45\xdfF\xcd\xd3\x9e\xc6\xd6\xc6\xfeLB\x82,/bR\x8e\xfd\xf0\x98\xd7\xed\x85\xae\xebB\xbb\xf1\xb8 \x87\x9c\xe3\xd9\x89\xd0\xf4\xef\xac\xac\xf7\xedx\xdbn\xcd\xe1aD'I`4\xe1\xf6\xa268\xe2\xf6\xb9\xf12\x948K\x94\xac\xfe-\x84 &amp;\xa2,K\xac\xab\xf5+\xee^\x9f\xf1m\xc9\x98\x98\xc5\xc0_qk/I\xc7\xc6}+\xd5\xcc#\xd3\xe0\xb3\xd8\xfb\xb0&lt;\x86\x89h\xefPcjj\xf3\xd6g\xb4z\!dQ\x93y\xee\xcd\xcc`}\xfb=7\x93\xac\xc1\x93\x99 \xfaVr\xa1\xd0R\xbaa\xf9\xb7I\xfa\x9d\x8fw\xeb3\x9c\x8c!\xb20S\xf7No\xc4`\xb3\xbc\xb6\xaa)\xe4\xa9\xd2\xa4R\xca\xbb\xbb\xd1\xc8\xe0}\xe1VC#/w\xe9U}\xb8&amp;\xc80\xa4\xf9*\x95\x8e\x95\x91l\xb1\xbbs\xd9\xcc\xc6\xdb\xb6\xd2,'7\xe0-\xf3\xcaW\xfd\xfe=?\x81\x8f	4)\xe7v\xf2~\xe2\xe2+\xe6\xd1\xd4\x81g\xcf\x93\xe2\x89#A:\x90\xf8\xeco\xe2[\xb8\xdf\xdf@K\xa7M\x9f!
G,)!\xb2\xb5c\xcfvG\xbe\xba\x85\xd2\xf1,\xdf\x8a\xf1\xe1 \xe9:\xe8\xd6\xf7\xbc\xf7P\xb1\x9c]\xfc\xc0u\x94\xe8	w\xe9\xd6H\xaf~:%l\xa5z\x8a\x84\xfa\x8b~j\xa6\xb6\x93n\x95\xb5n&gt;\xdfI3\xc1\xc3\xba\xa9\x8e\x9b&gt;\xa6W\xb7yP\x91\xc3\xc0\x99\xd7~A3cf\xf2\x84E\xda\x83\xd9\xd6?a/\x81\xca\xd5\xbb\xbf\xe6\x9a\xb6}V	\x8bv\xe6\x82\xcf\xdf\xf7\x8b\xe8\xce	Um&lt;\xf3\xb8I\x96\xbcY\x82\x8fC\xb7\xd7\xb3%^\xa9IL\xcc\xc5\x95OO\xec\xc2SI\x9a\x8e	)\xd6\x96L+\xecO)Q-z\xda\xe2\xea|\xfbk\xf2K\xd4\xbcZ\xc8 \x97\xd3\xce\xe4\x92m'\xb1\xcaD\x9b\xf0 )jiE\xc7\xe6\x831/\x9f\xd0m\xa4:\xd3\xc1/\x80\xe3\xe1W\xdb\x89\xdb,\xc7\_\xfd\xd4\xde\xcc\xb2\xd3\xcfe\\x9e\xae\x95\xdb'Nk~5j\xb6\xd1\x82QQ\xa4\x95\xe8L\]Q\x9cx=P\x82\xd1\xbb\x99\xbd\x8b\xcb\x85\xcb\xa0i\xf7\xb2\xe8|-B\xd2\xa7y8\x9f\xd5\xb1]q\x9e\xd3\xade\xcf\xfb\x94C\xe1\xbbO\x8b
\xff\x96Z\x9ex\xf5\xcc\xe3\xb4=\xf5n\xa5\xdf\x92"\x8f t\xcc\xdeJ\x8e\xa8'Q|@:	\x88\x87\xc2\xd6W)\xb9)g\xb9t\xcfep\xc0t0\x9a\xc6^\xfaNn\xaa`P:\x94v\x9d&amp;H\xaey\xb6sT\xcb\xb7al\xf3\xb1y\xb4\xfd\xc4\xd5kr\xd8\x94\xb1\xb4.\xc0\xee\xd6X\xbd\x9fR\xe0;\xa4\xd7\xbf\x95\xc1\xc3GvR\xd2;\xe3:\xe9g\x86~5\xc1o\xba\xad\xf5D\xc1\x97HeCN\xbf\xaf\x92
-\x8a\xd0C\xfd \xf8\x8c\xcb\xa24Jn-='\x91KR\xe0Z\xbd\xcf\xd3\xe768\xc0E%=lyoZ\xd2U\xf0\xd1-,\x8f[\xeb\xa3\xff\x87\xd7\xbe\xdda\xdc\xd0\xbd\xdf\xb9\xb6Y\x85\xb4\xe8\x8f\xdb\x82\xd9\x9c\xd6\xda)\x84$;M\xf2\xdd\xda\x96\xe5\xce\xe3(\xf8\xac\xbf\xc7\xf9\x8e\x91I\xaf\xae~\xefIzb3\xc3S\xd7\xccM\xce\xa6+.ak\xf1l\xc08D\xa1\xc1k\x84h\x9b0\x834-\xae\x96\xb5\x88\x92\xd5\xd8\x83`-u\xc4i\xc1;cE\xf2x\xed\xc4\xce\xa0QO\xad\xccs\x99B\xfe\xe7\xa7\xce\xb5\xdf\xb4\xdd\x8e\xa1Gm\xc1&lt;]\x9b#\xc9&gt;\xc7\x9ek\xfb\xf7\xbf$\xde-\x88\xb5]w\x9d\xc9\xa7\xb2B\x92u]Jn3~WSV\xc0|c\xe5\xb3\xd7\xb4\xbb\x9e\xba&amp;NK\xd4\x90\xc4\x9a\xf9\x99KCx\xcc\xaaj\x95\xf6Lb\xe3\xf1\xd39\xe1\xd9Q\xa9\xf6\xd7\xc2\xdft|ub\xae\xdc$p\xf5\x89\xa5@?\xf9
7\xb7+K:i\xa2{\xe8jRL\xec\xcfn$\xa6\x8fMv\x86\xb6\xd9\xedT\x94\xdc]\xaa
&lt;\x90p\x9e\xaeo88\x80o\xdf\xf6\x88\xcd\xa2\xd7J\x9a\xd7\xe7c~\xb3k'\xb1\xbd\xa2\x9a\xa6\xb3\xb0\xb8\xaaE"us\x96\xee\xa6\xc2\xf6\xabhg2T\xa3;:\x95\xf09\x8d9\xf423\x9d\x8dRp\xd2\xe9\xeaw\xc6\x8e`\xd4\xd7P\xc8.\xa82=\xd7\xcd\xbd\xfa}\xca\xffp\xd2#\xf8|;!\x8ag\x91\x8d\xc1c{\xb1\xdd\x83\xce\x93\xa0\xb2\xc3\p\xe8\xae\xc9\xd7\xd5s\xc1\xff\xce{[\xb7\xf2\x8b\x8e\xacZ\xdb\x94\xc6cunL\xbc\xd7O\A\xf6\xd01\x9e\xc4\xcd\xd1\\x83@K\xe5\x92D\xc0\xff\\xc3w\x8d\xaf\x8fe6qC\xa0\xac\xbc\xcd'\xa8\xf6\xe8Wl\xc0/\xb9\xd4\xf0!\xa6\xa7\xb3.&amp;=M\xc0\x8fiO)\x8d\xc2\x96Se\x91c1\xa9J\x9dv\x8fK\xdc\x8f\xdfTO\xea\xf4RO\xb1\xdeQ\xf2,\x92i\xf7\xb3\xdf\x99.\x8b\xb4\xf2S\xa0x8\x9d#\xa3\x90\xbef&amp;\x92\xea\xa9]L\x89\xc6\x99bq\xb0\xc8\x85}\xceW.\xdfnXX\x83&gt;Y\xb5\xad\xf0\x96
\x9fXax\xc0[\xf3k8S\xee\xca\xa5\x86\xf9\xa1\xec\xd2i\xda0\xc44\x83\xe1\xdd\x96\xd7\x97X\xee\xd8T\xa8\xd5\x8d\x82\xbc\x96\xf6\xb8Ftf0\x83	\xcc\xb5W\x83\xf9\xd2\x8e\xdb\xe3\x91\xf3\xcd\xf1\xd0\x95\x8e\xa6\xe9xE\x81\xdb}\xfdg\xdb\xf1Sc$D$\x86=l\xec\xf0\xe1\x84\x89\xc3\xda\xb1\xc9\xbc!\xc3\x8e\xfc\xe1\xec\xefK@\xaa$\x99\xb0\xa4Y\x8b\xa1x[Fr\xc2P
u\x93\xfc\x8e\x81S\xad\xba\xb3\xb8\xc6\xe7`\xff{\xad\xfeX\x82d\xc7$i`\xe44\xb8	\xaf\xbd\x8e\xb9\xf5\xe9\xcb\xdc7\xce\xaf!\xe0\x9b8\xd3vD\xc7o\x8a\x82\x8f\xfc\xd7\xcb\x98\xb0)\xa4.\x83["b\xe6iQ{G\xad\xc7\xaf"J\xa6^\xccMY7\\x8e^\xd2`&gt;?n\xe8\x88\x91+\xab\x8em\xb8\xf4\xbd\xb4\xdf\xe9\xf8F`!o2\xc8\xd7\x8b+\xe7\xb9\xe1\xaf\xc6M\x85#FQ/ \xe3\xb3B\x8b)\x81\x9d!\x9b\x9aut\xc4\xe8\xe9E\xe8 u\xf5\x8f;\xc7g\xa6\x92\x98\xf1\xae\x9f)(zW_5\xcc&amp;\xc9\xbc$^\\xed\xbck\x8d\xd3\xb5\xebi\x96\xf8|.V\xcd\xc7\xe3\xfb\xc0\xc4:
\x9aJ\x9a\xac\xb0H:j\xf6\xfaO\xbdQE\xa4\xdcK\xf4\xb1\xd0vC\xa6\xb2A\xb1AH\x83P%\x83\xdd\xf5\x83a\xab\xf2\x9b\x92
\xf92\xe6\x80\xb8d\x96\x9e\xf0\xb9\xcc*\xdc\xe1\xd4F#o\xc3\xb7\xce\xe0\x89\xb6\xa5\xf5\xb42\xc8\xaf\xee\xeb\xc21]\xd5\xa30\xe3\xfd\xfb\xe29\xf3\xef'\xd9\xe4\xd1\xc7\xfd\x84\xb6^\x9b\x89"?\xba^1*a*\x9cL\xab*&gt;\xbe\xb8\xd8\xddv\xc5\xb8|d\xc7\xcb\xd4\x8bL\xe17\xf1SIdT\xbcvr\xfb&gt;\x9dUm\xfc\xfe\x9ba[:\xbc\xa5\x80\x90\x847b\xb7\xa9\xcd#\x9fo\xc6{tT\x98rI[\xafJ\xe17~\xfb\xeau\xd4X\xdd\x96\xb9\xf2\xaeuy*Sr6@s&gt;\x94?\x86;AN\xc3\xe2/o\xda\xd1\x87R\xacN&lt;\xf7_\xbf\xf1\xa77&gt;O\xe7\xc9\x9d\x9b\x8b\x8bq\xccD,F\xbdu\xe6SA(\x848o\xa1w\x9dS\xd8W}ht\xa9k\xc6j\xa7-lWB\xf8\x91\xe3wya!JP\xb1m\xc5\xf4\x8d\xf6h\x86\x88+$C\xc9\x9f\x93!s\x99\xf6\xdfv\xd4u\\xe4{\xab\x8b\xd2\xb8~\x80\xc8\x8e\xd9e~G	\x82\x9e6P\xcb\xc8\x9f\xc9\x87v\xaa\xd4\xe8t\xed\xbar\xd3\xc1:\x860M\xbb\x85\xe9./n\xf4\xe3`d\xb6\x99\xee'\xd0\xe7\xf3\x9a^x\x8drI\2\x94};\xe9\xef\xdf\xb2\x9ehSn\xb9\xdc]\x90\x9b\xbd\xcc&amp;&lt;]\xef\xc3\xd3?\xca`ns\xeb\xc3\xbf\xffj\x9c\xea\xa7U\xfbp\x94B\xe6K\xc3Q`~\xb5\xa2?vt1\xabr\x8d\xb8\xe5\xfc\xdb\xc4\xe9\xb8\xfdZ\xe0\xfe\xa0V:n\xda\xe2\xea\xbf\xc2I\xdb\xf8\xcd\x9eF\xe7^{\xa5\xaa\xcbNa\x95s@so\xa82\xec\xe8\xa5Y)\xfc8-\xba\x85q\xe3\xb4\xddl(U\xcbQl S[\xeb\xb0D\xa8\xbe%*\xd6\xfbL_\xae2\xc6\xc7E\xc3%\xef\xa7\x9f\x87\xf9\xa5r\xfd[\xb2ob\xb8\x8c\xe8J@\xec\x8f\x90\xd5\xd2\x87'ZF\x85.\xe9w\xd9*\xa0$\xa9\xf7\xc5\x8b\xb7\xfeX\xa2fQ\xf3\xc3$\xe2u\xfa\xa4I\x92\x85d\x8d\xdd0\xf8\x96l\x8b\xc6\x93\x80\xabm\xb7f\xeaJ\xac\xd9\xdf\xed0\xb0=j\x83.Q\xa12\xbe\x9em\xa3\xeb\xfd
\x84\x8d\x9d\xae\xb2f\xc1\xe7@\x87\xd1\xc8l\xbfD\x97\xd6\xae\xa2_V\xdf}\x8de;YW\xfe\xd4~\xc4e\xdbY\xf7\xc9\xdd\xeac\x91\x8ab[y:\xda\x9ayQ\xa6M\xcb.U\x8e\xa7L\x93k\xa4(6Z,\x95\xb4\xa2y+m\xc5e	\xe46Z(\xd1\xcd\xbb\xa3\xc2\xd0Cr\x82\xb8|\xd6t\xd9lO\xef\xad\xdb\xe4\xa5=\x9e\xda\xb5\xa5\xca\xed\xb1\xf5\xad&lt;Okb{\xd6{\I\xc8K\xceg\xb5\xc9D\xe1aC\x8a\x81\xbb.\xf2\xf2=\x88n;\x97\xa8F\xe5\xe2l\xf1\x9a\x9c\xe6fs\xe9\xa4M\x9d\x82NNe\xf8	\xdf
\xafr\xf9\xb2!O\xf7\xc7\x82f\xe3\xf8l\xa6X\x88\x81U\xa3\xb9-j\xa9de#Q|GM\xa4O'\xc1;\xe8\xfbB3\xb1m\xe4\xd4bhh\xf1\xcb\xee{Y=i18\xef1\xc6J\xe8h\xc8\xb24\xefZ\x8f\xbe\xa7\xda2X6\xdaw\xdd"\xdeU\x96\x86\xd0^U\xec\x97\xfa\xd4?\x9a]-0\xcao+\xce\xecw\x857\x82@\x9d\xd9+\xb7=E\xabT\x9c#&lt;\x84O/a"&gt;\x87\x85Z\xf3\xc7\xc2,Jv\xc2\xbf\xfa\xc9\x81\xdbut\x96\x88]\x97a\x84\xc4*\xa0U\xd8\x813\x84\xde\xa6"Z'\xd5\xc4\xda\x95\xeeLu\x95WD\xae\x92Tgh\xd2\xf9\xebF=#\xfdw\xaf|\x81yw\xcd\xef1\xec\xb1\xe0\xbc\xeew\xf9P,\x8d\xb7\x85\xf2\xf95&amp;hY\xd5\x93\x81\xfd\x89\xd1l\xc6ZFZwQ\xf7u\xad\xab\xe0\xb5E\xfb\xe2\x9e\xe1\xae\x9f(\xa5\xb5\x9a\x86~;\x8b\x96\x95\x99\xcc\x86\xdd8\xb2\xdc:c\xd8y\x8a\x9a\x81_\xe46c\xaa)\xf4\xdc[\xbd\xaf&lt;u\xe8\xa1z\xd8b\xf0\xe56(\xf5\xaf%Rm\xf2\xeb\xf8\xc7	\xfd\xd12T\xe6\xa5\xc5\x9a\xac\x96\xb8y\xd5fxL\xec5\x81\xc1\\x8d.\xd6\xff,\xe4#\xf0\xa8\x8c\xb03\xd4\x91\xb4\x83q\xbd\xfd\xaee\xa7\xb2\xae\x9f\x9fr\xbe\xbfO$u\xe13\xba\x98/\x87C\xfdp\xd2\x87\xab\x9f\xc1\xefyUh\xd4\xe3\x9f%\xa2\xfe\xf3e\\\xce{\xd3\xa5-\xcd\xdd\xeau\x9a\xde\xb6Y\xbf~\xc1jd\xf2\xa6\xa7\xa5\xce\xbeU\xc4\xb4\xd9k\x8c\xec\xae\xf9\x92\xcf\xc6\xd2\x9e\x92\x98KUd\xadf\xf9\xa6\xa1\xc8\xa2\xf1\x95$\x8fZ\xa4k\x8c\xfbP\xcd\x9ea\x96|0\xd9\xa7~{\xaaTs\x96)}\xed+&amp;=\xa1 \xd6\xb9]q5Q\x9a\xe4\x94f\xaeS\xaf\xe1Zkk\xeb\x975\xafZy\xad\xef\xd4\xc2\xc6\xa6c\xbf\xa2\x80\x8c\xe1XNS\xd6A\x83.Sw\xbe\xb1\xd4\xa0\xe7}\x96\x95\x86\xbeN\xfe\x9bX\xf4\xbc\x8cAHIX\xa5n\xe1a\x938Y\xe0\xa9\xc1Y\xc5\xb1%\xf1\x93b@\xd7u\xa6G"\x915Y\xb3&gt;@\x86\xc4\xc6\xf7^\xa2\xc3\xe8c\xf7\xa4SJ\x87@(\x9eFpAO\xd5\xfd\x92\x915og\xcd\xe9y\x82|\xe5\x89\xf0\x82HI#\xfc"\xb4\xc1\xfc\xec\x95Vx\xa9\xac\xde\xb5\x92\xd7h\xc2\xa1S\xaa\x9f\xed\xb8\xael\xdd\xba\xae\xfa8~\xa7\x8bJ	D\xd9D\xd4\x8dS\xde\xe6.\xb9n\xe3 %\\xf9`\xcc\xc9\xa8[K\x97?I\xb5Y2]\xd2\x8e\x97\xcc\xf2\xa1\xfd5M\xa61\xaaj\xed\x92\xcb-io?\xde\x86N]/\xe13\x9e\xf75\xcdu\xbe\xd6/\x84\xbb\xcc\xff\xb1\xf2\xdb\xf3m[2\x81\xd1)f1#\xea\xc7\xe7z\xfa\xa4\xb7\xd5d\xf9r\xa1\x81\x9d\xbbe\xf6=:\x83\xb2\xcc\x943=$D\x84q\x8cg\xe8\xdf\x92\xb9-\xc1%F(\xe6\xcf\xe3&lt;_\xb8\x81\xdb\x8f\\xa8\xab\x9b\xa3\xa2	t\xd5\xd0\xdfoC\x82(bi\xe6\xcb\xa3\xd2.p}\xdc\x8f5&amp;\x98\xd8\xed\xab\xf8\xcc\xcb\x8a\x91_\xfa\x86\xd8\xb46\xa0\xb9\xcecAbTU\xa7P?\x9f\xc0\xed\x95X\xd7\x85\x86-\xc3"\xbf\xef#3\x85K\xc94\x9e-\xf4+\xd0\xd7\x93"\xa2\x99{`\x87AT\x91\xc2\xfa~O/[\x9a\xef\xb5ws\xc8\xf6E\xb9\xce\x96\x99\xd3\xbf\xd1\xe4\xddr\xf5fG\xf2\x9a\x9ennJ;:\xc3\x97RTiXSt4|\xe5\xf3\xbb\xbc\x99l\xc1OIyBww\xa2&gt;#\x9e\x82\x9f\x80w\x8f\xc7&gt;\xa4\xfb1\xaa\xaf\x9f\xb6\xd2m^\xd2\x93n\xa3\xdb\xc9\xcdE,e\x98W\xc1U\x80\x8b\xb6&gt;xr\xc9\xd6\x9fU-~\xdb\xd0y?\x8b\xa7nB1@@J\xe7\xc5,\xd4\xff\x8a\x88\xe5\xb3X\x97\x86
f\xaa^\xba&lt;\\x92gMy\xc9&lt;\x96\xe0\xdd0\xacOn\xf2S~\xef\xda\x8b\xa66\xc4\xa4;5\xa3\xacu\x9ez\xca\xc77\x8e\\xceo\xb6\x86\xbe\xfe+\x98\xf4i\xe7k4\xa3v\xcd\xceV\x8f&gt;b\xcd\xcb\xb4\xb7\xbf^vT\xb4\x95|\xea\xe9h\xae\x98\xd6V\xcb
o\xd5\xba\xd8ZV4M\xcf2\xd8\x94\x88\xf4{{|\xf7fjH\xae\xa1\xa1\xb9\x92\xfe\xa2\x97nV\x926\x8cyF\xc7EqX\xcb*p\xf9\x84\x8a\xf9$\x84Q\xf6&gt;\xb9/\xd7&amp;\x8bc5?\x85\x8e\x83W\xefi\xc2\x8e\xda\xce,\xad5M\x9b\xba\xa6X\xdf_E\xc1\xbfN\x872\xbf	D\xa8bi\xa0Hlo\xb0l\xbd\x9b\xae.v\xcam}\xc0\xde~\xa7"7\xaeu\xfep\xd9\x99-)\xb6w\x91\xfbF\xe1\xe3\xebAs\xd3\x9c\xf8\x89E\xb3`\xaaKl\xaa^\x99\xe6`m\xbaBi\xde_Az7'\xa3\x89%\x8dr\xfb\xbf{1\xd1
!Q\xdc\xeb!H\x8cMB`AY\xfe\xc1?\xae\x85\xa2K\x9eH\xca\xc6\xf0U,\xfd\xc1\x97\xa2\xef\xe8\xad\xe7\xad\xf4[\x8c\x9a\xd6Hc\xb1W\x8b\xae\xe0?\xb0\xf7\xc7\x87\x9dA\x9b\xc1y\xf4\xf2\xd4j\xa02d\x84\xac\xa6\xba\xe3R\xc8\xbd5\xa0\xa7+k\xa8\xaf&gt;\xbc\xe0\xafLn+\xf7\xb0zo)CBI\xba\xcb\xc1\x934DM&lt;\xe2\xb6\xb3\xb3&amp;\xf1\xd8E\xe5\xafs\xda\xfd1\xb9\xb0\x97\x95g\xf0.\xb7r5\xd6O\xd9\xc8n\xceM\x9b\xff]\x81NaF\x83\xed~\xd5\xfc-\xab\xb90\xed\xb56'\xadx5\x82\xaf\xffy\x8d\x9e\xf8],\xf7\xb9i\xfa\x90oo\xd1\xe3\x8d\xc5\x96\xe7\xa2W{\xdf\x82*L\xa1\x88\xbe~C\xe4Wj\x8e\xe7\xd3\xd4\xdb\xb6\x81\xda\x92\x8d\xa3\xcf\xd3\xda\x90|\xf3\xc5\xd9\xd9\xab#|0\x9bT\xb5,sU\xa8\xd2\x90\xf3ly\xe7\xca\x85\x80\x8f\xb9`\xb6TX\xaa0\x8fb^\x82\xc1A(\xf3\x9a\xf7@\xad\xd7n\xeb\xe3\xd6!\xe9v\x81\xeb\xe3h~\xde\x94\xd2(dwN\xc7.\xe2 \xaa\xf6\xfa\x93u(\x9b~1+e\x87 &lt;\x98\xc9K\x97\xfd1Ra\xc1\x8aL=\x9f\x8f\xa9\xc0\xfd\x8bp\xedF"	\x92{\x8f\xfdD\xfb\xb2\x92\xb6\xecA\xdfbR\xdd\xf0&amp;lU\x90\xfbOb\xbb\x98%rs\x8a\xf9\x8c\xcc\xd6\x8e2\xee\x9f&lt;g{\xf3\x9aW\xe1\x81\xc5oB\xb0\x91\x97~,\xf7I\xca\xcd\xdbl\x82V\xe3\xc9X\xb0\xb7\xcc-i\xdf?\xec'\xe3\xa4\xe4ON}v\xcf\x8c\x82\x9d_\xd5\xe9a!n\xe0$\xde7\xea:\xae\xeay\x97\xcei\xbdx\xb69"z[?	\xc7\xf7t\xb3Q\xa4\x90	\xf5&gt;\xdby\x9dK\xda\x9bS\xaf\xd9n\x9b\xfb\x9a\xbc\x86+\xf3\xb4\x9a\x9c\xc6\x84c\xde\xb1=GG-`./A=\xff\x94c\xca\xcc\x92\xeb&lt;\x97\xe7\x89\xc1\xe4\xd0E-A\xd2\xf9UQj\x95\x9a\x8bx\xd9\/\xc5VH+|\xb8[\xd9N*\xabyU\xd1\x8a\xf1\xf9\xf5\xcd\xca\xbb\xbcd\xd1B\xfa\x9a\xdf\x81t\\xc0\x81\xd2.\xed\x8d\xf7\xf6\xab\xa2\xaa;\x82g\xbc\xc2\x83\xaa\xe7\x94-YE|\xd3\x\\xa8a.\xd4*4?S2j\x85\xe4f$1\x9d\xf5\x99\x9eE[O\xb2\xb2_B	\xcb\xb1r\xb9\xc0/Yg\xb7Unh\xef3\xf2;\xb29\xaa\xfb\xb0V\xab\xb2-=#\xcc6\x86\xb5?\xb5\xea\xf3t\xa9\xff|\xf9\xe7\x9b\xdc\xaa\xfc\xd7\xdf6\x93\xf5;\x8e;\xee\xafcw\xees^\xfa+kz\xa3\xab}Q\xebp~X\x95&lt;NH\x98\x82]\xc2\xa1\xb1}\x99\x8fs`c|&lt;,s?NJ\x8f&lt;\xdd\xa7\x9da\xe6\xa9\xdch0\xbf]-!m\x86K\x9a`\x98I\xa6G\xa4\x89aC\xf8\xf0\xd8\x9f\xc7\xf7\xdc6\x89\xb7^\xc7\x9d\xbe\xb6~\x9b\x97\xfa\xc1\xfdl\xe7\xfbW\xd9\x82\xb1\x92$&lt;\xe6?\xf2Wc\x92\x99M"!e-\x84\xdcqz=\x9d\xcc-\xb8A$\x8cg;\x85\xf153r8\xa4Oc\xf2:\xc0\xfe\x96rIe#\xb2\x8d\xb7\x9a\xe99\xbd\xa3\xe8\xed\x95o\xa9\x8f\xdd\xf3v\xc0\xbd\xb4\xb1\xda\xc5\x96u\x85\xfd!(\xd8\xf4%\xf0N5\xc6xs\xd7\xdcs\xc3\xecq\xb1sc7\xa7\xeb\x8a\xfcf\xba)\xcc\x84/"\xf3\xba#\x8a\xc8g\SW3ub*2wl\xca\x99\xbeJ;\xbf%\xeb\xa8\xe3\xf5\xd4\xe2$7\x90b\xb3{\x87\U\xd8F\x92@z\x93\x84\x8d\xb5\x9f\xf6\xc0\x96\xac\x9c\xf0T\xe0\xb7	~o\xa3\xe6\x9d\xcd\x8f\xa0gk\xc4\xdc\x8b4\xae\xadM'\xed\x93\x81\xac\xfd\x84\GMQ|/Y\xaf(\xae\x80	3\xaa65\xdeE7\x90
6$"T\xd3\xfe\xc4\x86"\xeb\xf3\xb6\xffm\xb878\xd9\xf1\x91\xe0\xdf.s\x91\x8c@\x9a\xe1\xfcM\xa1'\xfd=\xa6\xa8\x9dLo/\xbf\xbf\xaaSh\x84\x8d\xb9M\xfd\xc5\xce\xa8x?\xb3\xf4+MD\x8d\xb5|jXg\x8d`\xcc\x89\xa4-\xd0\xd1\xbcyoL\xf4\xf1r\x82;\x87wPH\xeeD\xd4\x9e(\x9a\x98O\xdd\xb3\xa6\xf2\xd5\x84\xdc\xb9\xdeA\x9d\xc1@X\x8f#w\xa7\x81\xedZQ;\xff=\x8e\x85c\xd9pC\xce\x88@\xf1\xc7\xabIY_p\xb9\x89\xc1\xd1FA\xd7\xb7!\x8d\xe8\xd5\xcd)\xcf\xc6\xe6\xe9\xf4|\xe9\xf3\xfa\xc3%\xd8Pf!@\xaa,\x89\xbb\xfd\xd1\xbd\x96Qf\xd9\xb6\x89\x90\xc7\x9c$\xf2gi\xd8\xee\xbd\xbe\xaa\x84\x9a\xb3/|uz\xde\x8c;*\xd3\xa6\x8d\xb2\xb4\xca\xe5\x8f7\x95\xb8\xc9\x8f#\xb2\xc6\xc63\x95\xb5\xd8q\x91&lt;X&gt;\xcbg\xf21)6*Y9l\xf1\xac`\xcfp\xddO\xab\x9a(\x99\xff
G\xa8\xd0s\xa4\xc5?\xe3\xd7e\xe4I\xec]\xb3\xd0\xbf\xe6F6j\xf1\xb2\xd8~\xacc\xfa;\xdbi&lt;.\x82&amp;@\x9a\xd1\xd3jk\x9d\x8b\xe1V\xe02/O\xa2WS\xdf\xe6y\xbeA\xb4\x82B$C/\x8d!J\xf5L&amp;\x96U]v:&gt;Gz\xde\xd8\xc4\xfe\xe96y=\xc2W\xa0fh\x8dv\x98P+\xa8\xceP\xe5h"\x9c?\xb9^\xd4nQ\xcb\x81\xb4\xea\x92\xcc\xcf
\xa7\x84sq\x88\xefU\xf8\x93F}h\x9c\xcf\xe2z\xe2\x80\xbf\xdf\x95'\xe7\xb8\xef\xc7y\xab4\xb6\xdfn\x87FRb_\xb7\xbc\xf8\x97\xf2\xdar\xc9\xd5\xab\xf98\xe6\xf9\xee\x94\x80\x85w$S.c\xa1\xadBR\xd2\x89\xec\xd7\xab\xf6BP\xdaz\xaa\xe7\xa7J\xd41M\x89BEe\xfa\xf5\x80\xbc&lt;rV\x84\x827'/+\x8cg\xb02\xa3\xb3\x89\xc5\xcf\)\xf4\xfb\x84x\x91\xbbq\xc1\xd3\xd5d&amp;\xa9v\xd8f\xa4\x9fV\xe2g\x82\xc9\xa0P\xee$,\xac\xf8\xd7\xa9\xf7\xd1\xf8\x89	\xc4|\xa1(\xf7\xec\xfa\xcb_\xf0H~G\xa2g\xef\x85\x87/\xc1X1+\xf4\xbc,|X\xd1\x8b\xd6\xbc\x95\xad\xd9\x91\xc3D]\xef\xdcoWP\xd5-\xb1d\xc3\xc1\xf9Tk\xa9\x8dt\xa4 C\xf4o\xf01&amp;\xb0\x8e3\xb68m\x9d\x85x\xcd\xea\xe0+\xe5\xf1\x82\xd3\xb7\xa9\x83\xba\xfbc\xde\x8b\xa5\x81('\xffp\xa7\x8cO\xbd\xdfEk\x93\xf9\xd6=\xd5B\x8c\x81\xdb6{J\x94c!\xd3\xfe@-\xf7\xfc\xd7\xa8\xe4 U-\xf2\xea-\xc4B+\xdd3\xfePD\x9c\xb3\x98V \xf0\xfe\xb8\xb2\xe3\x9a\xd4\xc7\x83\x84\xbe\xa0pR\xfba\xb1A%*\x93Z\xb5\xe9\xf1\xc0\x9es\xd7\xe3\xa1\xacY\x88\xad\xeb\xb0
\xe7\xc8\xb7\x8c\xe6?\x8e\x88\x9d\x87\xab&amp;\x83v\x8fj\xd6n\xe5)zug\x89r8\xf6"\x93G^\xd9Bd\xba\xcf\xf2K\x80a\xee\xbf\x9a\xd75\xd8\xba\xac\xf2\xe3a\xa0\x87(\xc8(g[7\xcc(SD\xaf:\xab%W\xe2\xb1q\xaaJ\xb7)\x8a\xcb:\xce\xbf\xb55\xae\x9aG\xa7\xb1\x93\xa7\xb9\xaa\xbdn\xd0\xe9n{"\xb7\xef\xf4\xf2\xc0\x84\x94!\xa94)r\x87\x869\xaa(\x8c/LXez)\xc9Z\xee,\x91\x92\xea\xd2\x8d\xe2i\xd01&gt;\x82\xafs\xc9\x84\xe0\xbe6\xb1\xc9\xa3\xae\xd6\xdf\xaeO\xc0\x87\xdd\xbf\xbb\x9c'Pf\x99\xed}~\xdc\xcb{\xbeY\xe3\xa1\xe2\xd4c\x8f\xaft\xaaS\xed\xeb\xfa\xe5\xad\xba\xdb\xf4\xc4\xfba\xce\xfa\xbd\x8d8\xb2\x86\xb7\xd0\xc9wQ\xfb[Q\xaa[\xc5\xf9\xb8_\xfax\x9b6\x9bW\xc0\xdf\xb1g\xae\x97@\xe1fT\x924\xec\xc9&gt;W\xa2\xc3\xbd:\xde\x8a\xd21j3\xa6\xbb\xae\xbb\x95[\xdf\xa8L\xa4\xc4\xec.5\x8e\xbeHy#\xac\xf18)F\x93\xa6A\xb0{\xf5\x9a\x84\xc5\xfc}\xd6\x9b\x99H\xf1K\x80\x9c)\xadZ\xd7c\xa4\xdaF\xd2\x8d\x80,\xe9T\x8c\xbaF\xfd\x8b\xa1\x97\xfc\xd22\xe5\x86\xf1+OFx\xaaS_9\xaf\x9b\xf2\xc6\xe4\xc2Y\xb7d\xe7\xca&amp;\xa8\x93\x81\x90?0u\xfc\xa0g\xbcN\xa80?\xf4%\xd5\xfd\xb1hH\xc2[\x96\xb3\xf6-\xf5\xbd\xffS#\x94W\xe8\x97\xa8w\x89t\xf4\xa8V\xdbG\x8a\xf4\xb7\xd0%\xf3R\xd2$!d{\xc9\xc8\xa5\xa78L*\x9a\xe2\xa1~\xf4\xc094L\xe9\xb2\xe7\xebd\xdc\xa7\x87\xe6@{\xab\xb1~\xba\xcb\x8f(N\xb1\x97\xcaJr\xda\xaf\xdeD\xcdfgNj\xbfwF\x8f\x85\xb9&gt;/\xcf]\xdf\xb8\xd8\x9d\xea\xbc(`\xca5\xeb\\x89\xd0!:\xe8\xc6\xc0f\xdadw\xda-\x9a`j;\x9e@Bw\x88J\xa4\xe9$\xf4\x93\x84\xda\xb3U:^\xe3P@\xad\xb8\x90\xfb\xc4D\x80{XiT\x9d&amp;\x91^\xc7\xb9\\xbej\xc2YyG\xdf^/\xd1o 2R\xadm\x8e\xbf\xc4\xc4\xa1n\xb4bT&amp;w\x95`\x8b\xe2\xc5\x95\x99\xe7\xdb\xcd\xe4\xe7m\x9f\xa7\xed?_\xb9\xc4\\xad\xa2\xa9\xa3\x9c _\xa5\xa5\x98&lt;\x9f%\xa2\x8e\xe1\x91\xfd^*}\x9fS-JE\;@\xdd\xff\xaeRj\x96\xcbN\xdc\xfe--\xa5\x8c\xf8Z\xfb\xf3%\x82\xac\x8a\xea\xa7!\xcd!ii6\xd9\xe0\xdc\\xc6\xb1\xfeCS\xc6\xfb\x8b@
\xd6\xfe&amp;~\xb0\xc2LA\xb2\xaf\xe3\x960\x8d\xdb~\xdd)\x8f\xe6N\xeab\xf3ukr[\x99\xf1\xb3\xc1x\xf6p\xec)\xb47\x89\xddv 5\xd5\xdb\xec\xde\xb0\xb5Q\xd7\xab\xfb(&amp;,\xf0p\xce\x90\xba\xb8\xfbYyj"[\xffL\xdf\xc7=ZG\x82LvHH~\xb5\xcf@&amp;\xc9\x9b/f\xc5\xe5*]\xde\x8e1-P\xd9\xe7~im\xd5yNWK\xfc\xfb\x8f\xd9\xce\xfb\x95\xe3&lt;\xb3\xe2\xa6/\xe7\xef\xa8^\xb5V\xa9\xd8"\xaa\xbb\x9b\xfe\xaa\xc3\xc5I\xe1\xcf\xe9Z,\xa87\xa6\x85\xe0\x990\xa8\xfb\xf8\xc6\xdb\xbc\x83\xb5\xf5\xb8\x80\x9b\xe0\xf6\xfa\xa3\xc8\x99\xc4\xd0)32#n\xfa\xccX\xee\xb1fB\xa3P:\xa6\x9bi\xea\xe3\xeb\xbdv-['|\xde\x83\xcc\xcc\xcc\xf6{\xae@\xef_G\x9d\xcfO\xd9\xbf\xa9	+qY\xa5\xf0"\xbaU\xbe+e@T\x98?_y\x96R\xf1s\xbf\x86\xe6\xc8\xc9\xc0;w\xa4\x81"\xb1L"\xc6B\xd2\xbe+\xb7&lt;\xccg\xbe[q\xd7\xdc*,{\xc4F@\xa7\x85\x9a\x99\xd2\xd3i\xe9\xd6\xa6_\xd5`\xb5q0\xe24\xc6\xe4H$j\xea\x8ah\xedA\x9e\xbf{\xcd\xb9\xfa\x87\x9d\xb4(\xe8zr\xa5\xb0\x9b\xab\xd0\xc8\xede\xec?\x9et#1ep\xd9\xeaiN\xf3\xa6\xf9+iB\xdf\xeb\x85\xb6\xd1\xdf\x84Izu\xd5\xa5\x96jTF\xe5m%L\xd5Gj\x83\xd72\xc9\xe3\xc2{\x93\xe7\x88Z8q\xb3\xb9\xdf0\xf1\xf3\x9c\xfb\xcfj\xe7\xd7\xf5\xf55\x9f\xf4'&amp;\xa2A\x9e\x8d\xd4lQ\xf8W\xa5p\xcb\xdb\xc5\xdawD*U\xe7\xd2\xcf\x8c\xe8o)\xba\xa8\xb3\xdc\x80X\xf1\xa7\xab\xafw\x8b-\xb0\xc4-g\xcbng;\xa6\x98f[Tf\x8c\xa1LP4\x84\xc7\x900A\x8b\xae\x8d\xdaE\xa41\xf1K\xba\xd9m{\xfe~mE\xd3N\xe7s\xf3)Bx\x8c)\xe3\x8fJ\xed\xa3\x86\xe3:W\xb96\x9fwy\x87\xdez\xb8yhf\x83\xfe\x8bs\x8e\xa3z\xd9\xc6\xeat\xfd\x9a\xba\xb6\xf8\xe2\xca\x92\x92\x8d\x9d\x8f\xd6\xef\x89 \xbc\x92\xfa+\xae\xce\xdb\xb1\xe9\xd5f\xb3\xeb\x9d\xae\xe6*#4\xc4p\xb5\xf2\xae\xb7\xed\x9fo\xefL\xe1\x8e1-\xdc\xd2m\x85I\xcd\x8b\x83usG\xa2\x976CtY\xa3\xed\G.y\xd8DaZ\xec\xae54\xd2\xb4&gt;l\xa8\xc1\x8c\x93\xe1\xe8\x8f\xbf#\xf0\x97U\A\xeaXt\xfd2UN\xf9i3\x8c\xbe"\x85\xcdL\xe1\xd8\xe5\xea\xcb\xcfK\xbf \xbf\xe4\x88\x8d\xa6\xa0V\xa2\xd9\xa4.ZV%\xb2Tv\xeb\xfe8-\xccRLS\xec\xefRDXM/\xf4\x8fC\xf1\xad\xd1inM\xc8\xb4\x9a\xb9\xfc\xe1\xd1\x94\x98c\xf0\x83^o\xc5\x9eo:\x91\x8e}\xae\xe0t\x84B[b\xc0\x9b\xae\xf7y\x86\xc9\xe6\x8e\xe4
\xb6\xb7\xadp\x92\xe2h\xacU\xa1\xbd\xa3tb\xe1y;\xa1\xd4Y\xe2'\x94\xbc&amp;Z8\xe2\xca\x9e\x9e\xf7\x81\xb8z\xf3\xdeG\xb3u\xc8"\x86\xb4m\xb5\xb3\xab\xa7\xd3f\xbf\xb70h\x91\xd2\x94f\x86\xca\xf6bj\xe8\xaa!\xcb\x91\xd9K\xa1HZ\xda\xad|0\xd5\xe0S\x81\xf3X\x96J\xa6\xe3\xa6\xb3\xef\\xe8\xf1!S6\xdb\x96B\xbf\xcbl\xaec\xba\xf0\x99\xce\xc5\x8e{\x9aV\xd3\xa2\x85\x94\x9d\xafz\x92./C\xc1\xa5\xe3&lt;\xdbD9\x9e\x8e\xbe\x9f\xb7wv;\xcd\xb4L#\xdc\xaa\x9eNI\x9f\xed'	\xca\x85\xa9\x98B\x8c\xbcwW\xe3I\xdc\xe3y\xa8\x84\xbf\xaa/\xd4\xc1\x8b\xe6\xc4r\xa3wn\xfd\xd8\x90|\x9eQ\xe8\xf1J\xa2\x97\xc9^\xd2\x88\x89aQ\x83]\xa7/\xea\xbcz
sA[O+\xdb43\xd9\xec\xeej\xe5\xf29\x9e\xf24]O\x9dk\xe9D\xd3\xda\xa9W\xd4\xf8h\xdfGh\xdbV\x85\xf91;\xa79\x93z&lt;\x85\xe5k\xc9l\xd8G#\xe87\xb9\xb6\xe3K\x87!;Vx\x95\xa1[
l\x83\x8eX''\xa2\xcb_m\xd4\xdf\xdf\xae\xb9E\xa8\x93\xacG\x9f\x9av\x9ep\x99\xadA"Dw\xcdw\xce+,\xb5\xa1|\xc7\xce""{\xd3\xf6\xd9\xd3\x93J\xf3=&lt;\xb8\xa7/\xce\xf7%\xdc\xb7\xb1&lt;\xf4y\xbbe=\x96\xc6\xb1\x9d\xed#pw}\xfa\xfam\xf3bYPL=&amp;\xe4g\xf5\x9a\xd7z\xfd\xd5{\xd3\x99(J\xb1,\xad\xdaQ\xce\x81S\x90	\xeb\xb4\x92\x84\x9e\x81L\x99wr\xb7\xf8\xf7aBY^\xc6\xfbK9\xb1\xa4\xf5\x96\x92\xa5\xd6l\x88C\xc8\xb4\x997%+\xef\x8c5\xd0\xe7\xaf}\xf6V\xef\xb9\xa34\xca4\xd1[\xe4\xcb\xb7`\xe8\x86\xbefy\x9d)\xdd\xdb
\x81^\xb2\xe7\xe0*1\xd6/Mq\x90\xe7\xe5V\xe2\xb9\xa7;],\xd5"\x8b\x903\xc6Nz\xee\xc7\x96\x83\x84\x95\xa8\xe5\x82\xb1p\xcd)"|:\x8c\xb7... (set the log level to DEBUG or TRACE to see the full content) 
 </msg>
<msg timestamp="20200512 15:34:18.773" level="INFO">PUT Response : url=https://10.30.8.83:9999/osm/vnfpkgm/v1/vnf_packages/75a0bc50-2721-4106-a89f-af86b6d22d19/package_content 
 status=204, reason=No Content 
 body=None 
 </msg>
<msg timestamp="20200512 15:34:18.773" level="INFO">${response} = &lt;Response [204]&gt;</msg>
<status status="PASS" endtime="20200512 15:34:18.773" starttime="20200512 15:34:18.460"></status>
</kw>
<kw name="Check HTTP Response Status Code Is" library="keywords">
<arguments>
<arg>${response}</arg>
<arg>204</arg>
</arguments>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${expected_status}</arg>
</arguments>
<msg timestamp="20200512 15:34:18.777" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200512 15:34:18.777" starttime="20200512 15:34:18.776"></status>
</kw>
<status status="PASS" endtime="20200512 15:34:18.777" starttime="20200512 15:34:18.774"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Accept</arg>
<arg>application/json</arg>
<arg>Authorization</arg>
<arg>Bearer ${token_id}</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20200512 15:34:18.779" level="INFO">${headers} = {u'Accept': u'application/json', u'Authorization': u'Bearer SHpXNCuJbi3sqOWGF20cSitvcYDyiO2Q'}</msg>
<status status="PASS" endtime="20200512 15:34:18.779" starttime="20200512 15:34:18.778"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${osm}</arg>
<arg>/vnfpkgm/v1/vnf_packages_content?id=${VNFD_ID}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200512 15:34:18.867" level="INFO">GET Request : url=https://10.30.8.83:9999/osm/vnfpkgm/v1/vnf_packages_content?id=a6f85472-7cf4-41d9-9fa8-a097a69cc3ce 
 path_url=/osm/vnfpkgm/v1/vnf_packages_content?id=a6f85472-7cf4-41d9-9fa8-a097a69cc3ce 
 headers={'Accept-Encoding': 'gzip, deflate', 'Accept': u'application/json', 'User-Agent': 'python-requests/2.23.0', 'Connection': 'keep-alive', 'Cookie': 'session_id=437ba845b2056b2a6ecb13b58ea82c511a8a12ec', 'Authorization': u'Bearer SHpXNCuJbi3sqOWGF20cSitvcYDyiO2Q'} 
 body=None 
 </msg>
<msg timestamp="20200512 15:34:18.867" level="INFO">GET Response : url=https://10.30.8.83:9999/osm/vnfpkgm/v1/vnf_packages_content?id=a6f85472-7cf4-41d9-9fa8-a097a69cc3ce 
 status=200, reason=OK 
 body=[
    {
        "_admin": {
            "storage": {
                "zipfile": "package.tar.gz",
                "folder": "75a0bc50-2721-4106-a89f-af86b6d22d19",
                "path": "/app/storage/",
                "fs": "local",
                "descriptor": "a6f85472-7cf4-41d9-9fa8-a097a69cc3ce/a6f85472-7cf4-41d9-9fa8-a097a69cc3ce_vnfd.yaml",
                "pkg-dir": "a6f85472-7cf4-41d9-9fa8-a097a69cc3ce"
            },
            "type": "vnfd",
            "projects_write": [
                "ef4ccc39-2ba3-4421-9796-697b6b62b5dc"
            ],
            "modified": 1589297658.4335485,
            "onboardingState": "ONBOARDED",
            "userDefinedData": {},
            "operationalState": "ENABLED",
            "created": 1589297658.4335485,
            "projects_read": [
                "ef4ccc39-2ba3-4421-9796-697b6b62b5dc"
            ],
            "usageState": "NOT_IN_USE"
        },
        "id": "a6f85472-7cf4-41d9-9fa8-a097a69cc3ce",
        "vendor": "NXW",
        "version": "1.0",
        "short-name": "test-vnf",
        "_id": "75a0bc50-2721-4106-a89f-af86b6d22d19",
        "mgmt-interface": {
            "cp": "ens3"
        },
        "description": "Simple VNF",
        "name": "test-vnf",
        "vdu": [
            {
                "count": "1",
                "image": "cirros",
                "interface": [
                    {
                        "mgmt-interface": true,
                        "external-connection-point-ref": "ens3",
                        "position": 1,
                        "name": "ens3",
                        "virtual-interface": {
                            "type": "VIRTIO"
                        }
                    }
                ],
                "id": "test-vnf-vdu",
                "description": "test-vnf-vdu",
                "name": "test-vnf-vdu",
                "vm-flavor": {
                    "vcpu-count": 1,
                    "storage-gb": "1",
                    "memory-mb": "512"
                }
            }
        ],
        "logo": "nxw_logo.png",
        "connection-point": [
            {
                "port-security-enabled": false,
                "type": "VPORT",
                "name": "ens3"
            }
        ]
    }
]
 
 </msg>
<msg timestamp="20200512 15:34:18.868" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20200512 15:34:18.868" starttime="20200512 15:34:18.779"></status>
</kw>
<kw name="Check HTTP Response Status Code Is" library="keywords">
<arguments>
<arg>${response}</arg>
<arg>200</arg>
</arguments>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${expected_status}</arg>
</arguments>
<msg timestamp="20200512 15:34:18.871" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200512 15:34:18.871" starttime="20200512 15:34:18.870"></status>
</kw>
<status status="PASS" endtime="20200512 15:34:18.871" starttime="20200512 15:34:18.868"></status>
</kw>
<kw name="Length Should Be" library="BuiltIn">
<doc>Verifies that the length of the given item is correct.</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>1</arg>
</arguments>
<msg timestamp="20200512 15:34:18.873" level="INFO">Length is 1</msg>
<status status="PASS" endtime="20200512 15:34:18.873" starttime="20200512 15:34:18.872"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VNF onboarded to OSM</arg>
</arguments>
<msg timestamp="20200512 15:34:18.874" level="INFO">VNF onboarded to OSM</msg>
<status status="PASS" endtime="20200512 15:34:18.874" starttime="20200512 15:34:18.874"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>90s</arg>
</arguments>
<msg timestamp="20200512 15:35:48.877" level="INFO">Slept 1 minute 30 seconds</msg>
<status status="PASS" endtime="20200512 15:35:48.878" starttime="20200512 15:34:18.875"></status>
</kw>
<kw name="Create Catalogue Session" library="keywords">
<assign>
<var>${catalogue}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>catalogue</arg>
<arg>${CATALOGUE_URL}</arg>
</arguments>
<msg timestamp="20200512 15:35:48.882" level="INFO">Creating Session using : alias=catalogue, url=http://localhost:8083, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20200512 15:35:48.883" starttime="20200512 15:35:48.881"></status>
</kw>
<msg timestamp="20200512 15:35:48.883" level="INFO">${catalogue} = catalogue</msg>
<status status="PASS" endtime="20200512 15:35:48.883" starttime="20200512 15:35:48.880"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Accept</arg>
<arg>application/json</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20200512 15:35:48.884" level="INFO">${headers} = {u'Accept': u'application/json'}</msg>
<status status="PASS" endtime="20200512 15:35:48.884" starttime="20200512 15:35:48.884"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>${catalogue}</arg>
<arg>/vnfpkgm/v1/vnf_packages?vnfdId=${VNFD_ID}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200512 15:35:48.965" level="INFO">GET Request : url=http://localhost:8083/vnfpkgm/v1/vnf_packages?vnfdId=a6f85472-7cf4-41d9-9fa8-a097a69cc3ce 
 path_url=/vnfpkgm/v1/vnf_packages?vnfdId=a6f85472-7cf4-41d9-9fa8-a097a69cc3ce 
 headers={'Connection': 'keep-alive', 'Accept-Encoding': 'gzip, deflate', 'Accept': u'application/json', 'User-Agent': 'python-requests/2.23.0'} 
 body=None 
 </msg>
<msg timestamp="20200512 15:35:48.965" level="INFO">GET Response : url=http://localhost:8083/vnfpkgm/v1/vnf_packages?vnfdId=a6f85472-7cf4-41d9-9fa8-a097a69cc3ce 
 status=200, reason= 
 body=[{"id":"3c176dbf-d52d-403d-a915-475a425d2766","vnfdId":"a6f85472-7cf4-41d9-9fa8-a097a69cc3ce","vnfProvider":"NXW","vnfProductName":"test-vnf","vnfSoftwareVersion":null,"vnfdVersion":"1.0","checksum":null,"softwareImages":null,"additionalArtifacts":null,"onboardingState":"ONBOARDED","operationalState":"ENABLED","usageState":"NOT_IN_USE","userDefinedData":{"OSM1":"yes","isRetrievedFromMANO":"yes"},"_links":{"self":"/vnfpkgm/v1/vnf_packages/3c176dbf-d52d-403d-a915-475a425d2766","vnfd":"/vnfpkgm/v1/vnf_packages/3c176dbf-d52d-403d-a915-475a425d2766/vnfd","packageContent":"/vnfpkgm/v1/vnf_packages/3c176dbf-d52d-403d-a915-475a425d2766/package_content"},"manosOnboardingStatus":{"OSM1":"ONBOARDED"},"c2cOnboardingState":"UNPUBLISHED","projectId":"admin"}] 
 </msg>
<msg timestamp="20200512 15:35:48.965" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20200512 15:35:48.965" starttime="20200512 15:35:48.885"></status>
</kw>
<kw name="Check HTTP Response Status Code Is" library="keywords">
<arguments>
<arg>${response}</arg>
<arg>200</arg>
</arguments>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${expected_status}</arg>
</arguments>
<msg timestamp="20200512 15:35:48.967" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200512 15:35:48.967" starttime="20200512 15:35:48.966"></status>
</kw>
<status status="PASS" endtime="20200512 15:35:48.967" starttime="20200512 15:35:48.965"></status>
</kw>
<kw name="Length Should Be" library="BuiltIn">
<doc>Verifies that the length of the given item is correct.</doc>
<arguments>
<arg>${response.json()}</arg>
<arg>1</arg>
</arguments>
<msg timestamp="20200512 15:35:48.968" level="INFO">Length is 1</msg>
<status status="PASS" endtime="20200512 15:35:48.968" starttime="20200512 15:35:48.967"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VNF onboarded to Catalogue</arg>
</arguments>
<msg timestamp="20200512 15:35:48.968" level="INFO">VNF onboarded to Catalogue</msg>
<status status="PASS" endtime="20200512 15:35:48.968" starttime="20200512 15:35:48.968"></status>
</kw>
<doc>Test title: Test 1 - VNF Onboarding from site - OSM
Test purpose: This test aims at verifying that a VNF can be successfully onboarded in the Multi-Site Catalogue through the SBI from a specific per-site OSM orchestrator.</doc>
<status status="PASS" endtime="20200512 15:35:48.969" critical="yes" starttime="20200512 15:34:18.310"></status>
</test>
<status status="PASS" endtime="20200512 15:35:48.969" starttime="20200512 15:34:18.096"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="1">Critical Tests</stat>
<stat fail="0" pass="1">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="VNFOnboardingFromSingleSite" pass="1">VNFOnboardingFromSingleSite</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
