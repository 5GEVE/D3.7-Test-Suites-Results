<?xml version="1.0" encoding="UTF-8"?>
<robot generated="20200610 10:53:04.683" generator="Robot 3.2.1 (Python 3.5.2 on linux)" rpa="false">
<suite id="s1" name="CreateNSInstance" source="/home/vepc/5GEVE/integration_tests/testing/tests/5tonic_integration/CreateNSInstance.robot">
<test id="s1-t1" name="Get all NS">
<kw library="REST" name="Set Headers">
<tags>
<tag>settings</tag>
</tags>
<doc>*Sets new request headers or updates the existing.*</doc>
<arguments>
<arg>{"Version":"1.0"}</arg>
</arguments>
<status starttime="20200610 10:53:04.969" status="PASS" endtime="20200610 10:53:04.969"></status>
</kw>
<kw library="REST" name="Get">
<tags>
<tag>http</tag>
</tags>
<doc>*Sends a GET request to the endpoint.*</doc>
<arguments>
<arg>/nslcm/v1/ns_instances</arg>
</arguments>
<msg timestamp="20200610 10:53:04.975" level="INFO">Starting new HTTP connection (1): localhost</msg>
<status starttime="20200610 10:53:04.970" status="PASS" endtime="20200610 10:53:05.066"></status>
</kw>
<kw library="REST" name="Output">
<tags>
<tag>I/O</tag>
</tags>
<doc>*Outputs JSON to terminal or a file.*</doc>
<arguments>
<arg>request</arg>
</arguments>
<msg timestamp="20200610 10:53:05.067" level="INFO">
{
    "proxies": {},
    "sslVerify": true,
    "body": null,
    "method": "GET",
    "netloc": "localhost:8000",
    "allowRedirects": true,
    "scheme": "http",
    "url": "http://localhost:8000/nslcm/v1/ns_instances",
    "query": {},
    "timeout": [
        null,
        null
    ],
    "path": "/nslcm/v1/ns_instances",
    "headers": {
        "User-Agent": "RESTinstance/1.0.2",
        "Content-Type": "application/json",
        "Accept": "application/json, */*",
        "Version": "1.0"
    },
    "cert": null,
    "timestamp": {
        "local": "2020-06-10T10:53:05.043261+02:00",
        "utc": "2020-06-10T08:53:05.043261+00:00"
    }
}</msg>
<status starttime="20200610 10:53:05.067" status="PASS" endtime="20200610 10:53:05.075"></status>
</kw>
<kw library="REST" name="Output">
<tags>
<tag>I/O</tag>
</tags>
<doc>*Outputs JSON to terminal or a file.*</doc>
<arguments>
<arg>response</arg>
</arguments>
<msg timestamp="20200610 10:53:05.083" level="INFO">
{
    "body": [
        {
            "nsState": "INSTANTIATED",
            "id": "fb16ccc7-3968-4fe0-89af-8f9ad8d5a861",
            "nsdId": "1c60241d-cbc6-458a-b9a0-b1aa804fc971",
            "nsInstanceDescription": "NS for test1 at MS8 integration testing",
            "vnfInstance": [
                {
                    "vnfdId": "bccb27ca-5b28-4335-9473-53a7bd6b4800",
                    "vnfProvider": "",
                    "instantiationState": "INSTANTIATED",
                    "id": "8d6430d9-0f62-479e-aee2-ce244e0796a2",
                    "vnfSoftwareVersion": "",
                    "vimId": "abf0948e-1c5a-4423-bee8-451e0a2c4a38",
                    "instantiatedVnfInfo": {
                        "vnfState": "STARTED",
                        "extCpInfo": [
                            {
                                "id": "eth0",
                                "cpProtocolInfo": [
                                    {
                                        "ipOverEthernet": {
                                            "addressRange": {
                                                "minAddress": "",
                                                "maxAddress": ""
                                            },
                                            "macAddress": "fa:16:3e:d8:66:d2",
                                            "ipAddresses": [
                                                {
                                                    "type": "IPV4",
                                                    "addresses": [
                                                        "10.20.5.33"
                                                    ]
                                                }
                                            ]
                                        },
                                        "layerProtocol": "IP_OVER_ETHERNET"
                                    }
                                ],
                                "cpdId": ""
                            }
                        ],
                        "flavourId": ""
                    },
                    "vnfProductName": "",
                    "vnfPkgId": "",
                    "vnfdVersion": ""
                }
            ],
            "nsdInfoId": "",
            "nsInstanceName": "TEST1 NS"
        },
        {
            "nsState": "NOT_INSTANTIATED",
            "id": "17962b4c-7dd1-4a0c-a967-189e1384ace8",
            "nsdId": "721c3dbd-b65b-3096-9299-1dae8886016d",
            "nsInstanceDescription": "NFV NS instance for experiment 40",
            "nsdInfoId": "",
            "nsInstanceName": "NS_exp_40"
        },
        {
            "nsState": "NOT_INSTANTIATED",
            "id": "db79bdd8-28c1-4b9d-a557-d0a605698880",
            "nsdId": "721c3dbd-b65b-3096-9299-1dae8886016d",
            "nsInstanceDescription": "NFV NS instance for experiment 42",
            "nsdInfoId": "",
            "nsInstanceName": "NS_exp_42"
        },
        {
            "nsState": "NOT_INSTANTIATED",
            "id": "a6df0aa6-abb6-46be-bfc8-35d3f59b8c58",
            "nsdId": "587e23d0-953a-36f7-8b34-bda794f38d94",
            "nsInstanceDescription": "NFV NS instance for experiment 44",
            "nsdInfoId": "",
            "nsInstanceName": "NS_exp_44"
        },
        {
            "nsState": "NOT_INSTANTIATED",
            "id": "12fcd31b-d1dd-45b6-9764-d6079dac0968",
            "nsdId": "587e23d0-953a-36f7-8b34-bda794f38d94",
            "nsInstanceDescription": "NFV NS instance for experiment 45",
            "nsdInfoId": "",
            "nsInstanceName": "NS_exp_45"
        },
        {
            "nsState": "NOT_INSTANTIATED",
            "id": "90224b1a-27c1-4405-b303-a43d041cdf5f",
            "nsdId": "587e23d0-953a-36f7-8b34-bda794f38d94",
            "nsInstanceDescription": "NFV NS instance for experiment 46",
            "nsdInfoId": "",
            "nsInstanceName": "NS_exp_46"
        },
        {
            "nsState": "NOT_INSTANTIATED",
            "id": "1d5e7e4d-aca0-4e87-a7b5-6ce447c7dd56",
            "nsdId": "587e23d0-953a-36f7-8b34-bda794f38d94",
            "nsInstanceDescription": "NFV NS instance for experiment 47",
            "nsdInfoId": "",
            "nsInstanceName": "NS_exp_47"
        },
        {
            "nsState": "NOT_INSTANTIATED",
            "id": "8fc3e0ed-2500-4bcb-8c86-85c3d9cb3afe",
            "nsdId": "587e23d0-953a-36f7-8b34-bda794f38d94",
            "nsInstanceDescription": "NFV NS instance for experiment 48",
            "nsdInfoId": "",
            "nsInstanceName": "NS_exp_48"
        },
        {
            "nsState": "NOT_INSTANTIATED",
            "id": "5d0ef9ea-82c2-4212-8fc4-f72c99e99fb6",
            "nsdId": "587e23d0-953a-36f7-8b34-bda794f38d94",
            "nsInstanceDescription": "NFV NS instance for experiment 49",
            "nsdInfoId": "",
            "nsInstanceName": "NS_exp_49"
        },
        {
            "nsState": "NOT_INSTANTIATED",
            "id": "f4b0e4af-54dd-4573-901e-6d741a671065",
            "nsdId": "587e23d0-953a-36f7-8b34-bda794f38d94",
            "nsInstanceDescription": "NFV NS instance for experiment 50",
            "nsdInfoId": "",
            "nsInstanceName": "NS_exp_50"
        },
        {
            "nsState": "NOT_INSTANTIATED",
            "id": "24f0fc77-42ea-42a7-8565-bd01e94715ee",
            "nsdId": "587e23d0-953a-36f7-8b34-bda794f38d94",
            "nsInstanceDescription": "NFV NS instance for experiment 82",
            "nsdInfoId": "",
            "nsInstanceName": "NS_exp_82"
        },
        {
            "nsState": "NOT_INSTANTIATED",
            "id": "384b6164-ed0b-41a3-99b4-eabc99f825fe",
            "nsdId": "587e23d0-953a-36f7-8b34-bda794f38d94",
            "nsInstanceDescription": "NFV NS instance for experiment 83",
            "nsdInfoId": "",
            "nsInstanceName": "NS_exp_83"
        },
        {
            "nsState": "INSTANTIATED",
            "id": "e06b508f-a877-4bd3-91f5-c7255af9f0bf",
            "nsdId": "587e23d0-953a-36f7-8b34-bda794f38d94",
            "nsInstanceDescription": "NFV NS instance for experiment 84",
            "vnfInstance": [
                {
                    "vnfdId": "ef5faf76-895b-11ea-bc55-0242ac130003",
                    "vnfProvider": "",
                    "instantiationState": "INSTANTIATED",
                    "id": "dea0b3c5-a3ea-4f7f-837d-1ef2391dbe77",
                    "vnfSoftwareVersion": "",
                    "vimId": "abf0948e-1c5a-4423-bee8-451e0a2c4a38",
                    "instantiatedVnfInfo": {
                        "vnfState": "STARTED",
                        "extCpInfo": [
                            {
                                "id": "eth0",
                                "cpProtocolInfo": [
                                    {
                                        "ipOverEthernet": {
                                            "addressRange": {
                                                "minAddress": "",
                                                "maxAddress": ""
                                            },
                                            "macAddress": "fa:16:3e:a2:a1:d4",
                                            "ipAddresses": [
                                                {
                                                    "type": "IPV4",
                                                    "addresses": [
                                                        "192.168.156.28"
                                                    ]
                                                }
                                            ]
                                        },
                                        "layerProtocol": "IP_OVER_ETHERNET"
                                    }
                                ],
                                "cpdId": ""
                            }
                        ],
                        "flavourId": ""
                    },
                    "vnfProductName": "",
                    "vnfPkgId": "",
                    "vnfdVersion": ""
                },
                {
                    "vnfdId": "be55660e-8961-11ea-bc55-0242ac130003",
                    "vnfProvider": "",
                    "instantiationState": "INSTANTIATED",
                    "id": "d5224523-2b5a-40b5-9ddd-5e9eeca7c51f",
                    "vnfSoftwareVersion": "",
                    "vimId": "abf0948e-1c5a-4423-bee8-451e0a2c4a38",
                    "instantiatedVnfInfo": {
                        "vnfState": "STARTED",
                        "extCpInfo": [
                            {
                                "id": "eth0",
                                "cpProtocolInfo": [
                                    {
                                        "ipOverEthernet": {
                                            "addressRange": {
                                                "minAddress": "",
                                                "maxAddress": ""
                                            },
                                            "macAddress": "fa:16:3e:62:52:af",
                                            "ipAddresses": [
                                                {
                                                    "type": "IPV4",
                                                    "addresses": [
                                                        "10.20.5.32"
                                                    ]
                                                }
                                            ]
                                        },
                                        "layerProtocol": "IP_OVER_ETHERNET"
                                    }
                                ],
                                "cpdId": ""
                            },
                            {
                                "id": "eth1",
                                "cpProtocolInfo": [
                                    {
                                        "ipOverEthernet": {
                                            "addressRange": {
                                                "minAddress": "",
                                                "maxAddress": ""
                                            },
                                            "macAddress": "fa:16:3e:aa:69:47",
                                            "ipAddresses": [
                                                {
                                                    "type": "IPV4",
                                                    "addresses": [
                                                        "192.168.156.12"
                                                    ]
                                                }
                                            ]
                                        },
                                        "layerProtocol": "IP_OVER_ETHERNET"
                                    }
                                ],
                                "cpdId": ""
                            }
                        ],
                        "flavourId": ""
                    },
                    "vnfProductName": "",
                    "vnfPkgId": "",
                    "vnfdVersion": ""
                }
            ],
            "nsdInfoId": "",
            "nsInstanceName": "NS_exp_84"
        },
        {
            "nsState": "INSTANTIATED",
            "id": "13dc1fd1-ea3c-4b23-b9af-663342c263bf",
            "nsdId": "587e23d0-953a-36f7-8b34-bda794f38d94",
            "nsInstanceDescription": "NFV NS instance for experiment 86",
            "vnfInstance": [
                {
                    "vnfdId": "ef5faf76-895b-11ea-bc55-0242ac130003",
                    "vnfProvider": "",
                    "instantiationState": "INSTANTIATED",
                    "id": "c979901d-fd09-4f88-b818-9c81da284704",
                    "vnfSoftwareVersion": "",
                    "vimId": "abf0948e-1c5a-4423-bee8-451e0a2c4a38",
                    "instantiatedVnfInfo": {
                        "vnfState": "STARTED",
                        "extCpInfo": [
                            {
                                "id": "eth0",
                                "cpProtocolInfo": [
                                    {
                                        "ipOverEthernet": {
                                            "addressRange": {
                                                "minAddress": "",
                                                "maxAddress": ""
                                            },
                                            "macAddress": "fa:16:3e:57:53:e6",
                                            "ipAddresses": [
                                                {
                                                    "type": "IPV4",
                                                    "addresses": [
                                                        "192.168.189.28"
                                                    ]
                                                }
                                            ]
                                        },
                                        "layerProtocol": "IP_OVER_ETHERNET"
                                    }
                                ],
                                "cpdId": ""
                            }
                        ],
                        "flavourId": ""
                    },
                    "vnfProductName": "",
                    "vnfPkgId": "",
                    "vnfdVersion": ""
                },
                {
                    "vnfdId": "be55660e-8961-11ea-bc55-0242ac130003",
                    "vnfProvider": "",
                    "instantiationState": "INSTANTIATED",
                    "id": "27702386-b886-40f4-97df-9d8de3995ae5",
                    "vnfSoftwareVersion": "",
                    "vimId": "abf0948e-1c5a-4423-bee8-451e0a2c4a38",
                    "instantiatedVnfInfo": {
                        "vnfState": "STARTED",
                        "extCpInfo": [
                            {
                                "id": "eth0",
                                "cpProtocolInfo": [
                                    {
                                        "ipOverEthernet": {
                                            "addressRange": {
                                                "minAddress": "",
                                                "maxAddress": ""
                                            },
                                            "macAddress": "fa:16:3e:51:58:10",
                                            "ipAddresses": [
                                                {
                                                    "type": "IPV4",
                                                    "addresses": [
                                                        "10.20.5.29"
                                                    ]
                                                }
                                            ]
                                        },
                                        "layerProtocol": "IP_OVER_ETHERNET"
                                    }
                                ],
                                "cpdId": ""
                            },
                            {
                                "id": "eth1",
                                "cpProtocolInfo": [
                                    {
                                        "ipOverEthernet": {
                                            "addressRange": {
                                                "minAddress": "",
                                                "maxAddress": ""
                                            },
                                            "macAddress": "fa:16:3e:29:ed:60",
                                            "ipAddresses": [
                                                {
                                                    "type": "IPV4",
                                                    "addresses": [
                                                        "192.168.189.7"
                                                    ]
                                                }
                                            ]
                                        },
                                        "layerProtocol": "IP_OVER_ETHERNET"
                                    }
                                ],
                                "cpdId": ""
                            }
                        ],
                        "flavourId": ""
                    },
                    "vnfProductName": "",
                    "vnfPkgId": "",
                    "vnfdVersion": ""
                }
            ],
            "nsdInfoId": "",
            "nsInstanceName": "NS_exp_86"
        },
        {
            "nsState": "NOT_INSTANTIATED",
            "id": "af75018e-ae37-4722-b4be-5d23e5883921",
            "nsdId": "587e23d0-953a-36f7-8b34-bda794f38d94",
            "nsInstanceDescription": "NFV NS instance for experiment 88",
            "nsdInfoId": "",
            "nsInstanceName": "NS_exp_88"
        },
        {
            "nsState": "INSTANTIATED",
            "id": "f642961d-8d32-4e1b-a79a-860eb8956e2a",
            "nsdId": "587e23d0-953a-36f7-8b34-bda794f38d94",
            "nsInstanceDescription": "NFV NS instance for experiment 89",
            "vnfInstance": [
                {
                    "vnfdId": "ef5faf76-895b-11ea-bc55-0242ac130003",
                    "vnfProvider": "",
                    "instantiationState": "INSTANTIATED",
                    "id": "c2e851f7-18b1-46cc-b657-37fc1bb82157",
                    "vnfSoftwareVersion": "",
                    "vimId": "abf0948e-1c5a-4423-bee8-451e0a2c4a38",
                    "instantiatedVnfInfo": {
                        "vnfState": "STARTED",
                        "extCpInfo": [
                            {
                                "id": "eth0",
                                "cpProtocolInfo": [
                                    {
                                        "ipOverEthernet": {
                                            "addressRange": {
                                                "minAddress": "",
                                                "maxAddress": ""
                                            },
                                            "macAddress": "fa:16:3e:b1:e1:be",
                                            "ipAddresses": [
                                                {
                                                    "type": "IPV4",
                                                    "addresses": [
                                                        "192.168.236.1"
                                                    ]
                                                }
                                            ]
                                        },
                                        "layerProtocol": "IP_OVER_ETHERNET"
                                    }
                                ],
                                "cpdId": ""
                            }
                        ],
                        "flavourId": ""
                    },
                    "vnfProductName": "",
                    "vnfPkgId": "",
                    "vnfdVersion": ""
                },
                {
                    "vnfdId": "be55660e-8961-11ea-bc55-0242ac130003",
                    "vnfProvider": "",
                    "instantiationState": "INSTANTIATED",
                    "id": "3ec35315-f539-42b9-866d-ee3f562302f2",
                    "vnfSoftwareVersion": "",
                    "vimId": "abf0948e-1c5a-4423-bee8-451e0a2c4a38",
                    "instantiatedVnfInfo": {
                        "vnfState": "STARTED",
                        "extCpInfo": [
                            {
                                "id": "eth0",
                                "cpProtocolInfo": [
                                    {
                                        "ipOverEthernet": {
                                            "addressRange": {
                                                "minAddress": "",
                                                "maxAddress": ""
                                            },
                                            "macAddress": "fa:16:3e:79:9d:fd",
                                            "ipAddresses": [
                                                {
                                                    "type": "IPV4",
                                                    "addresses": [
                                                        "10.20.5.23"
                                                    ]
                                                }
                                            ]
                                        },
                                        "layerProtocol": "IP_OVER_ETHERNET"
                                    }
                                ],
                                "cpdId": ""
                            },
                            {
                                "id": "eth1",
                                "cpProtocolInfo": [
                                    {
                                        "ipOverEthernet": {
                                            "addressRange": {
                                                "minAddress": "",
                                                "maxAddress": ""
                                            },
                                            "macAddress": "fa:16:3e:cb:28:7f",
                                            "ipAddresses": [
                                                {
                                                    "type": "IPV4",
                                                    "addresses": [
                                                        "192.168.236.7"
                                                    ]
                                                }
                                            ]
                                        },
                                        "layerProtocol": "IP_OVER_ETHERNET"
                                    }
                                ],
                                "cpdId": ""
                            }
                        ],
                        "flavourId": ""
                    },
                    "vnfProductName": "",
                    "vnfPkgId": "",
                    "vnfdVersion": ""
                }
            ],
            "nsdInfoId": "",
            "nsInstanceName": "NS_exp_89"
        },
        {
            "nsState": "INSTANTIATED",
            "id": "a9e9e4c1-2ef3-4698-a0f2-f8d6a05709a0",
            "nsdId": "587e23d0-953a-36f7-8b34-bda794f38d94",
            "nsInstanceDescription": "NFV NS instance for experiment 4",
            "vnfInstance": [
                {
                    "vnfdId": "ef5faf76-895b-11ea-bc55-0242ac130003",
                    "vnfProvider": "",
                    "instantiationState": "INSTANTIATED",
                    "id": "80208633-29a6-4346-a6b4-405d053a65d2",
                    "vnfSoftwareVersion": "",
                    "vimId": "abf0948e-1c5a-4423-bee8-451e0a2c4a38",
                    "instantiatedVnfInfo": {
                        "vnfState": "STARTED",
                        "extCpInfo": [
                            {
                                "id": "eth0",
                                "cpProtocolInfo": [
                                    {
                                        "ipOverEthernet": {
                                            "addressRange": {
                                                "minAddress": "",
                                                "maxAddress": ""
                                            },
                                            "macAddress": "fa:16:3e:2b:a6:79",
                                            "ipAddresses": [
                                                {
                                                    "type": "IPV4",
                                                    "addresses": [
                                                        "192.168.147.21"
                                                    ]
                                                }
                                            ]
                                        },
                                        "layerProtocol": "IP_OVER_ETHERNET"
                                    }
                                ],
                                "cpdId": ""
                            }
                        ],
                        "flavourId": ""
                    },
                    "vnfProductName": "",
                    "vnfPkgId": "",
                    "vnfdVersion": ""
                },
                {
                    "vnfdId": "be55660e-8961-11ea-bc55-0242ac130003",
                    "vnfProvider": "",
                    "instantiationState": "INSTANTIATED",
                    "id": "e24bb176-8f97-416a-a3cc-4655618c22d6",
                    "vnfSoftwareVersion": "",
                    "vimId": "abf0948e-1c5a-4423-bee8-451e0a2c4a38",
                    "instantiatedVnfInfo": {
                        "vnfState": "STARTED",
                        "extCpInfo": [
                            {
                                "id": "eth0",
                                "cpProtocolInfo": [
                                    {
                                        "ipOverEthernet": {
                                            "addressRange": {
                                                "minAddress": "",
                                                "maxAddress": ""
                                            },
                                            "macAddress": "fa:16:3e:9a:77:30",
                                            "ipAddresses": [
                                                {
                                                    "type": "IPV4",
                                                    "addresses": [
                                                        "10.20.5.31"
                                                    ]
                                                }
                                            ]
                                        },
                                        "layerProtocol": "IP_OVER_ETHERNET"
                                    }
                                ],
                                "cpdId": ""
                            },
                            {
                                "id": "eth1",
                                "cpProtocolInfo": [
                                    {
                                        "ipOverEthernet": {
                                            "addressRange": {
                                                "minAddress": "",
                                                "maxAddress": ""
                                            },
                                            "macAddress": "fa:16:3e:fa:d5:81",
                                            "ipAddresses": [
                                                {
                                                    "type": "IPV4",
                                                    "addresses": [
                                                        "192.168.147.4"
                                                    ]
                                                }
                                            ]
                                        },
                                        "layerProtocol": "IP_OVER_ETHERNET"
                                    }
                                ],
                                "cpdId": ""
                            }
                        ],
                        "flavourId": ""
                    },
                    "vnfProductName": "",
                    "vnfPkgId": "",
                    "vnfdVersion": ""
                }
            ],
            "nsdInfoId": "",
            "nsInstanceName": "NS_exp_4"
        },
        {
            "nsState": "INSTANTIATED",
            "id": "90e31218-b128-4f58-830d-9e2bb8af67f6",
            "nsdId": "587e23d0-953a-36f7-8b34-bda794f38d94",
            "nsInstanceDescription": "NFV NS instance for experiment 10",
            "vnfInstance": [
                {
                    "vnfdId": "ef5faf76-895b-11ea-bc55-0242ac130003",
                    "vnfProvider": "",
                    "instantiationState": "INSTANTIATED",
                    "id": "26928f5a-38e8-4d07-9ce2-9babaad2f9fd",
                    "vnfSoftwareVersion": "",
                    "vimId": "abf0948e-1c5a-4423-bee8-451e0a2c4a38",
                    "instantiatedVnfInfo": {
                        "vnfState": "STARTED",
                        "extCpInfo": [
                            {
                                "id": "eth0",
                                "cpProtocolInfo": [
                                    {
                                        "ipOverEthernet": {
                                            "addressRange": {
                                                "minAddress": "",
                                                "maxAddress": ""
                                            },
                                            "macAddress": "fa:16:3e:fb:73:9b",
                                            "ipAddresses": [
                                                {
                                                    "type": "IPV4",
                                                    "addresses": [
                                                        "192.168.115.16"
                                                    ]
                                                }
                                            ]
                                        },
                                        "layerProtocol": "IP_OVER_ETHERNET"
                                    }
                                ],
                                "cpdId": ""
                            }
                        ],
                        "flavourId": ""
                    },
                    "vnfProductName": "",
                    "vnfPkgId": "",
                    "vnfdVersion": ""
                },
                {
                    "vnfdId": "be55660e-8961-11ea-bc55-0242ac130003",
                    "vnfProvider": "",
                    "instantiationState": "INSTANTIATED",
                    "id": "c1c15255-c624-46a3-8088-4ce845aeadb0",
                    "vnfSoftwareVersion": "",
                    "vimId": "abf0948e-1c5a-4423-bee8-451e0a2c4a38",
                    "instantiatedVnfInfo": {
                        "vnfState": "STARTED",
                        "extCpInfo": [
                            {
                                "id": "eth0",
                                "cpProtocolInfo": [
                                    {
                                        "ipOverEthernet": {
                                            "addressRange": {
                                                "minAddress": "",
                                                "maxAddress": ""
                                            },
                                            "macAddress": "fa:16:3e:04:5a:1b",
                                            "ipAddresses": [
                                                {
                                                    "type": "IPV4",
                                                    "addresses": [
                                                        "10.20.5.28"
                                                    ]
                                                }
                                            ]
                                        },
                                        "layerProtocol": "IP_OVER_ETHERNET"
                                    }
                                ],
                                "cpdId": ""
                            },
                            {
                                "id": "eth1",
                                "cpProtocolInfo": [
                                    {
                                        "ipOverEthernet": {
                                            "addressRange": {
                                                "minAddress": "",
                                                "maxAddress": ""
                                            },
                                            "macAddress": "fa:16:3e:01:98:9e",
                                            "ipAddresses": [
                                                {
                                                    "type": "IPV4",
                                                    "addresses": [
                                                        "192.168.115.20"
                                                    ]
                                                }
                                            ]
                                        },
                                        "layerProtocol": "IP_OVER_ETHERNET"
                                    }
                                ],
                                "cpdId": ""
                            }
                        ],
                        "flavourId": ""
                    },
                    "vnfProductName": "",
                    "vnfPkgId": "",
                    "vnfdVersion": ""
                }
            ],
            "nsdInfoId": "",
            "nsInstanceName": "NS_exp_10"
        },
        {
            "nsState": "NOT_INSTANTIATED",
            "id": "1db733e0-46d8-4868-a743-7d78c949a201",
            "nsdId": "3c65d716-1fa8-3202-a45a-cceafd3662e2",
            "nsInstanceDescription": "NFV NS instance for experiment 28",
            "nsdInfoId": "",
            "nsInstanceName": "NS_exp_28"
        },
        {
            "nsState": "NOT_INSTANTIATED",
            "id": "4cb429a9-adaf-4622-a23f-ca4a1c6d049f",
            "nsdId": "3c65d716-1fa8-3202-a45a-cceafd3662e2",
            "nsInstanceDescription": "NFV NS instance for experiment 29",
            "nsdInfoId": "",
            "nsInstanceName": "NS_exp_29"
        },
        {
            "nsState": "NOT_INSTANTIATED",
            "id": "b2a10843-0740-4e2b-848e-c4c80ddec4a6",
            "nsdId": "3c65d716-1fa8-3202-a45a-cceafd3662e2",
            "nsInstanceDescription": "NFV NS instance for experiment 30",
            "nsdInfoId": "",
            "nsInstanceName": "NS_exp_30"
        },
        {
            "nsState": "NOT_INSTANTIATED",
            "id": "586ebbd3-1791-49fa-b203-404624854a00",
            "nsdId": "3c65d716-1fa8-3202-a45a-cceafd3662e2",
            "nsInstanceDescription": "NFV NS instance for experiment 31",
            "nsdInfoId": "",
            "nsInstanceName": "NS_exp_31"
        },
        {
            "nsState": "INSTANTIATED",
            "id": "0143a90c-067b-4c3b-9465-4f49d8a4b14d",
            "nsdId": "3c65d716-1fa8-3202-a45a-cceafd3662e2",
            "nsInstanceDescription": "NFV NS instance for experiment 32",
            "vnfInstance": [
                {
                    "vnfdId": "ef5faf76-895b-11ea-bc55-0242ac130003",
                    "vnfProvider": "",
                    "instantiationState": "INSTANTIATED",
                    "id": "bd8bad42-ea84-4a4c-b63a-ec2351ab904a",
                    "vnfSoftwareVersion": "",
                    "vimId": "abf0948e-1c5a-4423-bee8-451e0a2c4a38",
                    "instantiatedVnfInfo": {
                        "vnfState": "STARTED",
                        "extCpInfo": [
                            {
                                "id": "eth0",
                                "cpProtocolInfo": [
                                    {
                                        "ipOverEthernet": {
                                            "addressRange": {
                                                "minAddress": "",
                                                "maxAddress": ""
                                            },
                                            "macAddress": "fa:16:3e:0b:6a:61",
                                            "ipAddresses": [
                                                {
                                                    "type": "IPV4",
                                                    "addresses": [
                                                        "192.168.226.1"
                                                    ]
                                                }
                                            ]
                                        },
                                        "layerProtocol": "IP_OVER_ETHERNET"
                                    }
                                ],
                                "cpdId": ""
                            }
                        ],
                        "flavourId": ""
                    },
                    "vnfProductName": "",
                    "vnfPkgId": "",
                    "vnfdVersion": ""
                },
                {
                    "vnfdId": "be55660e-8961-11ea-bc55-0242ac130003",
                    "vnfProvider": "",
                    "instantiationState": "INSTANTIATED",
                    "id": "f38701e4-f57e-40f1-9439-3a6f7e0a22ec",
                    "vnfSoftwareVersion": "",
                    "vimId": "abf0948e-1c5a-4423-bee8-451e0a2c4a38",
                    "instantiatedVnfInfo": {
                        "vnfState": "STARTED",
                        "extCpInfo": [
                            {
                                "id": "eth0",
                                "cpProtocolInfo": [
                                    {
                                        "ipOverEthernet": {
                                            "addressRange": {
                                                "minAddress": "",
                                                "maxAddress": ""
                                            },
                                            "macAddress": "fa:16:3e:8f:c0:65",
                                            "ipAddresses": [
                                                {
                                                    "type": "IPV4",
                                                    "addresses": [
                                                        "10.20.5.50"
                                                    ]
                                                }
                                            ]
                                        },
                                        "layerProtocol": "IP_OVER_ETHERNET"
                                    }
                                ],
                                "cpdId": ""
                            },
                            {
                                "id": "eth1",
                                "cpProtocolInfo": [
                                    {
                                        "ipOverEthernet": {
                                            "addressRange": {
                                                "minAddress": "",
                                                "maxAddress": ""
                                            },
                                            "macAddress": "fa:16:3e:62:a9:e9",
                                            "ipAddresses": [
                                                {
                                                    "type": "IPV4",
                                                    "addresses": [
                                                        "192.168.226.12"
                                                    ]
                                                }
                                            ]
                                        },
                                        "layerProtocol": "IP_OVER_ETHERNET"
                                    }
                                ],
                                "cpdId": ""
                            }
                        ],
                        "flavourId": ""
                    },
                    "vnfProductName": "",
                    "vnfPkgId": "",
                    "vnfdVersion": ""
                }
            ],
            "nsdInfoId": "",
            "nsInstanceName": "NS_exp_32"
        },
        {
            "nsState": "NOT_INSTANTIATED",
            "id": "9b2d45ec-32a1-4f8c-b1c6-0074104eb7e0",
            "nsdId": "3c65d716-1fa8-3202-a45a-cceafd3662e2",
            "nsInstanceDescription": "NFV NS instance for experiment 36",
            "nsdInfoId": "",
            "nsInstanceName": "NS_exp_36"
        },
        {
            "nsState": "NOT_INSTANTIATED",
            "id": "4e69e304-8fc7-4a9b-b4f8-6d686bda6314",
            "nsdId": "587e23d0-953a-36f7-8b34-bda794f38d94",
            "nsInstanceDescription": "NFV NS instance for experiment 37",
            "nsdInfoId": "",
            "nsInstanceName": "NS_exp_37"
        },
        {
            "nsState": "INSTANTIATED",
            "id": "23ab59e6-590d-4e83-97ea-fa64ec8664ca",
            "nsdId": "3c65d716-1fa8-3202-a45a-cceafd3662e2",
            "nsInstanceDescription": "NFV NS instance for experiment 38",
            "vnfInstance": [
                {
                    "vnfdId": "ef5faf76-895b-11ea-bc55-0242ac130003",
                    "vnfProvider": "",
                    "instantiationState": "INSTANTIATED",
                    "id": "10cf2e03-b8a5-4d5d-84e4-f8966cdcb8b4",
                    "vnfSoftwareVersion": "",
                    "vimId": "abf0948e-1c5a-4423-bee8-451e0a2c4a38",
                    "instantiatedVnfInfo": {
                        "vnfState": "STARTED",
                        "extCpInfo": [
                            {
                                "id": "eth0",
                                "cpProtocolInfo": [
                                    {
                                        "ipOverEthernet": {
                                            "addressRange": {
                                                "minAddress": "",
                                                "maxAddress": ""
                                            },
                                            "macAddress": "fa:16:3e:91:02:71",
                                            "ipAddresses": [
                                                {
                                                    "type": "IPV4",
                                                    "addresses": [
                                                        "192.168.96.16"
                                                    ]
                                                }
                                            ]
                                        },
                                        "layerProtocol": "IP_OVER_ETHERNET"
                                    }
                                ],
                                "cpdId": ""
                            }
                        ],
                        "flavourId": ""
                    },
                    "vnfProductName": "",
                    "vnfPkgId": "",
                    "vnfdVersion": ""
                },
                {
                    "vnfdId": "be55660e-8961-11ea-bc55-0242ac130003",
                    "vnfProvider": "",
                    "instantiationState": "INSTANTIATED",
                    "id": "3718fcee-06dd-4169-a308-7692a8c6992e",
                    "vnfSoftwareVersion": "",
                    "vimId": "abf0948e-1c5a-4423-bee8-451e0a2c4a38",
                    "instantiatedVnfInfo": {
                        "vnfState": "STARTED",
                        "extCpInfo": [
                            {
                                "id": "eth0",
                                "cpProtocolInfo": [
                                    {
                                        "ipOverEthernet": {
                                            "addressRange": {
                                                "minAddress": "",
                                                "maxAddress": ""
                                            },
                                            "macAddress": "fa:16:3e:8b:ea:46",
                                            "ipAddresses": [
                                                {
                                                    "type": "IPV4",
                                                    "addresses": [
                                                        "10.20.5.50"
                                                    ]
                                                }
                                            ]
                                        },
                                        "layerProtocol": "IP_OVER_ETHERNET"
                                    }
                                ],
                                "cpdId": ""
                            },
                            {
                                "id": "eth1",
                                "cpProtocolInfo": [
                                    {
                                        "ipOverEthernet": {
                                            "addressRange": {
                                                "minAddress": "",
                                                "maxAddress": ""
                                            },
                                            "macAddress": "fa:16:3e:9e:a7:90",
                                            "ipAddresses": [
                                                {
                                                    "type": "IPV4",
                                                    "addresses": [
                                                        "192.168.96.12"
                                                    ]
                                                }
                                            ]
                                        },
                                        "layerProtocol": "IP_OVER_ETHERNET"
                                    }
                                ],
                                "cpdId": ""
                            }
                        ],
                        "flavourId": ""
                    },
                    "vnfProductName": "",
                    "vnfPkgId": "",
                    "vnfdVersion": ""
                }
            ],
            "nsdInfoId": "",
            "nsInstanceName": "NS_exp_38"
        },
        {
            "nsState": "NOT_INSTANTIATED",
            "id": "56932fc9-fc94-4cc6-9eb8-069d0bfa375a",
            "nsdId": "3c65d716-1fa8-3202-a45a-cceafd3662e2",
            "nsInstanceDescription": "NFV NS instance for experiment 40",
            "nsdInfoId": "",
            "nsInstanceName": "NS_exp_40"
        },
        {
            "nsState": "INSTANTIATED",
            "id": "994764f3-8e76-4fac-8082-16d1ecd4ecb4",
            "nsdId": "8efc1682-5010-3e57-b708-57fd50833e4f",
            "nsInstanceDescription": "NFV NS instance for experiment 41",
            "vnfInstance": [
                {
                    "vnfdId": "ef5faf76-895b-11ea-bc55-0242ac130003",
                    "vnfProvider": "",
                    "instantiationState": "INSTANTIATED",
                    "id": "27941c85-ec71-492c-93a6-538899832247",
                    "vnfSoftwareVersion": "",
                    "vimId": "abf0948e-1c5a-4423-bee8-451e0a2c4a38",
                    "instantiatedVnfInfo": {
                        "vnfState": "STARTED",
                        "extCpInfo": [
                            {
                                "id": "eth0",
                                "cpProtocolInfo": [
                                    {
                                        "ipOverEthernet": {
                                            "addressRange": {
                                                "minAddress": "",
                                                "maxAddress": ""
                                            },
                                            "macAddress": "fa:16:3e:b7:77:86",
                                            "ipAddresses": [
                                                {
                                                    "type": "IPV4",
                                                    "addresses": [
                                                        "192.168.107.19"
                                                    ]
                                                }
                                            ]
                                        },
                                        "layerProtocol": "IP_OVER_ETHERNET"
                                    }
                                ],
                                "cpdId": ""
                            }
                        ],
                        "flavourId": ""
                    },
                    "vnfProductName": "",
                    "vnfPkgId": "",
                    "vnfdVersion": ""
                },
                {
                    "vnfdId": "be55660e-8961-11ea-bc55-0242ac130003",
                    "vnfProvider": "",
                    "instantiationState": "INSTANTIATED",
                    "id": "37887925-94c7-4d02-823f-1f79604c0327",
                    "vnfSoftwareVersion": "",
                    "vimId": "abf0948e-1c5a-4423-bee8-451e0a2c4a38",
                    "instantiatedVnfInfo": {
                        "vnfState": "STARTED",
                        "extCpInfo": [
                            {
                                "id": "eth0",
                                "cpProtocolInfo": [
                                    {
                                        "ipOverEthernet": {
                                            "addressRange": {
                                                "minAddress": "",
                                                "maxAddress": ""
                                            },
                                            "macAddress": "fa:16:3e:5d:9b:cd",
                                            "ipAddresses": [
                                                {
                                                    "type": "IPV4",
                                                    "addresses": [
                                                        "10.20.5.50"
                                                    ]
                                                }
                                            ]
                                        },
                                        "layerProtocol": "IP_OVER_ETHERNET"
                                    }
                                ],
                                "cpdId": ""
                            },
                            {
                                "id": "eth1",
                                "cpProtocolInfo": [
                                    {
                                        "ipOverEthernet": {
                                            "addressRange": {
                                                "minAddress": "",
                                                "maxAddress": ""
                                            },
                                            "macAddress": "fa:16:3e:7e:7e:c2",
                                            "ipAddresses": [
                                                {
                                                    "type": "IPV4",
                                                    "addresses": [
                                                        "192.168.107.4"
                                                    ]
                                                }
                                            ]
                                        },
                                        "layerProtocol": "IP_OVER_ETHERNET"
                                    }
                                ],
                                "cpdId": ""
                            }
                        ],
                        "flavourId": ""
                    },
                    "vnfProductName": "",
                    "vnfPkgId": "",
                    "vnfdVersion": ""
                }
            ],
            "nsdInfoId": "",
            "nsInstanceName": "NS_exp_41"
        },
        {
            "nsState": "INSTANTIATED",
            "id": "5d1a9e5b-779d-4319-8e66-f091efc5b0ac",
            "nsdId": "8efc1682-5010-3e57-b708-57fd50833e4f",
            "nsInstanceDescription": "NFV NS instance for experiment 44",
            "vnfInstance": [
                {
                    "vnfdId": "ef5faf76-895b-11ea-bc55-0242ac130003",
                    "vnfProvider": "",
                    "instantiationState": "INSTANTIATED",
                    "id": "1c3216a0-693c-4e8c-92cc-3bb59247ade9",
                    "vnfSoftwareVersion": "",
                    "vimId": "abf0948e-1c5a-4423-bee8-451e0a2c4a38",
                    "instantiatedVnfInfo": {
                        "vnfState": "STARTED",
                        "extCpInfo": [
                            {
                                "id": "eth0",
                                "cpProtocolInfo": [
                                    {
                                        "ipOverEthernet": {
                                            "addressRange": {
                                                "minAddress": "",
                                                "maxAddress": ""
                                            },
                                            "macAddress": "fa:16:3e:3b:e7:ab",
                                            "ipAddresses": [
                                                {
                                                    "type": "IPV4",
                                                    "addresses": [
                                                        "192.168.224.17"
                                                    ]
                                                }
                                            ]
                                        },
                                        "layerProtocol": "IP_OVER_ETHERNET"
                                    }
                                ],
                                "cpdId": ""
                            }
                        ],
                        "flavourId": ""
                    },
                    "vnfProductName": "",
                    "vnfPkgId": "",
                    "vnfdVersion": ""
                },
                {
                    "vnfdId": "be55660e-8961-11ea-bc55-0242ac130003",
                    "vnfProvider": "",
                    "instantiationState": "INSTANTIATED",
                    "id": "fb5a143b-4f31-4d99-ac17-a022542dd453",
                    "vnfSoftwareVersion": "",
                    "vimId": "abf0948e-1c5a-4423-bee8-451e0a2c4a38",
                    "instantiatedVnfInfo": {
                        "vnfState": "STARTED",
                        "extCpInfo": [
                            {
                                "id": "eth0",
                                "cpProtocolInfo": [
                                    {
                                        "ipOverEthernet": {
                                            "addressRange": {
                                                "minAddress": "",
                                                "maxAddress": ""
                                            },
                                            "macAddress": "fa:16:3e:ce:67:4c",
                                            "ipAddresses": [
                                                {
                                                    "type": "IPV4",
                                                    "addresses": [
                                                        "10.20.5.50"
                                                    ]
                                                }
                                            ]
                                        },
                                        "layerProtocol": "IP_OVER_ETHERNET"
                                    }
                                ],
                                "cpdId": ""
                            },
                            {
                                "id": "eth1",
                                "cpProtocolInfo": [
                                    {
                                        "ipOverEthernet": {
                                            "addressRange": {
                                                "minAddress": "",
                                                "maxAddress": ""
                                            },
                                            "macAddress": "fa:16:3e:1c:e6:be",
                                            "ipAddresses": [
                                                {
                                                    "type": "IPV4",
                                                    "addresses": [
                                                        "192.168.224.2"
                                                    ]
                                                }
                                            ]
                                        },
                                        "layerProtocol": "IP_OVER_ETHERNET"
                                    }
                                ],
                                "cpdId": ""
                            }
                        ],
                        "flavourId": ""
                    },
                    "vnfProductName": "",
                    "vnfPkgId": "",
                    "vnfdVersion": ""
                }
            ],
            "nsdInfoId": "",
            "nsInstanceName": "NS_exp_44"
        },
        {
            "nsState": "NOT_INSTANTIATED",
            "id": "1dcd43c7-dc02-4724-98ca-08286590a5f0",
            "nsdId": "8efc1682-5010-3e57-b708-57fd50833e4f",
            "nsInstanceDescription": "NFV NS instance for experiment 42",
            "nsdInfoId": "",
            "nsInstanceName": "NS_exp_42"
        },
        {
            "nsState": "INSTANTIATED",
            "id": "8ccee544-7c72-4e6b-87d9-b20f5a768ff5",
            "nsdId": "8efc1682-5010-3e57-b708-57fd50833e4f",
            "nsInstanceDescription": "NFV NS instance for experiment 48",
            "vnfInstance": [
                {
                    "vnfdId": "ef5faf76-895b-11ea-bc55-0242ac130003",
                    "vnfProvider": "",
                    "instantiationState": "INSTANTIATED",
                    "id": "984be6a3-4e2b-4913-84f1-48260d02676b",
                    "vnfSoftwareVersion": "",
                    "vimId": "abf0948e-1c5a-4423-bee8-451e0a2c4a38",
                    "instantiatedVnfInfo": {
                        "vnfState": "STARTED",
                        "extCpInfo": [
                            {
                                "id": "eth0",
                                "cpProtocolInfo": [
                                    {
                                        "ipOverEthernet": {
                                            "addressRange": {
                                                "minAddress": "",
                                                "maxAddress": ""
                                            },
                                            "macAddress": "fa:16:3e:a1:8e:51",
                                            "ipAddresses": [
                                                {
                                                    "type": "IPV4",
                                                    "addresses": [
                                                        "192.168.165.21"
                                                    ]
                                                }
                                            ]
                                        },
                                        "layerProtocol": "IP_OVER_ETHERNET"
                                    }
                                ],
                                "cpdId": ""
                            }
                        ],
                        "flavourId": ""
                    },
                    "vnfProductName": "",
                    "vnfPkgId": "",
                    "vnfdVersion": ""
                },
                {
                    "vnfdId": "be55660e-8961-11ea-bc55-0242ac130003",
                    "vnfProvider": "",
                    "instantiationState": "INSTANTIATED",
                    "id": "dfa78c63-c81b-41b4-8e54-abe5f31229de",
                    "vnfSoftwareVersion": "",
                    "vimId": "abf0948e-1c5a-4423-bee8-451e0a2c4a38",
                    "instantiatedVnfInfo": {
                        "vnfState": "STARTED",
                        "extCpInfo": [
                            {
                                "id": "eth0",
                                "cpProtocolInfo": [
                                    {
                                        "ipOverEthernet": {
                                            "addressRange": {
                                                "minAddress": "",
                                                "maxAddress": ""
                                            },
                                            "macAddress": "fa:16:3e:6c:f0:fc",
                                            "ipAddresses": [
                                                {
                                                    "type": "IPV4",
                                                    "addresses": [
                                                        "10.20.5.50"
                                                    ]
                                                }
                                            ]
                                        },
                                        "layerProtocol": "IP_OVER_ETHERNET"
                                    }
                                ],
                                "cpdId": ""
                            },
                            {
                                "id": "eth1",
                                "cpProtocolInfo": [
                                    {
                                        "ipOverEthernet": {
                                            "addressRange": {
                                                "minAddress": "",
                                                "maxAddress": ""
                                            },
                                            "macAddress": "fa:16:3e:f7:36:cc",
                                            "ipAddresses": [
                                                {
                                                    "type": "IPV4",
                                                    "addresses": [
                                                        "192.168.165.12"
                                                    ]
                                                }
                                            ]
                                        },
                                        "layerProtocol": "IP_OVER_ETHERNET"
                                    }
                                ],
                                "cpdId": ""
                            }
                        ],
                        "flavourId": ""
                    },
                    "vnfProductName": "",
                    "vnfPkgId": "",
                    "vnfdVersion": ""
                }
            ],
            "nsdInfoId": "",
            "nsInstanceName": "NS_exp_48"
        },
        {
            "nsState": "INSTANTIATED",
            "id": "9157c8c5-ef32-4e50-8f3d-bc0e6d4e0c3c",
            "nsdId": "a08c19d6-7563-39df-9052-17cda1176c32",
            "nsInstanceDescription": "NFV NS instance for experiment 1",
            "vnfInstance": [
                {
                    "vnfdId": "ef5faf76-895b-11ea-bc55-0242ac130003",
                    "vnfProvider": "",
                    "instantiationState": "INSTANTIATED",
                    "id": "624504dd-7919-4228-bc6a-771254bd15be",
                    "vnfSoftwareVersion": "",
                    "vimId": "abf0948e-1c5a-4423-bee8-451e0a2c4a38",
                    "instantiatedVnfInfo": {
                        "vnfState": "STARTED",
                        "extCpInfo": [
                            {
                                "id": "eth0",
                                "cpProtocolInfo": [
                                    {
                                        "ipOverEthernet": {
                                            "addressRange": {
                                                "minAddress": "",
                                                "maxAddress": ""
                                            },
                                            "macAddress": "fa:16:3e:22:56:32",
                                            "ipAddresses": [
                                                {
                                                    "type": "IPV4",
                                                    "addresses": [
                                                        "192.168.237.1"
                                                    ]
                                                }
                                            ]
                                        },
                                        "layerProtocol": "IP_OVER_ETHERNET"
                                    }
                                ],
                                "cpdId": ""
                            }
                        ],
                        "flavourId": ""
                    },
                    "vnfProductName": "",
                    "vnfPkgId": "",
                    "vnfdVersion": ""
                },
                {
                    "vnfdId": "be55660e-8961-11ea-bc55-0242ac130003",
                    "vnfProvider": "",
                    "instantiationState": "INSTANTIATED",
                    "id": "5cf3ac42-c305-4815-8435-412d020f1a13",
                    "vnfSoftwareVersion": "",
                    "vimId": "abf0948e-1c5a-4423-bee8-451e0a2c4a38",
                    "instantiatedVnfInfo": {
                        "vnfState": "STARTED",
                        "extCpInfo": [
                            {
                                "id": "eth0",
                                "cpProtocolInfo": [
                                    {
                                        "ipOverEthernet": {
                                            "addressRange": {
                                                "minAddress": "",
                                                "maxAddress": ""
                                            },
                                            "macAddress": "fa:16:3e:d1:dc:34",
                                            "ipAddresses": [
                                                {
                                                    "type": "IPV4",
                                                    "addresses": [
                                                        "192.168.237.5"
                                                    ]
                                                }
                                            ]
                                        },
                                        "layerProtocol": "IP_OVER_ETHERNET"
                                    }
                                ],
                                "cpdId": ""
                            },
                            {
                                "id": "eth1",
                                "cpProtocolInfo": [
                                    {
                                        "ipOverEthernet": {
                                            "addressRange": {
                                                "minAddress": "",
                                                "maxAddress": ""
                                            },
                                            "macAddress": "fa:16:3e:52:c8:a5",
                                            "ipAddresses": [
                                                {
                                                    "type": "IPV4",
                                                    "addresses": [
                                                        "192.168.166.25"
                                                    ]
                                                }
                                            ]
                                        },
                                        "layerProtocol": "IP_OVER_ETHERNET"
                                    }
                                ],
                                "cpdId": ""
                            }
                        ],
                        "flavourId": ""
                    },
                    "vnfProductName": "",
                    "vnfPkgId": "",
                    "vnfdVersion": ""
                }
            ],
            "nsdInfoId": "",
            "nsInstanceName": "NS_exp_1"
        },
        {
            "nsState": "INSTANTIATED",
            "id": "1d4d70ba-2bbc-489a-9949-c57b348d348d",
            "nsdId": "931c3146-5e84-3524-8d62-c492e4e632ce",
            "nsInstanceDescription": "NFV NS instance for experiment 3",
            "vnfInstance": [
                {
                    "vnfdId": "ef5faf76-895b-11ea-bc55-0242ac130003",
                    "vnfProvider": "",
                    "instantiationState": "INSTANTIATED",
                    "id": "d39cf2e5-a9d8-4489-ae29-240869954d64",
                    "vnfSoftwareVersion": "",
                    "vimId": "abf0948e-1c5a-4423-bee8-451e0a2c4a38",
                    "instantiatedVnfInfo": {
                        "vnfState": "STARTED",
                        "extCpInfo": [
                            {
                                "id": "eth0",
                                "cpProtocolInfo": [
                                    {
                                        "ipOverEthernet": {
                                            "addressRange": {
                                                "minAddress": "",
                                                "maxAddress": ""
                                            },
                                            "macAddress": "fa:16:3e:a4:bc:ec",
                                            "ipAddresses": [
                                                {
                                                    "type": "IPV4",
                                                    "addresses": [
                                                        "192.168.237.3"
                                                    ]
                                                }
                                            ]
                                        },
                                        "layerProtocol": "IP_OVER_ETHERNET"
                                    }
                                ],
                                "cpdId": ""
                            }
                        ],
                        "flavourId": ""
                    },
                    "vnfProductName": "",
                    "vnfPkgId": "",
                    "vnfdVersion": ""
                },
                {
                    "vnfdId": "be55660e-8961-11ea-bc55-0242ac130003",
                    "vnfProvider": "",
                    "instantiationState": "INSTANTIATED",
                    "id": "34428946-e2d0-41e3-b5fe-5653dcee004e",
                    "vnfSoftwareVersion": "",
                    "vimId": "abf0948e-1c5a-4423-bee8-451e0a2c4a38",
                    "instantiatedVnfInfo": {
                        "vnfState": "STARTED",
                        "extCpInfo": [
                            {
                                "id": "eth0",
                                "cpProtocolInfo": [
                                    {
                                        "ipOverEthernet": {
                                            "addressRange": {
                                                "minAddress": "",
                                                "maxAddress": ""
                                            },
                                            "macAddress": "fa:16:3e:ce:3e:09",
                                            "ipAddresses": [
                                                {
                                                    "type": "IPV4",
                                                    "addresses": [
                                                        "192.168.237.15"
                                                    ]
                                                }
                                            ]
                                        },
                                        "layerProtocol": "IP_OVER_ETHERNET"
                                    }
                                ],
                                "cpdId": ""
                            },
                            {
                                "id": "eth1",
                                "cpProtocolInfo": [
                                    {
                                        "ipOverEthernet": {
                                            "addressRange": {
                                                "minAddress": "",
                                                "maxAddress": ""
                                            },
                                            "macAddress": "fa:16:3e:24:1c:f7",
                                            "ipAddresses": [
                                                {
                                                    "type": "IPV4",
                                                    "addresses": [
                                                        "192.168.79.5"
                                                    ]
                                                }
                                            ]
                                        },
                                        "layerProtocol": "IP_OVER_ETHERNET"
                                    }
                                ],
                                "cpdId": ""
                            }
                        ],
                        "flavourId": ""
                    },
                    "vnfProductName": "",
                    "vnfPkgId": "",
                    "vnfdVersion": ""
                }
            ],
            "nsdInfoId": "",
            "nsInstanceName": "NS_exp_3"
        },
        {
            "nsState": "INSTANTIATED",
            "id": "b9d80ea7-24f4-46d2-8eae-c863a63b19cb",
            "nsdId": "050ea608-9f19-3209-9dd9-c53c1bb61c1f",
            "nsInstanceDescription": "NFV NS instance for experiment 1",
            "vnfInstance": [
                {
                    "vnfdId": "ef5faf76-895b-11ea-bc55-0242ac130003",
                    "vnfProvider": "",
                    "instantiationState": "INSTANTIATED",
                    "id": "783aa666-8c56-4e98-bde1-966599566cd2",
                    "vnfSoftwareVersion": "",
                    "vimId": "abf0948e-1c5a-4423-bee8-451e0a2c4a38",
                    "instantiatedVnfInfo": {
                        "vnfState": "STARTED",
                        "extCpInfo": [
                            {
                                "id": "eth0",
                                "cpProtocolInfo": [
                                    {
                                        "ipOverEthernet": {
                                            "addressRange": {
                                                "minAddress": "",
                                                "maxAddress": ""
                                            },
                                            "macAddress": "fa:16:3e:08:db:56",
                                            "ipAddresses": [
                                                {
                                                    "type": "IPV4",
                                                    "addresses": [
                                                        "192.168.99.12"
                                                    ]
                                                }
                                            ]
                                        },
                                        "layerProtocol": "IP_OVER_ETHERNET"
                                    }
                                ],
                                "cpdId": ""
                            }
                        ],
                        "flavourId": ""
                    },
                    "vnfProductName": "",
                    "vnfPkgId": "",
                    "vnfdVersion": ""
                },
                {
                    "vnfdId": "be55660e-8961-11ea-bc55-0242ac130003",
                    "vnfProvider": "",
                    "instantiationState": "INSTANTIATED",
                    "id": "1c963b8c-356f-482c-8eae-4d8ed43de293",
                    "vnfSoftwareVersion": "",
                    "vimId": "abf0948e-1c5a-4423-bee8-451e0a2c4a38",
                    "instantiatedVnfInfo": {
                        "vnfState": "STARTED",
                        "extCpInfo": [
                            {
                                "id": "eth0",
                                "cpProtocolInfo": [
                                    {
                                        "ipOverEthernet": {
                                            "addressRange": {
                                                "minAddress": "",
                                                "maxAddress": ""
                                            },
                                            "macAddress": "fa:16:3e:2d:66:08",
                                            "ipAddresses": [
                                                {
                                                    "type": "IPV4",
                                                    "addresses": [
                                                        "192.168.99.4"
                                                    ]
                                                }
                                            ]
                                        },
                                        "layerProtocol": "IP_OVER_ETHERNET"
                                    }
                                ],
                                "cpdId": ""
                            },
                            {
                                "id": "eth1",
                                "cpProtocolInfo": [
                                    {
                                        "ipOverEthernet": {
                                            "addressRange": {
                                                "minAddress": "",
                                                "maxAddress": ""
                                            },
                                            "macAddress": "fa:16:3e:f4:57:ed",
                                            "ipAddresses": [
                                                {
                                                    "type": "IPV4",
                                                    "addresses": [
                                                        "10.80.30.2"
                                                    ]
                                                }
                                            ]
                                        },
                                        "layerProtocol": "IP_OVER_ETHERNET"
                                    }
                                ],
                                "cpdId": ""
                            }
                        ],
                        "flavourId": ""
                    },
                    "vnfProductName": "",
                    "vnfPkgId": "",
                    "vnfdVersion": ""
                }
            ],
            "nsdInfoId": "",
            "nsInstanceName": "NS_exp_1"
        },
        {
            "nsState": "INSTANTIATED",
            "id": "58cb22eb-9b2e-46de-9e49-0da1b22d35d9",
            "nsdId": "050ea608-9f19-3209-9dd9-c53c1bb61c1f",
            "nsInstanceDescription": "NFV NS instance for experiment 5",
            "vnfInstance": [
                {
                    "vnfdId": "ef5faf76-895b-11ea-bc55-0242ac130003",
                    "vnfProvider": "",
                    "instantiationState": "INSTANTIATED",
                    "id": "8d1911fe-8211-4cae-9d6e-a9548502d064",
                    "vnfSoftwareVersion": "",
                    "vimId": "abf0948e-1c5a-4423-bee8-451e0a2c4a38",
                    "instantiatedVnfInfo": {
                        "vnfState": "STARTED",
                        "extCpInfo": [
                            {
                                "id": "eth0",
                                "cpProtocolInfo": [
                                    {
                                        "ipOverEthernet": {
                                            "addressRange": {
                                                "minAddress": "",
                                                "maxAddress": ""
                                            },
                                            "macAddress": "fa:16:3e:5d:9e:ad",
                                            "ipAddresses": [
                                                {
                                                    "type": "IPV4",
                                                    "addresses": [
                                                        "192.168.172.2"
                                                    ]
                                                }
                                            ]
                                        },
                                        "layerProtocol": "IP_OVER_ETHERNET"
                                    }
                                ],
                                "cpdId": "eth0"
                            }
                        ],
                        "flavourId": ""
                    },
                    "vnfProductName": "",
                    "vnfPkgId": "",
                    "vnfdVersion": ""
                },
                {
                    "vnfdId": "be55660e-8961-11ea-bc55-0242ac130003",
                    "vnfProvider": "",
                    "instantiationState": "INSTANTIATED",
                    "id": "0f9f82bd-8ba9-4cdb-88ac-ed62853bf12f",
                    "vnfSoftwareVersion": "",
                    "vimId": "abf0948e-1c5a-4423-bee8-451e0a2c4a38",
                    "instantiatedVnfInfo": {
                        "vnfState": "STARTED",
                        "extCpInfo": [
                            {
                                "id": "eth0",
                                "cpProtocolInfo": [
                                    {
                                        "ipOverEthernet": {
                                            "addressRange": {
                                                "minAddress": "",
                                                "maxAddress": ""
                                            },
                                            "macAddress": "fa:16:3e:35:03:bb",
                                            "ipAddresses": [
                                                {
                                                    "type": "IPV4",
                                                    "addresses": [
                                                        "192.168.172.23"
                                                    ]
                                                }
                                            ]
                                        },
                                        "layerProtocol": "IP_OVER_ETHERNET"
                                    }
                                ],
                                "cpdId": "eth0"
                            },
                            {
                                "id": "eth1",
                                "cpProtocolInfo": [
                                    {
                                        "ipOverEthernet": {
                                            "addressRange": {
                                                "minAddress": "",
                                                "maxAddress": ""
                                            },
                                            "macAddress": "fa:16:3e:0c:11:7a",
                                            "ipAddresses": [
                                                {
                                                    "type": "IPV4",
                                                    "addresses": [
                                                        "10.20.5.41"
                                                    ]
                                                }
                                            ]
                                        },
                                        "layerProtocol": "IP_OVER_ETHERNET"
                                    }
                                ],
                                "cpdId": "eth1"
                            }
                        ],
                        "flavourId": ""
                    },
                    "vnfProductName": "",
                    "vnfPkgId": "",
                    "vnfdVersion": ""
                }
            ],
            "nsdInfoId": "",
            "nsInstanceName": "NS_exp_5"
        },
        {
            "nsState": "NOT_INSTANTIATED",
            "id": "96153cc7-b8ed-49dd-be30-fd56d9b1cc14",
            "nsdId": "392e7bed-b9da-3214-8aa6-eff684fd4e03",
            "nsInstanceDescription": "NFV NS instance for experiment 11",
            "nsdInfoId": "",
            "nsInstanceName": "NS_exp_11"
        },
        {
            "nsState": "NOT_INSTANTIATED",
            "id": "c67d9753-14f7-4798-a013-f6b5bd4637a5",
            "nsdId": "80d4d3cc-bc65-3ed7-b453-162b63ec23fb",
            "nsInstanceDescription": "NFV NS instance for experiment 1",
            "nsdInfoId": "",
            "nsInstanceName": "NS_exp_1"
        },
        {
            "nsState": "NOT_INSTANTIATED",
            "id": "9a660e3f-71e7-457c-b071-a809137e039c",
            "nsdId": "80d4d3cc-bc65-3ed7-b453-162b63ec23fb",
            "nsInstanceDescription": "NFV NS instance for experiment 2",
            "nsdInfoId": "",
            "nsInstanceName": "NS_exp_2"
        },
        {
            "nsState": "NOT_INSTANTIATED",
            "id": "37339dea-bfe9-4016-8dd6-d6cf0877e2ab",
            "nsdId": "80d4d3cc-bc65-3ed7-b453-162b63ec23fb",
            "nsInstanceDescription": "NFV NS instance for experiment 3",
            "nsdInfoId": "",
            "nsInstanceName": "NS_exp_3"
        },
        {
            "nsState": "INSTANTIATED",
            "id": "bc514bff-df22-428f-9a19-0cda8ab8546a",
            "nsdId": "80d4d3cc-bc65-3ed7-b453-162b63ec23fb",
            "nsInstanceDescription": "NFV NS instance for experiment 4",
            "vnfInstance": [
                {
                    "vnfdId": "ef5faf76-895b-11ea-bc55-0242ac130003",
                    "vnfProvider": "",
                    "instantiationState": "INSTANTIATED",
                    "id": "fd748098-4a43-46c1-ae5c-ee44e31ce352",
                    "vnfSoftwareVersion": "",
                    "vimId": "abf0948e-1c5a-4423-bee8-451e0a2c4a38",
                    "instantiatedVnfInfo": {
                        "vnfState": "STARTED",
                        "extCpInfo": [
                            {
                                "id": "eth0",
                                "cpProtocolInfo": [
                                    {
                                        "ipOverEthernet": {
                                            "addressRange": {
                                                "minAddress": "",
                                                "maxAddress": ""
                                            },
                                            "macAddress": "fa:16:3e:ac:52:0d",
                                            "ipAddresses": [
                                                {
                                                    "type": "IPV4",
                                                    "addresses": [
                                                        "10.80.30.11"
                                                    ]
                                                }
                                            ]
                                        },
                                        "layerProtocol": "IP_OVER_ETHERNET"
                                    }
                                ],
                                "cpdId": "eth0"
                            },
                            {
                                "id": "eth1",
                                "cpProtocolInfo": [
                                    {
                                        "ipOverEthernet": {
                                            "addressRange": {
                                                "minAddress": "",
                                                "maxAddress": ""
                                            },
                                            "macAddress": "fa:16:3e:55:18:89",
                                            "ipAddresses": [
                                                {
                                                    "type": "IPV4",
                                                    "addresses": [
                                                        "192.168.80.4"
                                                    ]
                                                }
                                            ]
                                        },
                                        "layerProtocol": "IP_OVER_ETHERNET"
                                    }
                                ],
                                "cpdId": "eth1"
                            }
                        ],
                        "flavourId": ""
                    },
                    "vnfProductName": "",
                    "vnfPkgId": "",
                    "vnfdVersion": ""
                },
                {
                    "vnfdId": "be55660e-8961-11ea-bc55-0242ac130003",
                    "vnfProvider": "",
                    "instantiationState": "INSTANTIATED",
                    "id": "ee5d4d27-2de0-4cbe-9f37-adc034249737",
                    "vnfSoftwareVersion": "",
                    "vimId": "abf0948e-1c5a-4423-bee8-451e0a2c4a38",
                    "instantiatedVnfInfo": {
                        "vnfState": "STARTED",
                        "extCpInfo": [
                            {
                                "id": "eth0",
                                "cpProtocolInfo": [
                                    {
                                        "ipOverEthernet": {
                                            "addressRange": {
                                                "minAddress": "",
                                                "maxAddress": ""
                                            },
                                            "macAddress": "fa:16:3e:e7:e8:8e",
                                            "ipAddresses": [
                                                {
                                                    "type": "IPV4",
                                                    "addresses": [
                                                        "10.80.30.5"
                                                    ]
                                                }
                                            ]
                                        },
                                        "layerProtocol": "IP_OVER_ETHERNET"
                                    }
                                ],
                                "cpdId": "eth0"
                            },
                            {
                                "id": "eth1",
                                "cpProtocolInfo": [
                                    {
                                        "ipOverEthernet": {
                                            "addressRange": {
                                                "minAddress": "",
                                                "maxAddress": ""
                                            },
                                            "macAddress": "fa:16:3e:7d:e0:33",
                                            "ipAddresses": [
                                                {
                                                    "type": "IPV4",
                                                    "addresses": [
                                                        "192.168.80.11"
                                                    ]
                                                }
                                            ]
                                        },
                                        "layerProtocol": "IP_OVER_ETHERNET"
                                    }
                                ],
                                "cpdId": "eth1"
                            }
                        ],
                        "flavourId": ""
                    },
                    "vnfProductName": "",
                    "vnfPkgId": "",
                    "vnfdVersion": ""
                }
            ],
            "nsdInfoId": "",
            "nsInstanceName": "NS_exp_4"
        },
        {
            "nsState": "INSTANTIATED",
            "id": "95e631f0-50c5-4ccf-b6a2-2173bd57cf99",
            "nsdId": "dbe0b036-9fbb-3627-89c4-19a8eeeabda8",
            "nsInstanceDescription": "NFV NS instance for experiment 20",
            "vnfInstance": [
                {
                    "vnfdId": "ef5faf76-895b-11ea-bc55-0242ac130003",
                    "vnfProvider": "",
                    "instantiationState": "INSTANTIATED",
                    "id": "990fb850-c7ed-41e8-92f8-dc3d73fb3ce2",
                    "vnfSoftwareVersion": "",
                    "vimId": "abf0948e-1c5a-4423-bee8-451e0a2c4a38",
                    "instantiatedVnfInfo": {
                        "vnfState": "STARTED",
                        "extCpInfo": [
                            {
                                "id": "eth0",
                                "cpProtocolInfo": [
                                    {
                                        "ipOverEthernet": {
                                            "addressRange": {
                                                "minAddress": "",
                                                "maxAddress": ""
                                            },
                                            "macAddress": "fa:16:3e:e9:5a:56",
                                            "ipAddresses": [
                                                {
                                                    "type": "IPV4",
                                                    "addresses": [
                                                        "10.20.5.52"
                                                    ]
                                                }
                                            ]
                                        },
                                        "layerProtocol": "IP_OVER_ETHERNET"
                                    }
                                ],
                                "cpdId": "eth0"
                            },
                            {
                                "id": "eth1",
                                "cpProtocolInfo": [
                                    {
                                        "ipOverEthernet": {
                                            "addressRange": {
                                                "minAddress": "",
                                                "maxAddress": ""
                                            },
                                            "macAddress": "fa:16:3e:e4:7c:47",
                                            "ipAddresses": [
                                                {
                                                    "type": "IPV4",
                                                    "addresses": [
                                                        "192.168.104.10"
                                                    ]
                                                }
                                            ]
                                        },
                                        "layerProtocol": "IP_OVER_ETHERNET"
                                    }
                                ],
                                "cpdId": "eth1"
                            }
                        ],
                        "flavourId": ""
                    },
                    "vnfProductName": "",
                    "vnfPkgId": "",
                    "vnfdVersion": ""
                },
                {
                    "vnfdId": "be55660e-8961-11ea-bc55-0242ac130003",
                    "vnfProvider": "",
                    "instantiationState": "INSTANTIATED",
                    "id": "8bd3bef3-7a2d-45d8-90fb-26b01deef122",
                    "vnfSoftwareVersion": "",
                    "vimId": "abf0948e-1c5a-4423-bee8-451e0a2c4a38",
                    "instantiatedVnfInfo": {
                        "vnfState": "STARTED",
                        "extCpInfo": [
                            {
                                "id": "eth0",
                                "cpProtocolInfo": [
                                    {
                                        "ipOverEthernet": {
                                            "addressRange": {
                                                "minAddress": "",
                                                "maxAddress": ""
                                            },
                                            "macAddress": "fa:16:3e:87:ad:02",
                                            "ipAddresses": [
                                                {
                                                    "type": "IPV4",
                                                    "addresses": [
                                                        "10.20.5.28"
                                                    ]
                                                }
                                            ]
                                        },
                                        "layerProtocol": "IP_OVER_ETHERNET"
                                    }
                                ],
                                "cpdId": "eth0"
                            },
                            {
                                "id": "eth1",
                                "cpProtocolInfo": [
                                    {
                                        "ipOverEthernet": {
                                            "addressRange": {
                                                "minAddress": "",
                                                "maxAddress": ""
                                            },
                                            "macAddress": "fa:16:3e:23:57:13",
                                            "ipAddresses": [
                                                {
                                                    "type": "IPV4",
                                                    "addresses": [
                                                        "192.168.104.8"
                                                    ]
                                                }
                                            ]
                                        },
                                        "layerProtocol": "IP_OVER_ETHERNET"
                                    }
                                ],
                                "cpdId": "eth1"
                            }
                        ],
                        "flavourId": ""
                    },
                    "vnfProductName": "",
                    "vnfPkgId": "",
                    "vnfdVersion": ""
                }
            ],
            "nsdInfoId": "",
            "nsInstanceName": "NS_exp_20"
        },
        {
            "nsState": "NOT_INSTANTIATED",
            "id": "c3c2d075-2c99-48ed-9c33-d7e14ccc3b9b",
            "nsdId": "a20e3163-bfa7-4dcf-a11a-e9cb752d84fe",
            "nsInstanceDescription": "test",
            "nsdInfoId": "",
            "nsInstanceName": "test"
        },
        {
            "nsState": "INSTANTIATED",
            "id": "815db1ac-4677-49b6-9906-a12d276a2d25",
            "nsdId": "dbe0b036-9fbb-3627-89c4-19a8eeeabda8",
            "nsInstanceDescription": "NFV NS instance for experiment 40",
            "vnfInstance": [
                {
                    "vnfdId": "ef5faf76-895b-11ea-bc55-0242ac130003",
                    "vnfProvider": "",
                    "instantiationState": "INSTANTIATED",
                    "id": "801ede64-99eb-4bd4-9530-87f6540f538a",
                    "vnfSoftwareVersion": "",
                    "vimId": "abf0948e-1c5a-4423-bee8-451e0a2c4a38",
                    "instantiatedVnfInfo": {
                        "vnfState": "STARTED",
                        "extCpInfo": [
                            {
                                "id": "eth0",
                                "cpProtocolInfo": [
                                    {
                                        "ipOverEthernet": {
                                            "addressRange": {
                                                "minAddress": "",
                                                "maxAddress": ""
                                            },
                                            "macAddress": "fa:16:3e:8f:0e:f6",
                                            "ipAddresses": [
                                                {
                                                    "type": "IPV4",
                                                    "addresses": [
                                                        "10.20.5.33"
                                                    ]
                                                }
                                            ]
                                        },
                                        "layerProtocol": "IP_OVER_ETHERNET"
                                    }
                                ],
                                "cpdId": "eth0"
                            },
                            {
                                "id": "eth1",
                                "cpProtocolInfo": [
                                    {
                                        "ipOverEthernet": {
                                            "addressRange": {
                                                "minAddress": "",
                                                "maxAddress": ""
                                            },
                                            "macAddress": "fa:16:3e:d1:01:6c",
                                            "ipAddresses": [
                                                {
                                                    "type": "IPV4",
                                                    "addresses": [
                                                        "192.168.196.3"
                                                    ]
                                                }
                                            ]
                                        },
                                        "layerProtocol": "IP_OVER_ETHERNET"
                                    }
                                ],
                                "cpdId": "eth1"
                            }
                        ],
                        "flavourId": ""
                    },
                    "vnfProductName": "",
                    "vnfPkgId": "",
                    "vnfdVersion": ""
                },
                {
                    "vnfdId": "be55660e-8961-11ea-bc55-0242ac130003",
                    "vnfProvider": "",
                    "instantiationState": "INSTANTIATED",
                    "id": "5a5eed80-fa3a-4e03-945d-f635ba31eede",
                    "vnfSoftwareVersion": "",
                    "vimId": "abf0948e-1c5a-4423-bee8-451e0a2c4a38",
                    "instantiatedVnfInfo": {
                        "vnfState": "STARTED",
                        "extCpInfo": [
                            {
                                "id": "eth0",
                                "cpProtocolInfo": [
                                    {
                                        "ipOverEthernet": {
                                            "addressRange": {
                                                "minAddress": "",
                                                "maxAddress": ""
                                            },
                                            "macAddress": "fa:16:3e:68:bf:65",
                                            "ipAddresses": [
                                                {
                                                    "type": "IPV4",
                                                    "addresses": [
                                                        "10.20.5.46"
                                                    ]
                                                }
                                            ]
                                        },
                                        "layerProtocol": "IP_OVER_ETHERNET"
                                    }
                                ],
                                "cpdId": "eth0"
                            },
                            {
                                "id": "eth1",
                                "cpProtocolInfo": [
                                    {
                                        "ipOverEthernet": {
                                            "addressRange": {
                                                "minAddress": "",
                                                "maxAddress": ""
                                            },
                                            "macAddress": "fa:16:3e:82:b8:ef",
                                            "ipAddresses": [
                                                {
                                                    "type": "IPV4",
                                                    "addresses": [
                                                        "192.168.196.6"
                                                    ]
                                                }
                                            ]
                                        },
                                        "layerProtocol": "IP_OVER_ETHERNET"
                                    }
                                ],
                                "cpdId": "eth1"
                            }
                        ],
                        "flavourId": ""
                    },
                    "vnfProductName": "",
                    "vnfPkgId": "",
                    "vnfdVersion": ""
                }
            ],
            "nsdInfoId": "",
            "nsInstanceName": "NS_exp_40"
        },
        {
            "nsState": "INSTANTIATED",
            "id": "d48479f1-ed01-499a-885f-a1de778edd1e",
            "nsdId": "dbe0b036-9fbb-3627-89c4-19a8eeeabda8",
            "nsInstanceDescription": "NFV NS instance for experiment 86",
            "vnfInstance": [
                {
                    "vnfdId": "ef5faf76-895b-11ea-bc55-0242ac130003",
                    "vnfProvider": "",
                    "instantiationState": "INSTANTIATED",
                    "id": "47e19f10-c12c-4efb-a3ae-9eef0d656578",
                    "vnfSoftwareVersion": "",
                    "vimId": "abf0948e-1c5a-4423-bee8-451e0a2c4a38",
                    "instantiatedVnfInfo": {
                        "vnfState": "STARTED",
                        "extCpInfo": [
                            {
                                "id": "eth0",
                                "cpProtocolInfo": [
                                    {
                                        "ipOverEthernet": {
                                            "addressRange": {
                                                "minAddress": "",
                                                "maxAddress": ""
                                            },
                                            "macAddress": "fa:16:3e:19:41:ed",
                                            "ipAddresses": [
                                                {
                                                    "type": "IPV4",
                                                    "addresses": [
                                                        "10.20.5.21"
                                                    ]
                                                }
                                            ]
                                        },
                                        "layerProtocol": "IP_OVER_ETHERNET"
                                    }
                                ],
                                "cpdId": "eth0"
                            },
                            {
                                "id": "eth1",
                                "cpProtocolInfo": [
                                    {
                                        "ipOverEthernet": {
                                            "addressRange": {
                                                "minAddress": "",
                                                "maxAddress": ""
                                            },
                                            "macAddress": "fa:16:3e:8f:6b:bd",
                                            "ipAddresses": [
                                                {
                                                    "type": "IPV4",
                                                    "addresses": [
                                                        "192.168.135.7"
                                                    ]
                                                }
                                            ]
                                        },
                                        "layerProtocol": "IP_OVER_ETHERNET"
                                    }
                                ],
                                "cpdId": "eth1"
                            }
                        ],
                        "flavourId": ""
                    },
                    "vnfProductName": "",
                    "vnfPkgId": "",
                    "vnfdVersion": ""
                },
                {
                    "vnfdId": "be55660e-8961-11ea-bc55-0242ac130003",
                    "vnfProvider": "",
                    "instantiationState": "INSTANTIATED",
                    "id": "b3a59708-589e-450d-b43c-ae3e5cc3c313",
                    "vnfSoftwareVersion": "",
                    "vimId": "abf0948e-1c5a-4423-bee8-451e0a2c4a38",
                    "instantiatedVnfInfo": {
                        "vnfState": "STARTED",
                        "extCpInfo": [
                            {
                                "id": "eth0",
                                "cpProtocolInfo": [
                                    {
                                        "ipOverEthernet": {
                                            "addressRange": {
                                                "minAddress": "",
                                                "maxAddress": ""
                                            },
                                            "macAddress": "fa:16:3e:27:b0:78",
                                            "ipAddresses": [
                                                {
                                                    "type": "IPV4",
                                                    "addresses": [
                                                        "10.20.5.27"
                                                    ]
                                                }
                                            ]
                                        },
                                        "layerProtocol": "IP_OVER_ETHERNET"
                                    }
                                ],
                                "cpdId": "eth0"
                            },
                            {
                                "id": "eth1",
                                "cpProtocolInfo": [
                                    {
                                        "ipOverEthernet": {
                                            "addressRange": {
                                                "minAddress": "",
                                                "maxAddress": ""
                                            },
                                            "macAddress": "fa:16:3e:03:56:13",
                                            "ipAddresses": [
                                                {
                                                    "type": "IPV4",
                                                    "addresses": [
                                                        "192.168.135.18"
                                                    ]
                                                }
                                            ]
                                        },
                                        "layerProtocol": "IP_OVER_ETHERNET"
                                    }
                                ],
                                "cpdId": "eth1"
                            }
                        ],
                        "flavourId": ""
                    },
                    "vnfProductName": "",
                    "vnfPkgId": "",
                    "vnfdVersion": ""
                }
            ],
            "nsdInfoId": "",
            "nsInstanceName": "NS_exp_86"
        },
        {
            "nsState": "NOT_INSTANTIATED",
            "id": "a23de455-7549-49ae-9547-f2826c0ee2d0",
            "nsdId": "72405148-8675-4e8f-9322-49f49ff5356e",
            "nsInstanceDescription": "NS for test2",
            "nsdInfoId": "",
            "nsInstanceName": "TEST2 NS"
        },
        {
            "nsState": "NOT_INSTANTIATED",
            "id": "e9482530-13bc-4724-a6c8-beebbb38b359",
            "nsdId": "72405148-8675-4e8f-9322-49f49ff5356e",
            "nsInstanceDescription": "NS for test2",
            "nsdInfoId": "",
            "nsInstanceName": "TEST2 NS"
        },
        {
            "nsState": "NOT_INSTANTIATED",
            "id": "0f74cbb3-3731-434a-acbb-841c6155f9d2",
            "nsdId": "72405148-8675-4e8f-9322-49f49ff5356e",
            "nsInstanceDescription": "NS for test2",
            "nsdInfoId": "",
            "nsInstanceName": "TEST2 NS"
        },
        {
            "nsState": "NOT_INSTANTIATED",
            "id": "2a104b72-21c1-403f-a967-103426f915af",
            "nsdId": "72405148-8675-4e8f-9322-49f49ff5356e",
            "nsInstanceDescription": "NS for test2",
            "nsdInfoId": "",
            "nsInstanceName": "TEST2 NS"
        }
    ],
    "status": 200,
    "headers": {
        "Content-Type": "application/json",
        "Transfer-Encoding": "chunked",
        "Link": "",
        "Version": "1.1.0-impl:etsi.org:ETSI_NFV_OpenAPI:1",
        "Date": "Wed, 10 Jun 2020 08:53:05 GMT"
    },
    "seconds": 0.06881100000000001
}</msg>
<status starttime="20200610 10:53:05.076" status="PASS" endtime="20200610 10:53:05.213"></status>
</kw>
<kw library="REST" name="Integer">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON integer.*</doc>
<arguments>
<arg>response status</arg>
<arg>200</arg>
</arguments>
<status starttime="20200610 10:53:05.214" status="PASS" endtime="20200610 10:53:05.215"></status>
</kw>
<status starttime="20200610 10:53:04.968" status="PASS" endtime="20200610 10:53:05.215" critical="yes"></status>
</test>
<test id="s1-t2" name="Get all NS Bad Request">
<kw library="REST" name="Set Headers">
<tags>
<tag>settings</tag>
</tags>
<doc>*Sets new request headers or updates the existing.*</doc>
<arguments>
<arg>{"Version":""}</arg>
</arguments>
<status starttime="20200610 10:53:05.217" status="PASS" endtime="20200610 10:53:05.217"></status>
</kw>
<kw library="REST" name="Get">
<tags>
<tag>http</tag>
</tags>
<doc>*Sends a GET request to the endpoint.*</doc>
<arguments>
<arg>/nslcm/v1/ns_instances</arg>
</arguments>
<msg timestamp="20200610 10:53:05.219" level="INFO">Starting new HTTP connection (1): localhost</msg>
<status starttime="20200610 10:53:05.217" status="PASS" endtime="20200610 10:53:05.222"></status>
</kw>
<kw library="REST" name="Integer">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON integer.*</doc>
<arguments>
<arg>response status</arg>
<arg>400</arg>
</arguments>
<status starttime="20200610 10:53:05.222" status="PASS" endtime="20200610 10:53:05.223"></status>
</kw>
<status starttime="20200610 10:53:05.216" status="PASS" endtime="20200610 10:53:05.223" critical="yes"></status>
</test>
<test id="s1-t3" name="Test 1 - Network Service ID creation. Positive test">
<kw library="NSLCMOperationKeywords" name="POST New nsInstance">
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Create NS instance by POST to /${apiName}/${apiVersion}/ns_instances</arg>
</arguments>
<msg timestamp="20200610 10:53:05.227" level="INFO">Create NS instance by POST to /nslcm/v1/ns_instances</msg>
<status starttime="20200610 10:53:05.226" status="PASS" endtime="20200610 10:53:05.227"></status>
</kw>
<kw library="REST" name="Set Headers">
<tags>
<tag>settings</tag>
</tags>
<doc>*Sets new request headers or updates the existing.*</doc>
<arguments>
<arg>{"Version":"1.0", "Content-Type":"application/json", "Accept":"application/json"}</arg>
</arguments>
<status starttime="20200610 10:53:05.227" status="PASS" endtime="20200610 10:53:05.227"></status>
</kw>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>{"nsdId":"72405148-8675-4e8f-9322-49f49ff5356e","nsName":"TEST1 NS","nsDescription": "NS for test1"}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200610 10:53:05.228" level="INFO">${body} = {"nsdId":"72405148-8675-4e8f-9322-49f49ff5356e","nsName":"TEST1 NS","nsDescription": "NS for test1"}</msg>
<status starttime="20200610 10:53:05.227" status="PASS" endtime="20200610 10:53:05.228"></status>
</kw>
<kw library="REST" name="Post">
<tags>
<tag>http</tag>
</tags>
<doc>*Sends a POST request to the endpoint.*</doc>
<arguments>
<arg>/${apiName}/${apiVersion}/ns_instances</arg>
<arg>${body}</arg>
</arguments>
<msg timestamp="20200610 10:53:05.230" level="INFO">Starting new HTTP connection (1): localhost</msg>
<status starttime="20200610 10:53:05.228" status="PASS" endtime="20200610 10:53:05.234"></status>
</kw>
<kw library="REST" name="Output">
<tags>
<tag>I/O</tag>
</tags>
<doc>*Outputs JSON to terminal or a file.*</doc>
<arguments>
<arg>response</arg>
</arguments>
<assign>
<var>${outputResponse}</var>
</assign>
<msg timestamp="20200610 10:53:05.235" level="INFO">
{
    "body": {
        "nsState": "NOT_INSTANTIATED",
        "id": "24856636-aa44-4bd3-b06f-7e528f30f7ac",
        "nsdId": "72405148-8675-4e8f-9322-49f49ff5356e",
        "nsInstanceDescription": "NS for test1",
        "_links": {
            "self": {
                "href": "http://localhost:8000/nslcm/v1/ns_instances/24856636-aa44-4bd3-b06f-7e528f30f7ac"
            }
        },
        "nsdInfoId": "",
        "nsInstanceName": "TEST1 NS"
    },
    "status": 201,
    "headers": {
        "Content-Length": "313",
        "Version": "1.1.0-impl:etsi.org:ETSI_NFV_OpenAPI:1",
        "Date": "Wed, 10 Jun 2020 08:53:05 GMT",
        "Location": "http://localhost:8000/nslcm/v1/ns_instances/24856636-aa44-4bd3-b06f-7e528f30f7ac",
        "Content-Type": "application/json"
    },
    "seconds": 0.003958000000000001
}</msg>
<msg timestamp="20200610 10:53:05.236" level="INFO">${outputResponse} = {'body': {'nsState': 'NOT_INSTANTIATED', 'id': '24856636-aa44-4bd3-b06f-7e528f30f7ac', 'nsdId': '72405148-8675-4e8f-9322-49f49ff5356e', 'nsInstanceDescription': 'NS for test1', '_links': {'self': {'hr...</msg>
<status starttime="20200610 10:53:05.235" status="PASS" endtime="20200610 10:53:05.236"></status>
</kw>
<kw library="BuiltIn" name="Set Global Variable">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>@{response}</arg>
<arg>${outputResponse}</arg>
</arguments>
<msg timestamp="20200610 10:53:05.238" level="INFO">@{response} = [ {'body': {'nsState': 'NOT_INSTANTIATED', 'id': '24856636-aa44-4bd3-b06f-7e528f30f7ac', 'nsdId': '72405148-8675-4e8f-9322-49f49ff5356e', 'nsInstanceDescription': 'NS for test1', '_links': {'self': {'...</msg>
<status starttime="20200610 10:53:05.236" status="PASS" endtime="20200610 10:53:05.238"></status>
</kw>
<status starttime="20200610 10:53:05.226" status="PASS" endtime="20200610 10:53:05.238"></status>
</kw>
<kw library="NSLCMOperationKeywords" name="Check HTTP Response Status Code Is">
<arguments>
<arg>201</arg>
</arguments>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validate Status code</arg>
</arguments>
<msg timestamp="20200610 10:53:05.239" level="INFO">Validate Status code</msg>
<status starttime="20200610 10:53:05.239" status="PASS" endtime="20200610 10:53:05.240"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal As Strings">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response[0]['status']}</arg>
<arg>${expected_status}</arg>
</arguments>
<msg timestamp="20200610 10:53:05.240" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status starttime="20200610 10:53:05.240" status="PASS" endtime="20200610 10:53:05.240"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Status code validated</arg>
</arguments>
<msg timestamp="20200610 10:53:05.241" level="INFO">Status code validated</msg>
<status starttime="20200610 10:53:05.241" status="PASS" endtime="20200610 10:53:05.241"></status>
</kw>
<status starttime="20200610 10:53:05.239" status="PASS" endtime="20200610 10:53:05.241"></status>
</kw>
<kw library="NSLCMOperationKeywords" name="Check HTTP Response Header Contains">
<arguments>
<arg>Location</arg>
</arguments>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response[0]['headers']}</arg>
<arg>${HEADER_TOCHECK}</arg>
</arguments>
<status starttime="20200610 10:53:05.242" status="PASS" endtime="20200610 10:53:05.242"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Header is present</arg>
</arguments>
<msg timestamp="20200610 10:53:05.243" level="INFO">Header is present</msg>
<status starttime="20200610 10:53:05.242" status="PASS" endtime="20200610 10:53:05.243"></status>
</kw>
<status starttime="20200610 10:53:05.241" status="PASS" endtime="20200610 10:53:05.243"></status>
</kw>
<kw library="NSLCMOperationKeywords" name="Get NS Identifier">
<assign>
<var>${id}</var>
</assign>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Get NS identifier from a response</arg>
</arguments>
<msg timestamp="20200610 10:53:05.244" level="INFO">Get NS identifier from a response</msg>
<status starttime="20200610 10:53:05.244" status="PASS" endtime="20200610 10:53:05.244"></status>
</kw>
<msg timestamp="20200610 10:53:05.245" level="INFO">${id} = 24856636-aa44-4bd3-b06f-7e528f30f7ac</msg>
<status starttime="20200610 10:53:05.243" status="PASS" endtime="20200610 10:53:05.245"></status>
</kw>
<kw library="NSLCMOperationKeywords" name="Check resource not_instantiated">
<arguments>
<arg>${id}</arg>
</arguments>
<kw library="REST" name="Set Headers">
<tags>
<tag>settings</tag>
</tags>
<doc>*Sets new request headers or updates the existing.*</doc>
<arguments>
<arg>{"Version":"1.0", "Accept":"application/json"}</arg>
</arguments>
<status starttime="20200610 10:53:05.245" status="PASS" endtime="20200610 10:53:05.246"></status>
</kw>
<kw library="REST" name="Get">
<tags>
<tag>http</tag>
</tags>
<doc>*Sends a GET request to the endpoint.*</doc>
<arguments>
<arg>/${apiName}/${apiVersion}/ns_instances/${nsInstanceId}</arg>
</arguments>
<msg timestamp="20200610 10:53:05.248" level="INFO">Starting new HTTP connection (1): localhost</msg>
<status starttime="20200610 10:53:05.246" status="PASS" endtime="20200610 10:53:05.252"></status>
</kw>
<kw library="REST" name="String">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response body nsState</arg>
<arg>NOT_INSTANTIATED</arg>
</arguments>
<status starttime="20200610 10:53:05.252" status="PASS" endtime="20200610 10:53:05.253"></status>
</kw>
<status starttime="20200610 10:53:05.245" status="PASS" endtime="20200610 10:53:05.253"></status>
</kw>
<kw type="teardown" library="NSLCMOperationKeywords" name="DELETE nsInstance">
<arguments>
<arg>${id}</arg>
</arguments>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Delete a network service instance</arg>
</arguments>
<msg timestamp="20200610 10:53:05.255" level="INFO">Delete a network service instance</msg>
<status starttime="20200610 10:53:05.254" status="PASS" endtime="20200610 10:53:05.255"></status>
</kw>
<kw library="REST" name="Delete">
<tags>
<tag>http</tag>
</tags>
<doc>*Sends a DELETE request to the endpoint.*</doc>
<arguments>
<arg>/${apiName}/${apiVersion}/ns_instances/${id}</arg>
</arguments>
<msg timestamp="20200610 10:53:05.257" level="INFO">Starting new HTTP connection (1): localhost</msg>
<status starttime="20200610 10:53:05.255" status="PASS" endtime="20200610 10:53:05.263"></status>
</kw>
<kw library="REST" name="Output">
<tags>
<tag>I/O</tag>
</tags>
<doc>*Outputs JSON to terminal or a file.*</doc>
<arguments>
<arg>response</arg>
</arguments>
<assign>
<var>${outputResponse}</var>
</assign>
<msg timestamp="20200610 10:53:05.264" level="INFO">
{
    "body": "",
    "status": 204,
    "headers": {
        "Version": "1.1.0-impl:etsi.org:ETSI_NFV_OpenAPI:1",
        "Content-Type": "application/json",
        "Date": "Wed, 10 Jun 2020 08:53:05 GMT"
    },
    "seconds": 0.0060030000000000005
}</msg>
<msg timestamp="20200610 10:53:05.264" level="INFO">${outputResponse} = {'body': '', 'status': 204, 'headers': {'Version': '1.1.0-impl:etsi.org:ETSI_NFV_OpenAPI:1', 'Content-Type': 'application/json', 'Date': 'Wed, 10 Jun 2020 08:53:05 GMT'}, 'seconds': 0.0060030000000000...</msg>
<status starttime="20200610 10:53:05.263" status="PASS" endtime="20200610 10:53:05.264"></status>
</kw>
<kw library="BuiltIn" name="Set Global Variable">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>@{response}</arg>
<arg>${outputResponse}</arg>
</arguments>
<msg timestamp="20200610 10:53:05.265" level="INFO">@{response} = [ {'body': '', 'status': 204, 'headers': {'Version': '1.1.0-impl:etsi.org:ETSI_NFV_OpenAPI:1', 'Content-Type': 'application/json', 'Date': 'Wed, 10 Jun 2020 08:53:05 GMT'}, 'seconds': 0.00600300000000...</msg>
<status starttime="20200610 10:53:05.265" status="PASS" endtime="20200610 10:53:05.265"></status>
</kw>
<status starttime="20200610 10:53:05.254" status="PASS" endtime="20200610 10:53:05.266"></status>
</kw>
<doc>Test purpose: The purpose of this test is to validate the creation of a NS ID.
Test type: Functional.
Related tests: None.
Priority: High.
Execution time: As required for the full test execution.
Configuration: MSNO_BASIC_CONF.
References: NS LCM API.
Applicability: None.
Pre-test conditions: NSD is onboarded in the Multi-Site Catalogue.
Nested NS are onboarded in each site NFVO.
Expected results: MSNO returns a positive response for the NS creation.
A notification is sent when NS creations process finishes.
NS ID is stored in the DB with NOT_INSTANTIATED status and can be queried using
external MSI API.</doc>
<status starttime="20200610 10:53:05.223" status="PASS" endtime="20200610 10:53:05.266" critical="yes"></status>
</test>
<test id="s1-t4" name="Test 1 - Network Service ID creation. Wrong version">
<kw library="NSLCMOperationKeywords" name="POST New nsInstance - Wrong version">
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Create NS instance by POST to /${apiName}/${apiVersion}/ns_instances with a wrong version parameter.</arg>
</arguments>
<msg timestamp="20200610 10:53:05.268" level="INFO">Create NS instance by POST to /nslcm/v1/ns_instances with a wrong version parameter.</msg>
<status starttime="20200610 10:53:05.267" status="PASS" endtime="20200610 10:53:05.268"></status>
</kw>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>{"Version":""}</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20200610 10:53:05.268" level="INFO">${headers} = {"Version":""}</msg>
<status starttime="20200610 10:53:05.268" status="PASS" endtime="20200610 10:53:05.268"></status>
</kw>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>{"nsdId":"72405148-8675-4e8f-9322-49f49ff5356e","nsName":"TEST1 NS","nsDescription": "NS for test1"}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200610 10:53:05.269" level="INFO">${body} = {"nsdId":"72405148-8675-4e8f-9322-49f49ff5356e","nsName":"TEST1 NS","nsDescription": "NS for test1"}</msg>
<status starttime="20200610 10:53:05.268" status="PASS" endtime="20200610 10:53:05.269"></status>
</kw>
<kw library="NSLCMOperationKeywords" name="POST nsInstance">
<arguments>
<arg>${headers}</arg>
<arg>${body}</arg>
</arguments>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Create NS instance by POST to /${apiName}/${apiVersion}/ns_instances.</arg>
</arguments>
<msg timestamp="20200610 10:53:05.271" level="INFO">Create NS instance by POST to /nslcm/v1/ns_instances.</msg>
<status starttime="20200610 10:53:05.271" status="PASS" endtime="20200610 10:53:05.272"></status>
</kw>
<kw library="REST" name="Set Headers">
<tags>
<tag>settings</tag>
</tags>
<doc>*Sets new request headers or updates the existing.*</doc>
<arguments>
<arg>${headers}</arg>
</arguments>
<status starttime="20200610 10:53:05.272" status="PASS" endtime="20200610 10:53:05.272"></status>
</kw>
<kw library="REST" name="Post">
<tags>
<tag>http</tag>
</tags>
<doc>*Sends a POST request to the endpoint.*</doc>
<arguments>
<arg>/${apiName}/${apiVersion}/ns_instances</arg>
<arg>${body}</arg>
</arguments>
<msg timestamp="20200610 10:53:05.274" level="INFO">Starting new HTTP connection (1): localhost</msg>
<status starttime="20200610 10:53:05.272" status="PASS" endtime="20200610 10:53:05.276"></status>
</kw>
<kw library="REST" name="Output">
<tags>
<tag>I/O</tag>
</tags>
<doc>*Outputs JSON to terminal or a file.*</doc>
<arguments>
<arg>response</arg>
</arguments>
<assign>
<var>${outputResponse}</var>
</assign>
<msg timestamp="20200610 10:53:05.277" level="INFO">
{
    "body": {
        "detail": "Required parameter Version not found In headers",
        "status": 400,
        "title": "Required parameter not found"
    },
    "status": 400,
    "headers": {
        "Content-Length": "112",
        "Version": "1.1.0-impl:etsi.org:ETSI_NFV_OpenAPI:1",
        "Content-Type": "application/json",
        "Date": "Wed, 10 Jun 2020 08:53:05 GMT"
    },
    "seconds": 0.001517
}</msg>
<msg timestamp="20200610 10:53:05.278" level="INFO">${outputResponse} = {'body': {'detail': 'Required parameter Version not found In headers', 'status': 400, 'title': 'Required parameter not found'}, 'status': 400, 'headers': {'Content-Length': '112', 'Version': '1.1.0-im...</msg>
<status starttime="20200610 10:53:05.276" status="PASS" endtime="20200610 10:53:05.278"></status>
</kw>
<kw library="BuiltIn" name="Set Global Variable">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>@{response}</arg>
<arg>${outputResponse}</arg>
</arguments>
<msg timestamp="20200610 10:53:05.278" level="INFO">@{response} = [ {'body': {'detail': 'Required parameter Version not found In headers', 'status': 400, 'title': 'Required parameter not found'}, 'status': 400, 'headers': {'Content-Length': '112', 'Version': '1.1.0-...</msg>
<status starttime="20200610 10:53:05.278" status="PASS" endtime="20200610 10:53:05.279"></status>
</kw>
<status starttime="20200610 10:53:05.269" status="PASS" endtime="20200610 10:53:05.279"></status>
</kw>
<status starttime="20200610 10:53:05.267" status="PASS" endtime="20200610 10:53:05.279"></status>
</kw>
<kw library="NSLCMOperationKeywords" name="Check HTTP Response Status Code Is">
<arguments>
<arg>400</arg>
</arguments>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validate Status code</arg>
</arguments>
<msg timestamp="20200610 10:53:05.280" level="INFO">Validate Status code</msg>
<status starttime="20200610 10:53:05.280" status="PASS" endtime="20200610 10:53:05.280"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal As Strings">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response[0]['status']}</arg>
<arg>${expected_status}</arg>
</arguments>
<msg timestamp="20200610 10:53:05.281" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status starttime="20200610 10:53:05.280" status="PASS" endtime="20200610 10:53:05.281"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Status code validated</arg>
</arguments>
<msg timestamp="20200610 10:53:05.281" level="INFO">Status code validated</msg>
<status starttime="20200610 10:53:05.281" status="PASS" endtime="20200610 10:53:05.281"></status>
</kw>
<status starttime="20200610 10:53:05.279" status="PASS" endtime="20200610 10:53:05.282"></status>
</kw>
<status starttime="20200610 10:53:05.266" status="PASS" endtime="20200610 10:53:05.282" critical="yes"></status>
</test>
<test id="s1-t5" name="Test 1 - Network Service ID creation. Wrong accept">
<kw library="NSLCMOperationKeywords" name="POST New nsInstance - Wrong accept">
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Create NS instance by POST to /${apiName}/${apiVersion}/ns_instances with a wrong accept.</arg>
</arguments>
<msg timestamp="20200610 10:53:05.284" level="INFO">Create NS instance by POST to /nslcm/v1/ns_instances with a wrong accept.</msg>
<status starttime="20200610 10:53:05.283" status="PASS" endtime="20200610 10:53:05.284"></status>
</kw>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>{"Accept":"", "Version":"1.0"}</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20200610 10:53:05.284" level="INFO">${headers} = {"Accept":"", "Version":"1.0"}</msg>
<status starttime="20200610 10:53:05.284" status="PASS" endtime="20200610 10:53:05.284"></status>
</kw>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>{"nsdId":"72405148-8675-4e8f-9322-49f49ff5356e","nsName":"TEST1 NS","nsDescription": "NS for test1"}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200610 10:53:05.285" level="INFO">${body} = {"nsdId":"72405148-8675-4e8f-9322-49f49ff5356e","nsName":"TEST1 NS","nsDescription": "NS for test1"}</msg>
<status starttime="20200610 10:53:05.285" status="PASS" endtime="20200610 10:53:05.285"></status>
</kw>
<kw library="NSLCMOperationKeywords" name="POST nsInstance">
<arguments>
<arg>${headers}</arg>
<arg>${body}</arg>
</arguments>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Create NS instance by POST to /${apiName}/${apiVersion}/ns_instances.</arg>
</arguments>
<msg timestamp="20200610 10:53:05.286" level="INFO">Create NS instance by POST to /nslcm/v1/ns_instances.</msg>
<status starttime="20200610 10:53:05.286" status="PASS" endtime="20200610 10:53:05.286"></status>
</kw>
<kw library="REST" name="Set Headers">
<tags>
<tag>settings</tag>
</tags>
<doc>*Sets new request headers or updates the existing.*</doc>
<arguments>
<arg>${headers}</arg>
</arguments>
<status starttime="20200610 10:53:05.286" status="PASS" endtime="20200610 10:53:05.287"></status>
</kw>
<kw library="REST" name="Post">
<tags>
<tag>http</tag>
</tags>
<doc>*Sends a POST request to the endpoint.*</doc>
<arguments>
<arg>/${apiName}/${apiVersion}/ns_instances</arg>
<arg>${body}</arg>
</arguments>
<msg timestamp="20200610 10:53:05.289" level="INFO">Starting new HTTP connection (1): localhost</msg>
<status starttime="20200610 10:53:05.287" status="PASS" endtime="20200610 10:53:05.291"></status>
</kw>
<kw library="REST" name="Output">
<tags>
<tag>I/O</tag>
</tags>
<doc>*Outputs JSON to terminal or a file.*</doc>
<arguments>
<arg>response</arg>
</arguments>
<assign>
<var>${outputResponse}</var>
</assign>
<msg timestamp="20200610 10:53:05.291" level="INFO">
{
    "body": {
        "detail": "Required parameter Accept not found In headers",
        "status": 400,
        "title": "Required parameter not found"
    },
    "status": 400,
    "headers": {
        "Content-Length": "111",
        "Version": "1.1.0-impl:etsi.org:ETSI_NFV_OpenAPI:1",
        "Content-Type": "application/json",
        "Date": "Wed, 10 Jun 2020 08:53:05 GMT"
    },
    "seconds": 0.001459
}</msg>
<msg timestamp="20200610 10:53:05.292" level="INFO">${outputResponse} = {'body': {'detail': 'Required parameter Accept not found In headers', 'status': 400, 'title': 'Required parameter not found'}, 'status': 400, 'headers': {'Content-Length': '111', 'Version': '1.1.0-imp...</msg>
<status starttime="20200610 10:53:05.291" status="PASS" endtime="20200610 10:53:05.292"></status>
</kw>
<kw library="BuiltIn" name="Set Global Variable">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>@{response}</arg>
<arg>${outputResponse}</arg>
</arguments>
<msg timestamp="20200610 10:53:05.293" level="INFO">@{response} = [ {'body': {'detail': 'Required parameter Accept not found In headers', 'status': 400, 'title': 'Required parameter not found'}, 'status': 400, 'headers': {'Content-Length': '111', 'Version': '1.1.0-i...</msg>
<status starttime="20200610 10:53:05.292" status="PASS" endtime="20200610 10:53:05.293"></status>
</kw>
<status starttime="20200610 10:53:05.285" status="PASS" endtime="20200610 10:53:05.293"></status>
</kw>
<status starttime="20200610 10:53:05.283" status="PASS" endtime="20200610 10:53:05.293"></status>
</kw>
<kw library="NSLCMOperationKeywords" name="Check HTTP Response Status Code Is">
<arguments>
<arg>400</arg>
</arguments>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validate Status code</arg>
</arguments>
<msg timestamp="20200610 10:53:05.294" level="INFO">Validate Status code</msg>
<status starttime="20200610 10:53:05.294" status="PASS" endtime="20200610 10:53:05.294"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal As Strings">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response[0]['status']}</arg>
<arg>${expected_status}</arg>
</arguments>
<msg timestamp="20200610 10:53:05.295" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status starttime="20200610 10:53:05.295" status="PASS" endtime="20200610 10:53:05.295"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Status code validated</arg>
</arguments>
<msg timestamp="20200610 10:53:05.296" level="INFO">Status code validated</msg>
<status starttime="20200610 10:53:05.295" status="PASS" endtime="20200610 10:53:05.296"></status>
</kw>
<status starttime="20200610 10:53:05.294" status="PASS" endtime="20200610 10:53:05.296"></status>
</kw>
<status starttime="20200610 10:53:05.282" status="PASS" endtime="20200610 10:53:05.296" critical="yes"></status>
</test>
<test id="s1-t6" name="Test 1 - Network Service ID creation. Wrong content-type">
<kw library="NSLCMOperationKeywords" name="POST New nsInstance - Wrong content-type">
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Create NS instance by POST to /${apiName}/${apiVersion}/ns_instances with a wrong content-type.</arg>
</arguments>
<msg timestamp="20200610 10:53:05.299" level="INFO">Create NS instance by POST to /nslcm/v1/ns_instances with a wrong content-type.</msg>
<status starttime="20200610 10:53:05.298" status="PASS" endtime="20200610 10:53:05.299"></status>
</kw>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>{"Accept":"application/json", "Content-Type":"", "Version":"1.0"}</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20200610 10:53:05.299" level="INFO">${headers} = {"Accept":"application/json", "Content-Type":"", "Version":"1.0"}</msg>
<status starttime="20200610 10:53:05.299" status="PASS" endtime="20200610 10:53:05.299"></status>
</kw>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>{"nsdId":"72405148-8675-4e8f-9322-49f49ff5356e","nsName":"TEST1 NS","nsDescription": "NS for test1"}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200610 10:53:05.300" level="INFO">${body} = {"nsdId":"72405148-8675-4e8f-9322-49f49ff5356e","nsName":"TEST1 NS","nsDescription": "NS for test1"}</msg>
<status starttime="20200610 10:53:05.299" status="PASS" endtime="20200610 10:53:05.300"></status>
</kw>
<kw library="NSLCMOperationKeywords" name="POST nsInstance">
<arguments>
<arg>${headers}</arg>
<arg>${body}</arg>
</arguments>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Create NS instance by POST to /${apiName}/${apiVersion}/ns_instances.</arg>
</arguments>
<msg timestamp="20200610 10:53:05.301" level="INFO">Create NS instance by POST to /nslcm/v1/ns_instances.</msg>
<status starttime="20200610 10:53:05.300" status="PASS" endtime="20200610 10:53:05.301"></status>
</kw>
<kw library="REST" name="Set Headers">
<tags>
<tag>settings</tag>
</tags>
<doc>*Sets new request headers or updates the existing.*</doc>
<arguments>
<arg>${headers}</arg>
</arguments>
<status starttime="20200610 10:53:05.301" status="PASS" endtime="20200610 10:53:05.301"></status>
</kw>
<kw library="REST" name="Post">
<tags>
<tag>http</tag>
</tags>
<doc>*Sends a POST request to the endpoint.*</doc>
<arguments>
<arg>/${apiName}/${apiVersion}/ns_instances</arg>
<arg>${body}</arg>
</arguments>
<msg timestamp="20200610 10:53:05.303" level="INFO">Starting new HTTP connection (1): localhost</msg>
<msg timestamp="20200610 10:53:05.325" level="WARN">Response body content is not JSON. Content-Type is: application/yaml</msg>
<status starttime="20200610 10:53:05.302" status="PASS" endtime="20200610 10:53:05.326"></status>
</kw>
<kw library="REST" name="Output">
<tags>
<tag>I/O</tag>
</tags>
<doc>*Outputs JSON to terminal or a file.*</doc>
<arguments>
<arg>response</arg>
</arguments>
<assign>
<var>${outputResponse}</var>
</assign>
<msg timestamp="20200610 10:53:05.326" level="INFO">
{
    "body": "title: Required parameter not found\nstatus: 400\ndetail: Required parameter Content-Type not found In headers\n",
    "status": 400,
    "headers": {
        "Content-Length": "109",
        "Version": "1.1.0-impl:etsi.org:ETSI_NFV_OpenAPI:1",
        "Content-Type": "application/yaml",
        "Date": "Wed, 10 Jun 2020 08:53:05 GMT"
    },
    "seconds": 0.001555
}</msg>
<msg timestamp="20200610 10:53:05.327" level="INFO">${outputResponse} = {'body': 'title: Required parameter not found\nstatus: 400\ndetail: Required parameter Content-Type not found In headers\n', 'status': 400, 'headers': {'Content-Length': '109', 'Version': '1.1.0-impl:...</msg>
<status starttime="20200610 10:53:05.326" status="PASS" endtime="20200610 10:53:05.327"></status>
</kw>
<kw library="BuiltIn" name="Set Global Variable">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>@{response}</arg>
<arg>${outputResponse}</arg>
</arguments>
<msg timestamp="20200610 10:53:05.328" level="INFO">@{response} = [ {'body': 'title: Required parameter not found\nstatus: 400\ndetail: Required parameter Content-Type not found In headers\n', 'status': 400, 'headers': {'Content-Length': '109', 'Version': '1.1.0-imp...</msg>
<status starttime="20200610 10:53:05.327" status="PASS" endtime="20200610 10:53:05.328"></status>
</kw>
<status starttime="20200610 10:53:05.300" status="PASS" endtime="20200610 10:53:05.328"></status>
</kw>
<status starttime="20200610 10:53:05.297" status="PASS" endtime="20200610 10:53:05.328"></status>
</kw>
<kw library="NSLCMOperationKeywords" name="Check HTTP Response Status Code Is">
<arguments>
<arg>400</arg>
</arguments>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validate Status code</arg>
</arguments>
<msg timestamp="20200610 10:53:05.329" level="INFO">Validate Status code</msg>
<status starttime="20200610 10:53:05.329" status="PASS" endtime="20200610 10:53:05.329"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal As Strings">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response[0]['status']}</arg>
<arg>${expected_status}</arg>
</arguments>
<msg timestamp="20200610 10:53:05.330" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status starttime="20200610 10:53:05.330" status="PASS" endtime="20200610 10:53:05.330"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Status code validated</arg>
</arguments>
<msg timestamp="20200610 10:53:05.331" level="INFO">Status code validated</msg>
<status starttime="20200610 10:53:05.330" status="PASS" endtime="20200610 10:53:05.331"></status>
</kw>
<status starttime="20200610 10:53:05.329" status="PASS" endtime="20200610 10:53:05.331"></status>
</kw>
<status starttime="20200610 10:53:05.297" status="PASS" endtime="20200610 10:53:05.331" critical="yes"></status>
</test>
<test id="s1-t7" name="Test 1 - Network Service ID creation. Wrong CreateNsRequest. Missing nsId">
<kw library="NSLCMOperationKeywords" name="POST New nsInstance - Wrong CreateNsRequest - Missing nsId">
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Create NS instance by POST to /${apiName}/${apiVersion}/ns_instances with missing nsId parameter.</arg>
</arguments>
<msg timestamp="20200610 10:53:05.333" level="INFO">Create NS instance by POST to /nslcm/v1/ns_instances with missing nsId parameter.</msg>
<status starttime="20200610 10:53:05.333" status="PASS" endtime="20200610 10:53:05.333"></status>
</kw>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>{"Version":"1.0", "Content-Type":"application/json", "Accept":"application/json"}</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20200610 10:53:05.334" level="INFO">${headers} = {"Version":"1.0", "Content-Type":"application/json", "Accept":"application/json"}</msg>
<status starttime="20200610 10:53:05.333" status="PASS" endtime="20200610 10:53:05.334"></status>
</kw>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>{"nsdid":"TEST1","nsName":"TEST1 NS","nsDescription": "NS for test1"}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200610 10:53:05.334" level="INFO">${body} = {"nsdid":"TEST1","nsName":"TEST1 NS","nsDescription": "NS for test1"}</msg>
<status starttime="20200610 10:53:05.334" status="PASS" endtime="20200610 10:53:05.334"></status>
</kw>
<kw library="NSLCMOperationKeywords" name="POST nsInstance">
<arguments>
<arg>${headers}</arg>
<arg>${body}</arg>
</arguments>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Create NS instance by POST to /${apiName}/${apiVersion}/ns_instances.</arg>
</arguments>
<msg timestamp="20200610 10:53:05.335" level="INFO">Create NS instance by POST to /nslcm/v1/ns_instances.</msg>
<status starttime="20200610 10:53:05.335" status="PASS" endtime="20200610 10:53:05.336"></status>
</kw>
<kw library="REST" name="Set Headers">
<tags>
<tag>settings</tag>
</tags>
<doc>*Sets new request headers or updates the existing.*</doc>
<arguments>
<arg>${headers}</arg>
</arguments>
<status starttime="20200610 10:53:05.336" status="PASS" endtime="20200610 10:53:05.337"></status>
</kw>
<kw library="REST" name="Post">
<tags>
<tag>http</tag>
</tags>
<doc>*Sends a POST request to the endpoint.*</doc>
<arguments>
<arg>/${apiName}/${apiVersion}/ns_instances</arg>
<arg>${body}</arg>
</arguments>
<msg timestamp="20200610 10:53:05.339" level="INFO">Starting new HTTP connection (1): localhost</msg>
<status starttime="20200610 10:53:05.337" status="PASS" endtime="20200610 10:53:05.341"></status>
</kw>
<kw library="REST" name="Output">
<tags>
<tag>I/O</tag>
</tags>
<doc>*Outputs JSON to terminal or a file.*</doc>
<arguments>
<arg>response</arg>
</arguments>
<assign>
<var>${outputResponse}</var>
</assign>
<msg timestamp="20200610 10:53:05.341" level="INFO">
{
    "body": {
        "detail": "missing required attribute One of the required in CreateNSRequest object",
        "status": 400,
        "title": "Missing attribute"
    },
    "status": 400,
    "headers": {
        "Content-Length": "126",
        "Version": "1.1.0-impl:etsi.org:ETSI_NFV_OpenAPI:1",
        "Content-Type": "application/json",
        "Date": "Wed, 10 Jun 2020 08:53:05 GMT"
    },
    "seconds": 0.001675
}</msg>
<msg timestamp="20200610 10:53:05.342" level="INFO">${outputResponse} = {'body': {'detail': 'missing required attribute One of the required in CreateNSRequest object', 'status': 400, 'title': 'Missing attribute'}, 'status': 400, 'headers': {'Content-Length': '126', 'Versi...</msg>
<status starttime="20200610 10:53:05.341" status="PASS" endtime="20200610 10:53:05.342"></status>
</kw>
<kw library="BuiltIn" name="Set Global Variable">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>@{response}</arg>
<arg>${outputResponse}</arg>
</arguments>
<msg timestamp="20200610 10:53:05.343" level="INFO">@{response} = [ {'body': {'detail': 'missing required attribute One of the required in CreateNSRequest object', 'status': 400, 'title': 'Missing attribute'}, 'status': 400, 'headers': {'Content-Length': '126', 'Ver...</msg>
<status starttime="20200610 10:53:05.342" status="PASS" endtime="20200610 10:53:05.343"></status>
</kw>
<status starttime="20200610 10:53:05.334" status="PASS" endtime="20200610 10:53:05.343"></status>
</kw>
<status starttime="20200610 10:53:05.332" status="PASS" endtime="20200610 10:53:05.344"></status>
</kw>
<kw library="NSLCMOperationKeywords" name="Check HTTP Response Status Code Is">
<arguments>
<arg>400</arg>
</arguments>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validate Status code</arg>
</arguments>
<msg timestamp="20200610 10:53:05.345" level="INFO">Validate Status code</msg>
<status starttime="20200610 10:53:05.344" status="PASS" endtime="20200610 10:53:05.345"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal As Strings">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response[0]['status']}</arg>
<arg>${expected_status}</arg>
</arguments>
<msg timestamp="20200610 10:53:05.345" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status starttime="20200610 10:53:05.345" status="PASS" endtime="20200610 10:53:05.345"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Status code validated</arg>
</arguments>
<msg timestamp="20200610 10:53:05.346" level="INFO">Status code validated</msg>
<status starttime="20200610 10:53:05.346" status="PASS" endtime="20200610 10:53:05.346"></status>
</kw>
<status starttime="20200610 10:53:05.344" status="PASS" endtime="20200610 10:53:05.346"></status>
</kw>
<status starttime="20200610 10:53:05.332" status="PASS" endtime="20200610 10:53:05.346" critical="yes"></status>
</test>
<test id="s1-t8" name="Test 1 - Network Service ID creation. Wrong CreateNsRequest. Missing nsName">
<kw library="NSLCMOperationKeywords" name="POST New nsInstance - Wrong CreateNsRequest - Missing nsName">
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Create NS instance by POST to /${apiName}/${apiVersion}/ns_instances with missing nsName</arg>
</arguments>
<msg timestamp="20200610 10:53:05.348" level="INFO">Create NS instance by POST to /nslcm/v1/ns_instances with missing nsName</msg>
<status starttime="20200610 10:53:05.348" status="PASS" endtime="20200610 10:53:05.349"></status>
</kw>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>{"Version":"1.0", "Content-Type":"application/json", "Accept":"application/json"}</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20200610 10:53:05.349" level="INFO">${headers} = {"Version":"1.0", "Content-Type":"application/json", "Accept":"application/json"}</msg>
<status starttime="20200610 10:53:05.349" status="PASS" endtime="20200610 10:53:05.349"></status>
</kw>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>{"nsdId":"72405148-8675-4e8f-9322-49f49ff5356e","nsname":"TEST1 NS","nsDescription": "NS for test1"}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200610 10:53:05.350" level="INFO">${body} = {"nsdId":"72405148-8675-4e8f-9322-49f49ff5356e","nsname":"TEST1 NS","nsDescription": "NS for test1"}</msg>
<status starttime="20200610 10:53:05.349" status="PASS" endtime="20200610 10:53:05.350"></status>
</kw>
<kw library="NSLCMOperationKeywords" name="POST nsInstance">
<arguments>
<arg>${headers}</arg>
<arg>${body}</arg>
</arguments>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Create NS instance by POST to /${apiName}/${apiVersion}/ns_instances.</arg>
</arguments>
<msg timestamp="20200610 10:53:05.351" level="INFO">Create NS instance by POST to /nslcm/v1/ns_instances.</msg>
<status starttime="20200610 10:53:05.350" status="PASS" endtime="20200610 10:53:05.351"></status>
</kw>
<kw library="REST" name="Set Headers">
<tags>
<tag>settings</tag>
</tags>
<doc>*Sets new request headers or updates the existing.*</doc>
<arguments>
<arg>${headers}</arg>
</arguments>
<status starttime="20200610 10:53:05.351" status="PASS" endtime="20200610 10:53:05.351"></status>
</kw>
<kw library="REST" name="Post">
<tags>
<tag>http</tag>
</tags>
<doc>*Sends a POST request to the endpoint.*</doc>
<arguments>
<arg>/${apiName}/${apiVersion}/ns_instances</arg>
<arg>${body}</arg>
</arguments>
<msg timestamp="20200610 10:53:05.353" level="INFO">Starting new HTTP connection (1): localhost</msg>
<status starttime="20200610 10:53:05.352" status="PASS" endtime="20200610 10:53:05.355"></status>
</kw>
<kw library="REST" name="Output">
<tags>
<tag>I/O</tag>
</tags>
<doc>*Outputs JSON to terminal or a file.*</doc>
<arguments>
<arg>response</arg>
</arguments>
<assign>
<var>${outputResponse}</var>
</assign>
<msg timestamp="20200610 10:53:05.356" level="INFO">
{
    "body": {
        "detail": "missing required attribute One of the required in CreateNSRequest object",
        "status": 400,
        "title": "Missing attribute"
    },
    "status": 400,
    "headers": {
        "Content-Length": "126",
        "Version": "1.1.0-impl:etsi.org:ETSI_NFV_OpenAPI:1",
        "Content-Type": "application/json",
        "Date": "Wed, 10 Jun 2020 08:53:05 GMT"
    },
    "seconds": 0.0015409999999999998
}</msg>
<msg timestamp="20200610 10:53:05.357" level="INFO">${outputResponse} = {'body': {'detail': 'missing required attribute One of the required in CreateNSRequest object', 'status': 400, 'title': 'Missing attribute'}, 'status': 400, 'headers': {'Content-Length': '126', 'Versi...</msg>
<status starttime="20200610 10:53:05.356" status="PASS" endtime="20200610 10:53:05.357"></status>
</kw>
<kw library="BuiltIn" name="Set Global Variable">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>@{response}</arg>
<arg>${outputResponse}</arg>
</arguments>
<msg timestamp="20200610 10:53:05.358" level="INFO">@{response} = [ {'body': {'detail': 'missing required attribute One of the required in CreateNSRequest object', 'status': 400, 'title': 'Missing attribute'}, 'status': 400, 'headers': {'Content-Length': '126', 'Ver...</msg>
<status starttime="20200610 10:53:05.357" status="PASS" endtime="20200610 10:53:05.358"></status>
</kw>
<status starttime="20200610 10:53:05.350" status="PASS" endtime="20200610 10:53:05.358"></status>
</kw>
<status starttime="20200610 10:53:05.348" status="PASS" endtime="20200610 10:53:05.358"></status>
</kw>
<kw library="NSLCMOperationKeywords" name="Check HTTP Response Status Code Is">
<arguments>
<arg>400</arg>
</arguments>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validate Status code</arg>
</arguments>
<msg timestamp="20200610 10:53:05.359" level="INFO">Validate Status code</msg>
<status starttime="20200610 10:53:05.359" status="PASS" endtime="20200610 10:53:05.359"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal As Strings">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response[0]['status']}</arg>
<arg>${expected_status}</arg>
</arguments>
<msg timestamp="20200610 10:53:05.360" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status starttime="20200610 10:53:05.360" status="PASS" endtime="20200610 10:53:05.360"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Status code validated</arg>
</arguments>
<msg timestamp="20200610 10:53:05.361" level="INFO">Status code validated</msg>
<status starttime="20200610 10:53:05.360" status="PASS" endtime="20200610 10:53:05.361"></status>
</kw>
<status starttime="20200610 10:53:05.359" status="PASS" endtime="20200610 10:53:05.361"></status>
</kw>
<status starttime="20200610 10:53:05.347" status="PASS" endtime="20200610 10:53:05.361" critical="yes"></status>
</test>
<test id="s1-t9" name="Test 1 - Network Service ID creation. Wrong CreateNsRequest. Missing nsDescription">
<kw library="NSLCMOperationKeywords" name="POST New nsInstance - Wrong CreateNsRequest - Missing nsDescription">
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Create NS instance by POST to /${apiName}/${apiVersion}/ns_instances with missing nsDescription</arg>
</arguments>
<msg timestamp="20200610 10:53:05.363" level="INFO">Create NS instance by POST to /nslcm/v1/ns_instances with missing nsDescription</msg>
<status starttime="20200610 10:53:05.363" status="PASS" endtime="20200610 10:53:05.363"></status>
</kw>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>{"Version":"1.0", "Content-Type":"application/json", "Accept":"application/json"}</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20200610 10:53:05.364" level="INFO">${headers} = {"Version":"1.0", "Content-Type":"application/json", "Accept":"application/json"}</msg>
<status starttime="20200610 10:53:05.364" status="PASS" endtime="20200610 10:53:05.364"></status>
</kw>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>{"nsdId":"72405148-8675-4e8f-9322-49f49ff5356e","nsName":"TEST1 NS","nsdescription": "NS for test1"}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20200610 10:53:05.365" level="INFO">${body} = {"nsdId":"72405148-8675-4e8f-9322-49f49ff5356e","nsName":"TEST1 NS","nsdescription": "NS for test1"}</msg>
<status starttime="20200610 10:53:05.364" status="PASS" endtime="20200610 10:53:05.365"></status>
</kw>
<kw library="NSLCMOperationKeywords" name="POST nsInstance">
<arguments>
<arg>${headers}</arg>
<arg>${body}</arg>
</arguments>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Create NS instance by POST to /${apiName}/${apiVersion}/ns_instances.</arg>
</arguments>
<msg timestamp="20200610 10:53:05.367" level="INFO">Create NS instance by POST to /nslcm/v1/ns_instances.</msg>
<status starttime="20200610 10:53:05.366" status="PASS" endtime="20200610 10:53:05.367"></status>
</kw>
<kw library="REST" name="Set Headers">
<tags>
<tag>settings</tag>
</tags>
<doc>*Sets new request headers or updates the existing.*</doc>
<arguments>
<arg>${headers}</arg>
</arguments>
<status starttime="20200610 10:53:05.367" status="PASS" endtime="20200610 10:53:05.368"></status>
</kw>
<kw library="REST" name="Post">
<tags>
<tag>http</tag>
</tags>
<doc>*Sends a POST request to the endpoint.*</doc>
<arguments>
<arg>/${apiName}/${apiVersion}/ns_instances</arg>
<arg>${body}</arg>
</arguments>
<msg timestamp="20200610 10:53:05.369" level="INFO">Starting new HTTP connection (1): localhost</msg>
<status starttime="20200610 10:53:05.368" status="PASS" endtime="20200610 10:53:05.372"></status>
</kw>
<kw library="REST" name="Output">
<tags>
<tag>I/O</tag>
</tags>
<doc>*Outputs JSON to terminal or a file.*</doc>
<arguments>
<arg>response</arg>
</arguments>
<assign>
<var>${outputResponse}</var>
</assign>
<msg timestamp="20200610 10:53:05.373" level="INFO">
{
    "body": {
        "detail": "missing required attribute One of the required in CreateNSRequest object",
        "status": 400,
        "title": "Missing attribute"
    },
    "status": 400,
    "headers": {
        "Content-Length": "126",
        "Version": "1.1.0-impl:etsi.org:ETSI_NFV_OpenAPI:1",
        "Content-Type": "application/json",
        "Date": "Wed, 10 Jun 2020 08:53:05 GMT"
    },
    "seconds": 0.001729
}</msg>
<msg timestamp="20200610 10:53:05.374" level="INFO">${outputResponse} = {'body': {'detail': 'missing required attribute One of the required in CreateNSRequest object', 'status': 400, 'title': 'Missing attribute'}, 'status': 400, 'headers': {'Content-Length': '126', 'Versi...</msg>
<status starttime="20200610 10:53:05.372" status="PASS" endtime="20200610 10:53:05.374"></status>
</kw>
<kw library="BuiltIn" name="Set Global Variable">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>@{response}</arg>
<arg>${outputResponse}</arg>
</arguments>
<msg timestamp="20200610 10:53:05.375" level="INFO">@{response} = [ {'body': {'detail': 'missing required attribute One of the required in CreateNSRequest object', 'status': 400, 'title': 'Missing attribute'}, 'status': 400, 'headers': {'Content-Length': '126', 'Ver...</msg>
<status starttime="20200610 10:53:05.374" status="PASS" endtime="20200610 10:53:05.375"></status>
</kw>
<status starttime="20200610 10:53:05.365" status="PASS" endtime="20200610 10:53:05.375"></status>
</kw>
<status starttime="20200610 10:53:05.362" status="PASS" endtime="20200610 10:53:05.376"></status>
</kw>
<kw library="NSLCMOperationKeywords" name="Check HTTP Response Status Code Is">
<arguments>
<arg>400</arg>
</arguments>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Validate Status code</arg>
</arguments>
<msg timestamp="20200610 10:53:05.377" level="INFO">Validate Status code</msg>
<status starttime="20200610 10:53:05.377" status="PASS" endtime="20200610 10:53:05.377"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal As Strings">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response[0]['status']}</arg>
<arg>${expected_status}</arg>
</arguments>
<msg timestamp="20200610 10:53:05.378" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status starttime="20200610 10:53:05.377" status="PASS" endtime="20200610 10:53:05.378"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Status code validated</arg>
</arguments>
<msg timestamp="20200610 10:53:05.379" level="INFO">Status code validated</msg>
<status starttime="20200610 10:53:05.378" status="PASS" endtime="20200610 10:53:05.379"></status>
</kw>
<status starttime="20200610 10:53:05.376" status="PASS" endtime="20200610 10:53:05.379"></status>
</kw>
<status starttime="20200610 10:53:05.362" status="PASS" endtime="20200610 10:53:05.379" critical="yes"></status>
</test>
<status starttime="20200610 10:53:04.685" status="PASS" endtime="20200610 10:53:05.381"></status>
</suite>
<statistics>
<total>
<stat pass="9" fail="0">Critical Tests</stat>
<stat pass="9" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat id="s1" name="CreateNSInstance" fail="0" pass="9">CreateNSInstance</stat>
</suite>
</statistics>
<errors>
<msg timestamp="20200610 10:53:05.325" level="WARN">Response body content is not JSON. Content-Type is: application/yaml</msg>
</errors>
</robot>
